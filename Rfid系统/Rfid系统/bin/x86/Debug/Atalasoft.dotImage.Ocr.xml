<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Atalasoft.dotImage.Ocr</name>
    </assembly>
    <members>
        <member name="T:Atalasoft.Ocr.OcrPageStage">
            <summary> OcrPageStage represents the current stage of page translation. </summary>
            <remarks> This enumeration is used by the <see cref="E:Atalasoft.Ocr.OcrEngine.PageProgress"/> event in <see cref="T:Atalasoft.Ocr.OcrEngine"/>.
            </remarks>
        </member>
        <member name="F:Atalasoft.Ocr.OcrPageStage.Preprocessing">
            <summary> Preprocessing has begun or is in progress. </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrPageStage.Location">
            <summary> Location has begun or is in progress. </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrPageStage.Analysis">
            <summary> Analysis has begun or is in progress. </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrPageStage.Recognition">
            <summary> Recognition has begun or is in progress. </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrPageStage.Export">
            <summary> Exporting has begun or is in progress. </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrPageStage.Canceling">
            <summary> The engine is canceling the last operation. </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrPageStage.Postprocessing">
            <summary> Post processing has begun or is in progress. </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrPageStage.Spellchecking">
            <summary> Spellchecking has begun or is in progress. </summary>
        </member>
        <member name="T:Atalasoft.Ocr.OcrDocumentStage">
            <summary> OcrDocumentStage represents the current stage of document translation. </summary>
            <remarks> This enumeration is used by the <see cref="E:Atalasoft.Ocr.OcrEngine.DocumentProgress"/> event in <see cref="T:Atalasoft.Ocr.OcrEngine"/>.
            </remarks>
        </member>
        <member name="F:Atalasoft.Ocr.OcrDocumentStage.BeginDocument">
            <summary> A new document is being translated. </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrDocumentStage.BeginPage">
            <summary> A new page is being translated. </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrDocumentStage.EndPage">
            <summary> A page has finished translation. </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrDocumentStage.EndDocument">
            <summary> A document has finished translation. </summary>
        </member>
        <member name="T:Atalasoft.Ocr.OcrPageElementAction">
            <summary> This enumeration defines actions that are being taken on an Ocr page element. </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrPageElementAction.None">
            <summary> No action is being taken </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrPageElementAction.Set">
            <summary> An element is being set </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrPageElementAction.Insert">
            <summary> An element is being inserted </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrPageElementAction.Remove">
            <summary> An element is being removed </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrPageElementAction.Clear">
            <summary> An element is being cleared </summary>
        </member>
        <member name="T:Atalasoft.Ocr.OcrTextRotation">
            <summary> This enumeration is used to define coarse rotation of text in a page element. </summary>
            <remarks> Each of these enumerations is defined to have a value that is equal to the rotation in degrees.  In the
            future, the AtalaOcr name space may support arbitrary rotation of text by degrees.  These definitions will then
            provide a convenient way to transitions to this model. </remarks>
        </member>
        <member name="F:Atalasoft.Ocr.OcrTextRotation.None">
            <summary> No rotation. </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrTextRotation.Clockwise90">
            <summary> The text is rotated 90 degrees clockwise. </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrTextRotation.Clockwise180">
            <summary> The text is rotated 180 degrees clockwise. </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrTextRotation.Clockwise270">
            <summary> The text is rotated 270 degrees clockwise. </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrTextRotation.CounterClockwise90">
            <summary> The text is rotated 90 degrees counterclockwise. </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrTextRotation.CounterClockwise180">
            <summary> The text is rotated 180 degrees counterclockwise. </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrTextRotation.CounterClockwise270">
            <summary> The text is rotated 270 degrees counterclockwise. </summary>
        </member>
        <member name="T:Atalasoft.Ocr.OcrDocumentMetadataKey">
            <summary> This enumeration is used to define keys for accessing document metadata. </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrDocumentMetadataKey.DocumentInfo">
            <summary> This is a key used to access general document information metadata. </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrDocumentMetadataKey.PdfDocumentInfo">
            <summary> This is a key used to access Pdf specific document information metadata </summary>
        </member>
        <member name="T:Atalasoft.Ocr.OcrDocumentInfoKey">
            <summary> This enumeration defines a set of keys that are used to access metadata within an <see
            cref="T:Atalasoft.Ocr.OcrDocument"/>. </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrDocumentInfoKey.Title">
            <summary> This key is used to access the Title of the document </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrDocumentInfoKey.Subject">
            <summary> This key is used to access the Subject of the document </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrDocumentInfoKey.Author">
            <summary> This key is used to access the Author of the document </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrDocumentInfoKey.Creator">
            <summary> This key is used to access the Creator of the document </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrDocumentInfoKey.Producer">
            <summary> This key is used to access the Producer of the document </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrDocumentInfoKey.Keywords">
            <summary> This key is used to access keywords defined in the document </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrDocumentInfoKey.CreationDate">
            <summary> This key is used to access the creation date of the document </summary>
        </member>
        <member name="T:Atalasoft.Ocr.OcrPageMetadataKey">
            <summary> This enumeration is used to define keys for accessing page metadata. </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrPageMetadataKey.PageInfo">
            <summary> This key defines page info metadata </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrPageMetadataKey.PdfPageInfo">
            <summary> This key defines page info metadata specific to PDF </summary>
        </member>
        <member name="T:Atalasoft.Ocr.OcrBarcodeSymbologies">
            <summary> Lists standard barcode symbologies that can be used in various OCR engines that support barcode
            recognition. </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.None">
            <summary> No barcode </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.Codabar">
            <summary> Codabar </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.Code11">
            <summary> Code 11 </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.Code128">
            <summary> Code 128.  For more information see 
            <a href="http://en.wikipedia.org/wiki/Code_128">http://en.wikipedia.org/wiki/Code_128</a></summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.Code32">
            <summary>
            <para>also known as: <c>Base 32</c>, <c>Pharma 32/39</c>, and <c>Italian Pharmacode</c>.
            Note, <I>not</I> the same as <c>Pharmacode-Laetus</c>.</para>
            <para>Code 32 barcodes are similar to Code 39 barcodes with a different encodation.</para>
            <para>If both <see cref="F:Atalasoft.Ocr.OcrBarcodeSymbologies.Code39"/>
            and <see cref="F:Atalasoft.Ocr.OcrBarcodeSymbologies.Code32"/> are enabled, some symbols (barcodes) can
            be returned twice, once for each symbology.</para> </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.Code39">
            <summary> Code 39 </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.Code93">
            <summary> Code 93 </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.Datamatrix">
            <summary> Data Matrix </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.Ean13">
            <summary> EAN13 </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.Ean8">
            <summary> EAN8 </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.I2of5">
            <summary> Interleaved 2 of 5 </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.Patch">
            <summary> Patch </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.Pdf417">
            <summary> PDF417 </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.Plus2">
            <summary> 2-digit supplementals associated with EAN and UPC symbology barcodes. </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.Plus5">
            <summary> 5-digit supplementals associated with EAN and UPC symbology barcodes. </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.Qr">
            <summary> QR Code </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.Rss14">
            <summary> RSS-14
            <para>RSS-14 alternate formats are read as well as the regular format. The alternate formats are truncated, stacked,
            and stacked omnidirectional. It is recommended that the alignment of truncated and stacked symbols be close to
            horizontal or vertical.</para> </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.RssLimited">
            <summary> RSS Limited
            <para>It is recommended that symbols whose height is near to the specified minimum be aligned close to horizontal or
            vertical.</para> </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.Telepen">
            <summary> Telepen </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.Upca">
            <summary> UPC A
            <para>UPC A barcodes are identical to EAN13 barcodes with the same encodation except for an additional leading zero
            on the latter. </para>
            </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.Upce">
            <summary> UPC E
            <para>UPC E encodations are a compressed form of UPC A. </para> </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.Interleaved2of5">
            <summary> Interleaved 2 of 5 </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.Iata2of5">
            <summary>  IATA 2 of 5 </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.Matrix25">
            <summary>  Matric 25 </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.Ucc128">
            <summary>  UCC 128 </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.Postnet">
            <summary>  Postnet </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.Industrial2of5">
            <summary> Iris specific: Industrial 2 of 5 </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.Ean5">
            <summary> Iris specific: EAN5 </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.Ean2">
            <summary> Iris specific: EAN2 </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.Msi">
            <summary> Iris specific: MSI </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.MsiPh">
            <summary> Iris specific: MSI Ph </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.D2of5">
            <summary> Iris specific: Discrete 2 of 5 </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.Code39Extended">
            <summary> Iris specific: Code 39 Extended </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.Code39Hibc">
            <summary> Iris specific: Code 39 HIBC </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.Postnet32">
            <summary> Iris specific: Postnet32 </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.Postnet52">
            <summary> Iris specific: Postnet52 </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.Postnet62">
            <summary> Iris specific: Postnet62 </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.UpceExtended">
            <summary> Iris specific: UPC E Extended </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.DataLogic2of5">
            <summary> Iris specific: DataLogic 2 of 5 </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.Code39OutOfSpec">
            <summary> Iris specific: Code 39 Out of Spec </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.Code128OutOfSpec">
            <summary> Iris specific: Code 128 Out of Spec </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.CodabarOutOfSpec">
            <summary> Iris specific: Codabar Out of Spec </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.Reverse2of5">
            <summary>  Iris specific: Reverse 2 of 5. </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.AutoDetect">
            <summary>  Iris specific: auto detect barcode symbology. </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.Aztec">
            <summary>  Aztec Code </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.IntelligentMail">
            <summary>  Intelligent Mail </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrBarcodeSymbologies.MaxiCode">
            <summary>  MaxiCode </summary>
        </member>
        <member name="T:Atalasoft.Ocr.OcrTextKind">
            <summary>
            Represents type of text detected by OCR engine.
            </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrTextKind.MachinePrint">
            <summary>
            Machine printed text.
            </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrTextKind.HandPrint">
            <summary>
            Human (hand) printed text.
            </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrTextKind.Any">
            <summary>
            Any text kind.
            </summary>
        </member>
        <member name="T:Atalasoft.Ocr.OcrSymbolSet">
            <summary>
            The list of Symbols for Ocr
            </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrSymbolSet.None">
            <summary>No symbol</summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrSymbolSet.Alphabetic">
            <summary>Alphabetic, uppercase and lowercase</summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrSymbolSet.AlphabeticUppercase">
            <summary>AlphabeticUppercase, uppercase only</summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrSymbolSet.AlphabeticLowercase">
            <summary>AlphabeticLowercase, lowercase only</summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrSymbolSet.Numeric">
            <summary>Numeric, numeric digits</summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrSymbolSet.AlphaNumeric">
            <summary>AlphaNumeric, alphabetic and numeric</summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrSymbolSet.AlphaNumericUppercase">
            <summary>AlphaNumericUppercase, alphabetic and numeric, uppercase only</summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrSymbolSet.AlphaNumericLowercase">
            <summary>AlphaNumericLowercase, alphabetic and numeric, lowercase only</summary>
        </member>
        <member name="T:Atalasoft.Ocr.IFontMapper">
            <summary> <STRONG>IFontMapper</STRONG> provides a mechanism for translating fonts identified in the process of OCR
            from one set of characteristics to another. </summary>
            <remarks> The <STRONG>IFontMapper</STRONG> interface is used to define a class which will transform a font with one
            set of characteristics to another.  A simple implementation of the <STRONG>IFontMapper</STRONG> interface is
            provided by the <see cref="T:Atalasoft.Ocr.BasicFontMapper"/> class. </remarks>
            <seealso> BasicFontMapper Class </seealso>
        </member>
        <member name="M:Atalasoft.Ocr.IFontMapper.MapToFontName(System.String)">
            <summary> This method maps a font name to another name. </summary>
            <returns> A string representing the name of the actual font that will be used. </returns>
            <remarks> This method makes it possible to provide altername fonts for recognized fonts in an OCR engine. </remarks>
            <param name="name"> The name of the desired font. </param>
        </member>
        <member name="M:Atalasoft.Ocr.IFontMapper.MapToFontFamily(System.String)">
            <returns> The new FontFamily that will be used. </returns>
            <remarks> A recognized document may have fonts that are not part of the current system.  IFontMapper can be used to
            supply replacement fonts under those circumstances or provide a set of richer fonts for engines that can only
            recognize generic font families. </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.IFontMapper.MapToFontFamily(System.Drawing.Text.GenericFontFamilies)">
            <returns> The new FontFamily that will be used. </returns>
            <remarks> A recognized document may have fonts that are not part of the current system.  IFontMapper can be used to
            supply replacement fonts under those circumstances or provide a set of richer fonts for engines that can only
            recognize generic font families. </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.IFontMapper.RemapStyle(System.Drawing.FontFamily,System.Drawing.FontStyle)">
            <returns> A new <see cref="T:System.Drawing.FontStyle"/> to be used instead of the one supplied. </returns>
            <remarks> It is acceptable to simply return the <c>FontStyle</c> provided.  This method is provided by
            those who want very fine grain control over font usage in a recognized image. </remarks>
            <summary> <c>RemapStyle</c> maps an input <see cref="T:System.Drawing.FontFamily"/> and style to a new 
            <c>FontStyle</c>.</summary>
            <param name="family"> The <see cref="T:System.Drawing.FontFamily"/> of the font being remapped. </param>
            <param name="style"> The <see cref="T:System.Drawing.FontStyle"/> of the font being remapped. </param>
        </member>
        <member name="T:Atalasoft.Ocr.IFontBuilder">
            <summary> <c>IFontBuilder</c> provides a mechanism to control how fonts are constructed. </summary>
            <remarks> The <c>IFontBuilder</c> interface is used to define a class that will manage the construction of
            Fonts in a recognized document.  A simple implementation of <c>IFontBuilder</c> is provided by the
            <see cref="T:Atalasoft.Ocr.BasicFontBuilder"/> class. </remarks>
            <seealso cref="T:Atalasoft.Ocr.BasicFontBuilder"/>
        </member>
        <member name="M:Atalasoft.Ocr.IFontBuilder.BuildFont(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle)">
            <summary> Build a font in the specified font family, size, and style. </summary>
            <returns> The constructed font. </returns>
            <remarks> <para>It is expected that an implementation of <see cref="T:Atalasoft.Ocr.IFontBuilder"/> will only create any unique font
            once, no matter how many times it is called with the same parameters.  Any mechanism for caching is left up to the
            implementor.</para>
            <para>Although it is possible to return a font which is a different <see cref="T:System.Drawing.FontFamily"/> or 
            <see cref="T:System.Drawing.FontStyle"/> as that requested, that process is mapping and should be handled by an object that
            impements the IFontMapper interface.</para> </remarks>
            <param name="family"> The <see cref="T:System.Drawing.FontFamily"/> to construct. </param>
            <param name="size"> The size of the font to construct, in points. </param>
            <param name="style"> The <see cref="T:System.Drawing.FontStyle"/> of the font to construct. </param>
        </member>
        <member name="M:Atalasoft.Ocr.IFontBuilder.Clear">
            <summary> Clears any old information in the font builder. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.IFontBuilder.Fonts">
            <summary> Provide a list of all font objects that have requested in this font builder. </summary>
        </member>
        <member name="T:Atalasoft.Ocr.BasicFontMapper">
            <summary> <c>BasicFontMapper</c> is a simple implementation of the <see cref="T:Atalasoft.Ocr.IFontMapper"/> interface.
            </summary>
            <remarks> <c>BasicFontMapper </c>will attempt to find the font exactly as specified.  If it cannot find
            the font it will substitute Arial.  <c>BasicFontMapper</c> will map generic font families onto the system
            generic font families. </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.BasicFontMapper.#ctor">
            <summary> Constructs a new <STRONG>BasicFontMapper</STRONG> object. </summary>
        </member>
        <member name="M:Atalasoft.Ocr.BasicFontMapper.MapToFontName(System.String)">
            <summary> Maps a string representing a font name to a new font name. </summary>
            <returns> A string representing the name of the actual font that will be used. </returns>
            <remarks> BasicFontMapper returns the name as is, if it is defined on the system, "Arial" otherwise. </remarks>
            <param name="name"> The name of the desired font. </param>
        </member>
        <member name="M:Atalasoft.Ocr.BasicFontMapper.MapToFontFamily(System.String)">
            <summary> Map a given font family represented by the string to a FontFamily object. </summary>
            <param name="name"> The name of the font. </param>
            <summary> Maps a string representing a font family name to a <see cref="T:System.Drawing.FontFamily"/> object. </summary>
            <returns> A <see cref="T:System.Drawing.FontFamily"/> object representing the
            request font.  If the font isn't available, switch to Arial. </returns>
            <remarks> BasicFontMapper will cache <see cref="T:System.Drawing.FontFamily"/> objects. </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.BasicFontMapper.MapToFontFamily(System.Drawing.Text.GenericFontFamilies)">
            <summary> Provide a FontFamily for a generic font family. </summary>
            <param name="generic"> A GenericFontFamily recognized by an OCR engine. </param>
        </member>
        <member name="M:Atalasoft.Ocr.BasicFontMapper.RemapStyle(System.Drawing.FontFamily,System.Drawing.FontStyle)">
            <summary> Map a given font style to a new one. </summary>
            <returns> A new style to use for this font. </returns>
            <remarks> BasicFontMapper returns all styles unchanged. </remarks>
            <param name="family"> The FontFamily of the requested font. </param>
            <param name="style"> The requested style. </param>
        </member>
        <member name="M:Atalasoft.Ocr.BasicFontMapper.Dispose">
            <summary> Dispose memory used by the font mapper. </summary>
            <overloads> Disposes memory used by the font mapper object. </overloads>
        </member>
        <member name="M:Atalasoft.Ocr.BasicFontMapper.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Atalasoft.Ocr.BasicFontMapper.Finalize">
            <summary>
            <see cref="T:Atalasoft.Ocr.BasicFontMapper"/> finalizer.
            </summary>
        </member>
        <member name="T:Atalasoft.Ocr.BasicFontBuilder">
            <summary> BasicFontBuilder is a simple implementation of the <see cref="T:Atalasoft.Ocr.IFontBuilder"/> interface. </summary>
            <remarks> This basic font builder uses each font as specified, caching based on the characteristics.  Caching is
            done via an array list. </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.BasicFontBuilder.#ctor">
            <summary> Constructs a new <STRONG>BasicFontBuilder</STRONG> object. </summary>
        </member>
        <member name="M:Atalasoft.Ocr.BasicFontBuilder.BuildFont(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle)">
            <summary> Build the specified font. </summary>
            <returns> A <see cref="T:System.Drawing.Font"/> object if BuildFont could build the font,
            null otherwise. </returns>
            <remarks> BuildFont will return a cached version of a font if it has been asked to build an identical font before.
            </remarks>
            <param name="family"> The <see cref="T:System.Drawing.FontFamily"/> of the font to build. </param>
            <param name="size"> The size in points of the font to build. </param>
            <param name="style"> The <see cref="T:System.Drawing.FontStyle"/> of the font to build. </param>
        </member>
        <member name="M:Atalasoft.Ocr.BasicFontBuilder.Clear">
            <summary> Clears all constructed fonts out of the FontBuilder cache. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.BasicFontBuilder.Fonts">
            <summary> Returns a new array of Fonts that represents all constructed fonts in the FontBuilder's cache. </summary>
            <value> A new array of Fonts that represents all constructed fonts in the FontBuilder's cache. </value>
            <remarks> A new array is constructed each time this method is called. </remarks>
        </member>
        <member name="T:Atalasoft.Ocr.NamespaceDoc">
            <summary>
            High level classes for managing OCR engines and their output.
            </summary>
        </member>
        <member name="T:Atalasoft.Ocr.OcrContainerRegion">
            <summary>
            Abstract skeletal implementation that encompasses base functionality for those 
            OcrRegion types that can contain other OcrRegions within themselves
            </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrContainerRegion.#ctor(System.Drawing.Rectangle)">
            <summary>
            A constructor for the abstract <see cref="T:Atalasoft.Ocr.OcrContainerRegion" /> class.
            </summary>
            <param name="bounds">Region bounding rectangle.</param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrContainerRegion.#ctor(Atalasoft.Utils.Geometry.PolygonF)">
            <summary>
            A constructor for the abstract <see cref="T:Atalasoft.Ocr.OcrContainerRegion" /> class.
            </summary>
            <param name="bounds">Region bounding rectangle.</param>
        </member>
        <member name="P:Atalasoft.Ocr.OcrContainerRegion.Elements">
            <summary>
            Gets the contained elements
            </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrContainerRegion.RecalculateBounds">
            <summary>
            Recalculates bound encompassing all contained regions.
            </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrContainerRegion.ElementsElementChanged(System.Object,Atalasoft.Ocr.OcrPageElementEventArgs)">
            <summary>
            Reroutes listener events to specific methods in this class, based on the <see cref="T:Atalasoft.Ocr.OcrPageElementAction" /> 
            of the <see cref="T:Atalasoft.Ocr.OcrPageElementEventArgs" /> of the event
            </summary>
            <param name="sender"> The sender of the event, typically OcrEngine. </param>
            <param name="e"> Parameters that describe the operation. </param>
        </member>
        <member name="T:Atalasoft.Ocr.OcrTableRegion">
            <summary> <STRONG>OcrTableRegion</STRONG> represents a table page element. </summary>
            <remarks> This class is a prototype and will change in the future. </remarks>
        </member>
        <member name="T:Atalasoft.Ocr.OcrTableRegion.OcrTableSeparator">
            <summary> 
            <STRONG>OcrTableSeparator</STRONG> represents a single table separator. 
            </summary>        
        </member>
        <member name="M:Atalasoft.Ocr.OcrTableRegion.OcrTableSeparator.#ctor">
            <summary> 
            Initializes a new instance of the <see cref="T:Atalasoft.Ocr.OcrTableRegion.OcrTableSeparator" /> class. 
            </summary>            
        </member>
        <!-- Badly formed XML comment ignored for member "M:Atalasoft.Ocr.OcrTableRegion.OcrTableSeparator.CompareTo(Atalasoft.Ocr.OcrTableRegion.OcrTableSeparator)" -->
        <member name="P:Atalasoft.Ocr.OcrTableRegion.OcrTableSeparator.Position">
            <summary>
            Coordinate of the separator (horizontal or vertical coordinate on the image).
            </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrTableRegion.#ctor(System.Drawing.Rectangle)">
            <summary> Initializes a new instance of the <see cref="T:Atalasoft.Ocr.OcrTableRegion" /> class. </summary>
            <param name="bounds"> The bounding <see cref="T:System.Drawing.Rectangle"/> of the page element in pixels relative to the parent image. </param>
            <remarks> Avoid calling the constructor directly.  Instead use the <see cref="T:Atalasoft.Ocr.OcrTableRegion"/> method
            in the <see cref="P:Atalasoft.Ocr.OcrEngine.Factory"/> property of an <see cref="T:Atalasoft.Ocr.OcrEngine"/>. </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.OcrTableRegion.#ctor(Atalasoft.Utils.Geometry.PolygonF)">
            <summary> Initializes a new instance of the <see cref="T:Atalasoft.Ocr.OcrTableRegion" /> class. </summary>
            <param name="bounds"> The bounding <see cref="T:Atalasoft.Utils.Geometry.PolygonF"/> of the page element relative to the parent image. </param>
            <remarks> Avoid calling the constructor directly.  Instead use the <see cref="T:Atalasoft.Ocr.OcrTableRegion"/> method
            in the <see cref="P:Atalasoft.Ocr.OcrEngine.Factory"/> property of an <see cref="T:Atalasoft.Ocr.OcrEngine"/>. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.OcrTableRegion.Cells">
            <summary>
            Gets cells within the table.
            </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrTableRegion.HSeparators">
            <summary>
            Horizonal table separators.
            </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrTableRegion.VSeparators">
            <summary>
            Vertical table separators.
            </summary>
        </member>
        <member name="T:Atalasoft.Ocr.OcrFormElementGroupRegion">
            <summary> <STRONG>OcrFormElementGroupRegion</STRONG> represents a group of related <see cref="T:Atalasoft.Ocr.OcrFormElementRegion" /> elements</summary>
            <remarks> This is a protoype class and will likely change in the future. </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.OcrFormElementGroupRegion.#ctor(System.Drawing.Rectangle)">
            <summary> Initializes a new instance of the <see cref="T:Atalasoft.Ocr.OcrFormElementRegion" /> class. </summary>
            <param name="bounds"> The bounding <see cref="T:System.Drawing.Rectangle"/> of the page element in pixels relative to the parent image. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrFormElementGroupRegion.#ctor(Atalasoft.Utils.Geometry.PolygonF)">
            <summary> Initializes a new instance of the <see cref="T:Atalasoft.Ocr.OcrFormElementRegion" /> class. </summary>
            <param name="bounds"> The bounding <see cref="T:Atalasoft.Utils.Geometry.PolygonF"/> of the page element relative to the parent image. </param>
        </member>
        <member name="P:Atalasoft.Ocr.OcrFormElementGroupRegion.FormElements">
            <summary>
            A List of <see cref="T:Atalasoft.Ocr.OcrFormElementRegion" /> elements pertaining to this <see cref="T:Atalasoft.Ocr.OcrFormElementGroupRegion" /> group
            </summary>
        </member>
        <member name="T:Atalasoft.Ocr.OcrDocument">
            <summary>
            Summary description for OcrDocument.
            </summary>
            <summary> <STRONG>OcrDocument</STRONG> represents each page of a OCR'ed document and associated metadata. </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrDocument.#ctor">
            <summary> Constructs a new <STRONG>OcrDocument</STRONG> object. </summary>
            <returns> A new <STRONG>OcrDocument</STRONG> object. </returns>
            <remarks> Avoid calling this constructor directly.  Instead use the <see cref="M:Atalasoft.Ocr.BasicOcrFactory.OcrDocument"/> method
            in <see cref="T:Atalasoft.Ocr.BasicOcrFactory"/>, or a class implementing <see cref="T:Atalasoft.Ocr.IOcrFactory"/>. </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.OcrDocument.GetTextString(System.Boolean)">
            <summary>
            Returns textual information from all pages of the document.
            </summary>
            <param name="removeLineBreaks">Specifies whether to remove line breaks (replace them with space character) or preserve them.</param>
            <returns>Textual representation of the document.</returns>
        </member>
        <member name="P:Atalasoft.Ocr.OcrDocument.Pages">
            <summary> An object of type <see cref="T:Atalasoft.Ocr.OcrPageCollection"/> that represents the pages within this document.
            </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrDocument.Metadata">
            <summary> A Hashtable that represents document metadata. </summary>
            <remarks> While it is possible to access Author, CreationDate, Keywords, etc through this object, it is best to use
            the properties to insulate client code from possible future structural changes. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.OcrDocument.Title">
            <summary> A string representing the title of this document. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrDocument.Subject">
            <summary> A string representing the subject of this document. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrDocument.Author">
            <summary> This property describes the author of a document </summary>
            <value> A string representing the author of the document. </value>
            <remarks> Default value is "" </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.OcrDocument.Creator">
            <summary> Gets or sets the Creator metadata for this OcrDocument. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrDocument.Producer">
            <summary> Gets or sets the Producer metadata for this document. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrDocument.Keywords">
            <summary> An array of strings that represent keywords in this document. </summary>
            <value> An array of strings that represent keywords in this document. </value>
            <remarks> There is no standard that defines what the keywords should be.  Common sense suggests that each array
            element should be a single word. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.OcrDocument.CreationDate">
            <summary> A date object representing the creation date of the document </summary>
            <remarks> This is set to current time on object construction. </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.OcrDocument.GetDocumentInfo">
            <summary>
            Returns a hashtable that represents document metadata.
            </summary>
            <returns>Document metadata.</returns>
        </member>
        <member name="M:Atalasoft.Ocr.OcrDocument.GetDocumentInfoValue(Atalasoft.Ocr.OcrDocumentInfoKey)">
            <summary>
            Returns information about document using provided key.
            </summary>
            <param name="key">Document metadata key.</param>
            <returns>Requested metadata value.</returns>
        </member>
        <member name="M:Atalasoft.Ocr.OcrDocument.SetDocumentInfoValue(Atalasoft.Ocr.OcrDocumentInfoKey,System.Object)">
            <summary>
            Sets metadata information about the document using provided key and value.
            </summary>
            <param name="key">Document metadata key.</param>
            <param name="val">Document metadata value to set.</param>
        </member>
        <member name="T:Atalasoft.Ocr.OcrEngine">
            <summary> <STRONG>OcrEngine</STRONG> represents the functionality of an OCR engine.  It is an abstract class and
            cannot be constructed directly, but it provides much of the functionality needed in subclasses. </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Atalasoft.Ocr.OcrEngine" /> class. </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.#ctor(Atalasoft.Ocr.IOcrFactory)">
            <summary> Initializes a new instance of the <see cref="T:Atalasoft.Ocr.OcrEngine" /> class using provided <see cref="T:Atalasoft.Ocr.IOcrFactory" />. </summary>
            <param name="factory"> <see cref="T:Atalasoft.Ocr.IOcrFactory"/> instance to use. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.Initialize">
            <summary> Initialize the engine. </summary>
            <remarks> This is an abstract method and must be implemented by a subclass of <STRONG>OcrEngine</STRONG>.  Not every
            engine will perform an action in this method. </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.ShutDown">
            <summary> Terminates the engine. </summary>
            <remarks> This method is abstract and must be implemented by an engine.  Not every engine will perform an action for
            this method. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.OcrEngine.PreprocessingOptions">
            <summary> The property provides or sets the preprocessing options to be used for this OcrEngine. </summary>
            <value> An integer bit field reflecting the current preprocessing options for this engine. </value>
            <remarks> When setting this property, only legal options for this engine will be stored. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.OcrEngine.AvailablePreprocessingOptions">
            <summary> This property returns the available set of image preprocessing options for this
            <STRONG>OcrEngine</STRONG>. </summary>
            <value> An integer bit field with the available supported preprocessing options for this engine. </value>
        </member>
        <member name="P:Atalasoft.Ocr.OcrEngine.DefaultPreprocessingOptions">
            <summary> Returns the default preprocessing options for this engine. </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.GetAvailablePreprocessingOptions">
            <summary>
            Gets available preprocessing options for this <see cref="T:Atalasoft.Ocr.OcrEngine"/>
            </summary>
            <returns>Available preprocessing options.</returns>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.GetDefaultPreprocessingOptions">
            <summary>
            Gets default preprocessing options for this <see cref="T:Atalasoft.Ocr.OcrEngine"/>
            </summary>
            <returns>Default preprocessing options</returns>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.HandleDeskew(Atalasoft.Imaging.AtalaImage,System.Double@)">
            <summary> Handles the process of deskewing an image. </summary>
            <returns> A new deskewed image or null if no deskewing was needed. </returns>
            <param name="image"> The source image. </param>
            <param name="angle"> The angle by which the image was rotated. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.MakeDeskewCommand">
            <summary> Returns a new ImageCommand that will deskew an image. </summary>
            <returns> A new object of type ImageCommand </returns>
            <remarks> The default implementation returns an AutoDeskewCommand. </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.MakeBinarizeCommand">
            <summary> Returns a new ImageCommand that will binarize an image in the HandleDeskew method </summary>
            <remarks> <para>By default this method returns a new instance of the DynamicThresholdCommand with default settings. 
            If you override this method, you need to return a command that when applied to an image will return an image of
            PixelFormat1bppIndexed.  If the result of the command's Apply method is not a 1-bit image, it will be discarded and
            a SimpleThresholdCommand will be used instead.</para>
            <para>If MakeBinarizeCommand returns null, HandleDeskew will revert to DotImage 6.09 behavior, which is to attempt
            to apply an AutoDeskewCommand to a color image if it the appropriate licensing is in place Otherwise,
            SimpleThreshold and 1-Bit deskew will be used.</para> </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.OcrEngine.DefaultRecognitionCulture">
            <summary> Returns the default recognition language for this engine. </summary>
            <remarks> Most engines will return English or neutral culture as their default. </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.GetSupportedRecognitionCultures">
            <summary> Returns an array of supported recognition languages for this engine </summary>
            <returns> An array of supported recognition languages for this engine </returns>
            <remarks> Some engines support few or one recognition language.  Some engines support hundreds, although most of the
            supported languages are equivalent to "latin alphabet" or "cyrillic alphabet".  Some engines provide languages for
            which there is no equivalent CultureInfo (Esperanto, for example) and therefore can't be reflected in this
            interface. </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.RecognitionCultureChanged">
            <summary>
            
            </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.CulturesMatch(System.Globalization.CultureInfo,System.Globalization.CultureInfo)">
            <summary>
            Detects whether specified cultures match.
            </summary>
            <param name="first">First culture to match.</param>
            <param name="second">Second culture to match.</param>
            <returns>True if cultures math; false otherwise.</returns>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.RecognitionCultureSupported(System.Globalization.CultureInfo)">
            <summary> Indicates whether or not this engine will support a given recognition culture </summary>
            <returns> <EM>True</EM> if this engine supports the given culture, <EM>false</EM> otherwise. </returns>
            <remarks> Note that some engines distinguish between similar languages used in different locales (U.S. English
            versus U.K. English).  The engine will consider the same language in different locales to be equivalent by default. 
            It is possible to change this behavior by overriding the CulturesMatch method. </remarks>
            <param name="target"> The CultureInfo to be checked </param>
        </member>
        <member name="P:Atalasoft.Ocr.OcrEngine.RecognitionCulture">
            <summary> Sets or gets the recognition language for this engine. </summary>
            <exception> Thrown when the requested culture is not supported. </exception>
        </member>
        <member name="P:Atalasoft.Ocr.OcrEngine.SupportMultiCultureRecognition">
            <summary>
            Gets the value indicating whether the OCR engine supports multiple recognition cultures.
            </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrEngine.RecognitionCulturesList">
            <summary>
            Gets or sets the list of cultures to be used during recognition.
            </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.IsMultiCultureRecognitionSupported">
            <summary>
            Tells whether the OCR engine supports multiple recognition cultures.
            </summary>
            <returns>Returns true if the OCR engine supports multiple recognition cultures, otherwise false.</returns>
        </member>
        <member name="E:Atalasoft.Ocr.OcrEngine.DocumentProgress">
            <summary> This event is used to publish progress made in recognition of a set of images. </summary>
        </member>
        <member name="E:Atalasoft.Ocr.OcrEngine.PageProgress">
            <summary> This event is used to publish progress made in the recognition of a page. </summary>
        </member>
        <member name="E:Atalasoft.Ocr.OcrEngine.ImageIntroduction">
            <summary> This event is raised before <see cref="E:Atalasoft.Ocr.OcrEngine.ImageTransformation"/> in order to allow the document to
            be pre-processed prior to deskew. </summary>
            <remarks> <para>Custom OCR Pre-processing that cleans up the image, and improves visual characteristics should be
            applied in this event.  If the source image is color, the image should remain color to be included in searchable PDF
            output or other "Image behind Text" formats.</para>
            <para>See <see cref="E:Atalasoft.Ocr.OcrEngine.ImageSendOff"/> for pre-processing a bi-tonal image prior to OCR.</para> </remarks>
            <seealso> ImageTransformation Event </seealso>
            <seealso> ImageSendOff Event </seealso>
        </member>
        <member name="E:Atalasoft.Ocr.OcrEngine.ImageTransformation">
            <summary> This event is raised just after the image is deskewed and before <see cref="E:Atalasoft.Ocr.OcrEngine.ImageSendOff"/> is
            raised. </summary>
            <remarks> Any coordinate transformations such as deskew, crop, or rotate should be applied in this event handler. 
            The resulting image is used in searchable PDF's and other "Hidden Text Behind Image" formats. </remarks>
        </member>
        <member name="E:Atalasoft.Ocr.OcrEngine.PageConstructing">
            <summary> This event is used to publish the page that is in the process of being populated.. </summary>
        </member>
        <member name="E:Atalasoft.Ocr.OcrEngine.ImageSendOff">
            <summary> This event is raised before the OCR process starts, and after <see cref="E:Atalasoft.Ocr.OcrEngine.ImageSendOff"/> for OCR
            pre-processing. </summary>
            <remarks> Any processing of the image in this event handler has no effect on the image that's included in a
            searchable PDF or other "Hidden Text Behind Image" formats.  It is reasonable to threshold a color image to
            bi-tonal, and to strip away non-text content in this handler. </remarks>
        </member>
        <member name="E:Atalasoft.Ocr.OcrEngine.PageLocation">
            <summary> This event is used to publish <STRONG>OcrRegions</STRONG> that have been identified within an image.
            </summary>
        </member>
        <member name="E:Atalasoft.Ocr.OcrEngine.PageConstructed">
            <summary> This event is used to publish the page that has just been constructed. </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.OnPageProgress(Atalasoft.Ocr.OcrPageProgressEventArgs)">
            <summary> Fire the page progress event. </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.OnDocumentProgress(Atalasoft.Ocr.OcrDocumentProgressEventArgs)">
            <summary> Fire the DocumentProgress event. </summary>
            <returns> n/a </returns>
            <remarks> If it is impossible to determine how many pages are present ahead of time, set progressIsValid to false
            and progress to 0. </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.OnImageIntroduction(Atalasoft.Ocr.OcrImagePreprocessingEventArgs)">
            <summary>
            Raises the <see cref="E:ImageIntroduction" /> event.
            </summary>
            <param name="e">The <see cref="T:Atalasoft.Ocr.OcrImagePreprocessingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.OnImageTransformation(Atalasoft.Ocr.OcrImagePreprocessingEventArgs)">
            <summary>
            Raises the <see cref="E:ImageTransformation" /> event.
            </summary>
            <param name="e">The <see cref="T:Atalasoft.Ocr.OcrImagePreprocessingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.OnImageSendOff(Atalasoft.Ocr.OcrImagePreprocessingEventArgs)">
            <summary>
            Raises the <see cref="E:ImageSendOff" /> event.
            </summary>
            <param name="e">The <see cref="T:Atalasoft.Ocr.OcrImagePreprocessingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.HasPageLocationHandler">
            <summary> Determines whether or not events have been installed for page location. </summary>
            <returns> True if an <see cref="T:Atalasoft.Ocr.OcrPageLocationEventHandler"/> has been installed. </returns>
            <remarks> This is should be used by a subclass of <STRONG>OcrEngine</STRONG> to determine whether or not it will be
            necessary to translate a native set of page location structures into <STRONG>OcrRegion</STRONG> objects.  An engine
            can avoid the extra work by checking to see if any handlers are present. </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.OnPageLocation(Atalasoft.Ocr.OcrPageLocationEventArgs)">
            <summary> Fire the PageLocation event. </summary>
            <returns> n/a </returns>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.OnPageConstructing(Atalasoft.Ocr.OcrPageConstructionEventArgs)">
            <summary> Fire the PageConstructing event. </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.OnPageConstructed(Atalasoft.Ocr.OcrPageConstructionEventArgs)">
            <summary> Fire the PageConstructed event. </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.Recognize(Atalasoft.Imaging.AtalaImage)">
            <overloads> Recognize text in an AtalaImage, transforming it into an OcrPage object. </overloads>
            <remarks> The version of Recognize that takes an ImageCollection is likely to change. </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.Recognize(Atalasoft.Imaging.AtalaImage,System.Drawing.Rectangle)">
            <summary> <para>Recognize only within a specific rectangle in an AtalaImage.</para> </summary>
            <returns> In most cases this method is equivalent to:
            <para>return engine.Recognize( (new CropCommand(bounds)).Apply(image).Image);</para> </returns>
            <param name="image"> The image to recognize. </param>
            <param name="bounds"> An area to within the image to focus on. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.Recognize(Atalasoft.Imaging.ImageSource)">
            <summary> Recognize a set of <STRONG>AtalaImage</STRONG> objects as an entire document. </summary>
            <returns> A new <see cref="T:Atalasoft.Ocr.OcrDocument"/> containing one page for every image in the collection. </returns>
            <remarks> This method is likely to go away in the future. </remarks>
            <param name="images"> A set of images to recognize. </param>
        </member>
        <member name="P:Atalasoft.Ocr.OcrEngine.FontMapper">
            <summary> This property provides a font mapper that will be used for page construction. </summary>
            <value> An object that meets the <see cref="T:Atalasoft.Ocr.IFontMapper"/> interface. </value>
            <remarks> When an engine is constructed, the FontBuilder property will be set to a new instance of the <see
            cref="T:Atalasoft.Ocr.BasicFontMapper"/> object. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.OcrEngine.FontBuilder">
            <summary> This property provides a font builder that will be used for page construction. </summary>
            <value> An object that meets the <see cref="T:Atalasoft.Ocr.IFontBuilder"/> interface. </value>
            <remarks> When an engine is constructed, the FontBuilder property will be set to a new instance of the <see
            cref="T:Atalasoft.Ocr.BasicFontBuilder"/> object. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.OcrEngine.Factory">
            <summary> This property provides an object of type <see cref="T:Atalasoft.Ocr.IOcrFactory"/> for the construction of page and
            document elements. </summary>
            <value> An object of type <see cref="T:Atalasoft.Ocr.IOcrFactory"/>. </value>
            <remarks> This object should be used in favor of calling a page element constructor directly. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.OcrEngine.Translators">
            <summary> This property provides access to a <see cref="T:Atalasoft.Ocr.TranslatorCollection"/> object used by the engine to
            translate images to documents. </summary>
            <value> An object of type <see cref="T:Atalasoft.Ocr.TranslatorCollection"/> containing currently installed translators. </value>
            <remarks> Subclasses of <STRONG>OcrEngine</STRONG> will typically populate this collection with <see
            cref="T:Atalasoft.Ocr.INativeTranslator"/> objects during construction.  Clients are free to add or remove translator objects as
            they see fit.  For example, to add PDF Translation support add an instance of <see cref="T:Atalasoft.Ocr.PdfTranslator"/> to the
            Translators collection. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.OcrEngine.RecognizeBarcodes">
            <summary> When true, will recognize barcodes as well as text if the engine supports barcode recognition. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrEngine.CanRecognizeBarcodes">
            <summary> Returns true if this engine supports barcode recognition. </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.GetCanRecognizeBarcodes">
            <summary>
            Gets the value indicating wheather the engine can recognize barcodes or not.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Atalasoft.Ocr.OcrEngine.SupportedBarcodeSymbologies">
            <summary> Gets a list of barcode symbologies that are supported by this <STRONG>OcrDocument </STRONG>(if any).
            </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.GetSupportedBarcodeSymbologies">
            <summary> Returns the barcode symbologies supported by this engine. </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.OcrBarcodeSymbologyIsSupported(Atalasoft.Ocr.OcrBarcodeSymbologies)">
            <summary> Returns true if a given barcode symbology is supported. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrEngine.CanUseSymbolSet">
            <summary>
            Gets a value indicating wheather engine can use symbol set or not.
            </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.GetSymbolSet(Atalasoft.Ocr.OcrSymbolSet)">
            <summary> Returns a engine-specific symbol set matching string from a standard symbol set. </summary>
            <param name="set"> A standard symbol set. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.ToSymbolSet(System.String)">
            <summary> Converts a set of unique characters to a engine-specific symbol matching set. </summary>
            <param name="s"> A non-null string of unique characters. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.Supported">
            <summary>
            Provides a list of all mime types supported by Translators in this engine.
            </summary>
            <returns>List of supported mime types.</returns>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.SupportedMimeTypes">
            <summary> Provides a list of all mime types supported by Translators in this engine. </summary>
            <returns>List of supported mime types.</returns>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.SupportingTranslator(System.String,System.Boolean)">
            <summary>
            Finds a translator that supports translation to the requested output type. 
            </summary>
            <param name="mime">The standard mime type of the request output stream.</param>
            <param name="needsStreaming">Specifies whether streaming is needed or not.</param>
            <returns>Found translator instance; <c>null</c> if not found.s</returns>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.CanTranslate(System.String)">
            <summary> Determines if it is possible to translate a document to a particular output format. </summary>
            <returns> True if there is a translator that supports translation to the requested output type. </returns>
            <param name="mime"> The standard mime type of the request output stream. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.CanStream(System.String)">
            <summary> Determines if it is possible to write a particular output format to a <see
            cref="T:System.IO.Stream"/>.</summary>
            <returns> True if there is a translator available which can generate the requested mime type to a stream. </returns>
            <param name="mime"> The standard mime type of the request output stream. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.Translate(Atalasoft.Imaging.ImageSource,System.String,System.String)">
            <summary> Translates a collection of images to the specified mime type, writing the output to the given path.  This
            method attempts to select the best translator for the job. </summary>
            <param name="images"> An ImageSource of the images to translate. </param>
            <param name="mime"> The standard mime type of the request output stream. </param>
            <param name="fileName"> A string represent the path of a file to write to. </param>
            <overloads> Translate a set of images to a new document format. </overloads>
            <returns> n/a </returns>
            <remarks> These methods are likely to change in the future to use a more flexible class than ImageCollection.
            </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.Translate(Atalasoft.Imaging.ImageSource,System.String,System.IO.Stream)">
            <summary> Translates a collection of images to the specified mime type, writing the output to the given stream. 
            This method attempts to select the best translator for the job. </summary>
            <param name="images"> An ImageSource of the images to translate. </param>
            <param name="mime"> The standard mime type of the request output stream. </param>
            <param name="outStream"> The stream to write to. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.Translate(Atalasoft.Imaging.ImageSource,System.String,System.String,Atalasoft.Ocr.ITranslator)">
            <summary> Translates a collection of images to the specified mime type, writing the output to the given path using
            the supplied translator. </summary>
            <param name="images"> An <STRONG>ImageSource</STRONG> of the images to translate. </param>
            <param name="mime"> The standard mime type of the request output stream. </param>
            <param name="fileName"> A string represent the path of a file to write to. </param>
            <param name="translator"> An object of type <STRONG>ITranslator</STRONG> to use on this set of images. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.Translate(Atalasoft.Imaging.ImageSource,System.String,System.IO.Stream,Atalasoft.Ocr.ITranslator)">
            <summary> Translates a collection of images to the specified mime type, writing the output to the given stream using
            the supplied translator. </summary>
            <returns> n/a </returns>
            <param name="images"> An <STRONG>ImageSource</STRONG> of the images to translate. </param>
            <param name="mime"> The standard mime type of the request output stream. </param>
            <param name="outStream"> The stream to write to. </param>
            <param name="translator"> An object of type <STRONG>ITranslator</STRONG> to use on this set of images. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.GetLicenseFlag(System.String)">
            <summary>
            Retrieves value of the flag with specified name.
            </summary>
            <param name="name">Name of the flag to retrieve.</param>
            <returns>Value of the requested flag.</returns>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.Dispose">
            <summary> Dispose memory used by the <STRONG>OcrEngine</STRONG>. </summary>
            <overloads> Dipose memory used by the <STRONG>OcrEngine</STRONG> </overloads>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngine.Finalize">
            <summary>
            <see cref="T:Atalasoft.Ocr.OcrEngine"/> finalizer.
            </summary>
        </member>
        <member name="T:Atalasoft.Ocr.OcrEngineCollection">
            <summary> <STRONG>OcrEngineCollection</STRONG> represents a standard collection of <see cref="T:Atalasoft.Ocr.OcrEngine"/> objects.
            </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrEngineCollection.Item(System.Int32)">
            <summary>
            Allows for accessing item by index
            </summary>
            <param name="index">integer used to retrieve item</param>
            <returns>An OcrEngine at index</returns>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngineCollection.Add(Atalasoft.Ocr.OcrEngine)">
            <summary> Adds an <see cref="T:Atalasoft.Ocr.OcrEngine"/> to the collection. </summary>
            <param name="value"> The <see cref="T:Atalasoft.Ocr.OcrEngine"/> to add. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngineCollection.IndexOf(Atalasoft.Ocr.OcrEngine)">
            <summary> Returns the index of a specified <see cref="T:Atalasoft.Ocr.OcrEngine"/> in the collection. </summary>
            <returns> The index of <EM>value</EM> if found; otherwise -1. </returns>
            <param name="value"> The <see cref="T:Atalasoft.Ocr.OcrEngine"/> to locate in the collection. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngineCollection.Insert(System.Int32,Atalasoft.Ocr.OcrEngine)">
            <summary> Inserts an <see cref="T:Atalasoft.Ocr.OcrEngine"/> into the collection at specified position. </summary>
            <returns> n/a </returns>
            <remarks> If <EM>index</EM> is equal to the size of the collection, <EM>value</EM> is appended to the collection.
            </remarks>
            <param name="index"> The zero-based position at which the <see cref="T:Atalasoft.Ocr.OcrEngine"/> should be inserted. </param>
            <param name="value"> The <see cref="T:Atalasoft.Ocr.OcrEngine"/> to insert. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngineCollection.Remove(Atalasoft.Ocr.OcrEngine)">
            <summary> Removes the first occurrence of the specified <see cref="T:Atalasoft.Ocr.OcrEngine"/> from the collection. </summary>
            <returns> n/a </returns>
            <param name="value"> The <see cref="T:Atalasoft.Ocr.OcrEngine"/> to remove. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngineCollection.Contains(Atalasoft.Ocr.OcrEngine)">
            <summary> Determines whether the collection contains a specified <see cref="T:Atalasoft.Ocr.OcrEngine"/>. </summary>
            <returns> <EM>True</EM> if the object was found, <EM>false </EM>otherwise. </returns>
            <param name="value"> The <see cref="T:Atalasoft.Ocr.OcrEngine"/> to locate in the collection. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrEngineCollection.CopyTo(Atalasoft.Ocr.OcrEngine[],System.Int32)">
            <summary> Copies the elements of the <see cref="T:System.Collections.ICollection"/> to an <see cref="T:System.Array"/>, 
            starting at a particular <c>Array</c> index. </summary>
            <param name="array"> The one-dimensional <see cref="T:System.Array"/>
            that is the destination of the elements copied from the collection. The <B>Array</B> must have zero-based indexing.
            </param>
            <param name="index"> The zero-based index in <I>array</I> at which copying begins. </param>
        </member>
        <member name="T:Atalasoft.Ocr.OcrPageProgressEventArgs">
            <summary> This class represents information about progress within OCR processing on a page. </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrPageProgressEventArgs.#ctor(Atalasoft.Ocr.OcrPageStage,System.Int32)">
            <summary> Constructs a new OcrPageProgressEventArgs object. </summary>
            <returns> A new OcrPageProgressEventArgs object. </returns>
            <param name="stage"> The current stage of processing. </param>
            <param name="progress"> The total progress represented as an integer from 0 to 100. </param>
        </member>
        <member name="P:Atalasoft.Ocr.OcrPageProgressEventArgs.Progress">
            <summary> This property represents the total progress made on the current page. </summary>
            <value> An integer from 0 to 100 representing the total progress on this page as an percentage. </value>
        </member>
        <member name="P:Atalasoft.Ocr.OcrPageProgressEventArgs.Stage">
            <summary> This property represents the current stage of processing. </summary>
            <remarks> The <see cref="T:Atalasoft.Ocr.OcrPageStage"/> enumeration represents the <EM>possible</EM> things that an <see
            cref="T:Atalasoft.Ocr.OcrEngine"/> <EM>might</EM> do, not the things that an <see cref="T:Atalasoft.Ocr.OcrEngine"/> <EM>will</EM> do.  You should
            never assume that any given engine will send all or any particular <see cref="T:Atalasoft.Ocr.OcrPageStage"/> value or that they
            will be sent in any particular order.  Instead, this should only by interpreted as an indication of what the engine
            just did or is in the process of doing. </remarks>
        </member>
        <member name="T:Atalasoft.Ocr.OcrPageProgressEventHandler">
            <summary> The OcrPageProgressEventHandler delegate defines the event fired during progress on recognition of a
            document. </summary>
            <param name="sender"> The source of the event. </param>
            <param name="e"> The arguments for the event. </param>
        </member>
        <member name="T:Atalasoft.Ocr.OcrDocumentProgressEventArgs">
            <summary> <STRONG>OcrDocumentProgressEventArgs</STRONG> provides the information necessary to track the progress of
            OCR in a document. </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrDocumentProgressEventArgs.#ctor(Atalasoft.Ocr.OcrDocumentStage,System.Boolean,System.Int32)">
            <summary> Constructs a new <STRONG>OcrDocumentProgressEventArgs</STRONG>. </summary>
            <param name="stage"> The OCR Document Stage </param>
            <param name="progressIsValid"> The OCR Document Stage </param>
            <param name="progress"> The percent progress </param>
            <summary> Constructs a new OcrDocumentProgressEventArgs object. </summary>
            <returns> A new OcrDocumentProgressEventArgs object. </returns>
        </member>
        <member name="M:Atalasoft.Ocr.OcrDocumentProgressEventArgs.#ctor(Atalasoft.Ocr.OcrDocumentStage,System.Boolean,System.Int32,Atalasoft.Ocr.OcrDocument)">
            <summary> Constructs a new <STRONG>OcrDocumentProgressEventArgs</STRONG>. </summary>
            <param name="stage"> The OCR Document Stage </param>
            <param name="progressIsValid"> The OCR Document Stage </param>
            <param name="progress"> The percent progress </param>
            <param name="document"> The parent <STRONG>OcrDocument</STRONG>. </param>
        </member>
        <member name="P:Atalasoft.Ocr.OcrDocumentProgressEventArgs.ProgressIsValid">
            <summary> This property indicates if the Progress property is valid or not. </summary>
            <value> True if the Progress property is valid for this document, false otherwise. </value>
            <remarks> In some cases, it is not possible to know how many pages there will be in a document before processing.
            </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.OcrDocumentProgressEventArgs.Progress">
            <summary> The property represents the total document progress as a percent value. </summary>
            <value> An integer from 0 to 100. </value>
            <remarks> Progress may not be valid in all cases.  If it is impossible how many pages there are to process a priori,
            then this value will be invalid.  Before using this property, check the <see
            cref="P:Atalasoft.Ocr.OcrDocumentProgressEventArgs.ProgressIsValid"/> property. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.OcrDocumentProgressEventArgs.Stage">
            <summary> This property represents the current stage of document processing. </summary>
            <value> An enumerated value of type <see cref="T:Atalasoft.Ocr.OcrDocumentStage"/> representing the current state of progress.
            </value>
        </member>
        <member name="P:Atalasoft.Ocr.OcrDocumentProgressEventArgs.Document">
            <summary> Gets the <STRONG>OcrDocument</STRONG> associated with this progress event. </summary>
        </member>
        <member name="T:Atalasoft.Ocr.OcrDocumentProgressEventHandler">
            <summary> The OcrDocumentProgressEventHandler delegate defines the event fired during progress on recognition of a
            document. </summary>
            <param name="sender"> The source of the event. </param>
            <param name="e"> The arguments for the event. </param>
        </member>
        <member name="T:Atalasoft.Ocr.OcrImagePreprocessingEventArgs">
            <summary> Event argument used for pre-processing OCR events. </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrImagePreprocessingEventArgs.#ctor(Atalasoft.Imaging.AtalaImage,Atalasoft.Ocr.OcrPreprocessingOptions)">
            <summary> Creates a new instance of <STRONG>OcrImagePreprocessingEventArgs</STRONG>. </summary>
            <param name="image"> The image to pass into the event. </param>
            <param name="options"> pre-processing options </param>
        </member>
        <member name="P:Atalasoft.Ocr.OcrImagePreprocessingEventArgs.ImageIn">
            <summary> The image passed into the event </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrImagePreprocessingEventArgs.ImageOut">
            <summary> Set this to a new image to change the current image for OCR </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrImagePreprocessingEventArgs.Options">
            <summary> Pre-processing options that the engine should apply. </summary>
        </member>
        <member name="T:Atalasoft.Ocr.OcrImagePreprocessingEventHandler">
            <summary> The OcrImagePreprocessingEventHandler delegate defines the event fired during OCR pre-processing.
            </summary>
        </member>
        <member name="T:Atalasoft.Ocr.OcrPageConstructionEventArgs">
            <summary> <STRONG>OcrPageConstructionEventArgs</STRONG> is used for events that are fired before a page has started
            to be constructed and after it has finished being constructed. </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrPageConstructionEventArgs.#ctor(Atalasoft.Imaging.AtalaImage,Atalasoft.Ocr.OcrPage)">
            <summary> Construct a new OcrPageConstructionEventArgs object. </summary>
            <returns> A new OcrPageConstructionEventArgs object. </returns>
            <param name="image"> The image that was or is being used to generate this page. </param>
            <param name="page"> The page object in the process of being constructed. </param>
        </member>
        <member name="P:Atalasoft.Ocr.OcrPageConstructionEventArgs.Image">
            <summary> This property gives access to the image that was or is being used to generate this page. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrPageConstructionEventArgs.Page">
            <summary> This property gives access to the object that is being used to contain all the elements for this page. </summary>
        </member>
        <member name="T:Atalasoft.Ocr.OcrPageConstructionEventHandler">
            <summary> The OcrPageConstructionEventHandler delegate defines the event that is fired before a page is fully
            constructed or has finished being constructed. </summary>
            <param name="sender"> The source of this event. </param>
            <param name="e"> The arguments for this event. </param>
        </member>
        <member name="T:Atalasoft.Ocr.OcrPageLocationEventArgs">
            <summary> <STRONG>OcrPageLocationEventArgs</STRONG> represents information needed for handling a PageLocation event
            from an <STRONG>OcrEngine</STRONG>. </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrPageLocationEventArgs.#ctor(Atalasoft.Ocr.OcrRegionCollection,Atalasoft.Imaging.AtalaImage)">
            <summary> Constructs a new OcrPageLocationEventArgs object. </summary>
            <returns> A new OcrPageLocationEventArgs object. </returns>
            <param name="regionsIn"> A collection of regions that have been recognized on a page. </param>
            <param name="image"> The image that is currently being scanned for locations. </param>
        </member>
        <member name="P:Atalasoft.Ocr.OcrPageLocationEventArgs.RegionsIn">
            <summary> This property provides a collection of <see cref="T:Atalasoft.Ocr.OcrRegion"/> objects that have been identified by the
            <see cref="T:Atalasoft.Ocr.OcrEngine"/> as areas of interest within a page. </summary>
            <remarks> <para>Do not modify this collection or elements within it.  In the best case, changes will be
            ignored.</para>
            <para>Do not expect any of the regions to contain valid data except for the bounding rectangle.</para> </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.OcrPageLocationEventArgs.Image">
            <summary> The image that is currently being scanned for locations. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrPageLocationEventArgs.RegionsOut">
            <summary> This property represents a collection of <see cref="T:Atalasoft.Ocr.OcrRegion"/> objects that will be used for text or
            element recognition. </summary>
            <remarks> This property will initially be null.  If set to null, this instructs the engine to use region objects
            that it discovered with no changes.  If this property is set to a non-null value, the contents of this collection
            will be used <EM>instead</EM> of those in <see cref="P:Atalasoft.Ocr.OcrPageLocationEventArgs.RegionsIn"/>.  This allows a client to
            change, filter, or augment what has been discovered by an <see cref="T:Atalasoft.Ocr.OcrEngine"/>.  Putting an OcrRegion into
            RegionsOut that the engine doesn't recognize will do nothing.  In other words, you shouldn't ask an engine to
            recognize form elements if it doesn't have that capability. </remarks>
        </member>
        <member name="T:Atalasoft.Ocr.OcrPageLocationEventHandler">
            <summary> The OcrPageLocationEventHandler delegate defines the event fired during region location of a page.
            </summary>
            <param name="sender"> The source of the event. </param>
            <param name="e"> The arguments for the event. </param>
        </member>
        <member name="T:Atalasoft.Ocr.OcrPageElementEventArgs">
            <summary> This object is used to pass information about changes in page elements </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrPageElementEventArgs._newElement">
            <summary> The old element being removed or replaced (if applicable) </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrPageElementEventArgs._oldElement">
            <summary> The old element being removed or replaced (if applicable) </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrPageElementEventArgs._index">
            <summary> The index of the change (if applicable) </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrPageElementEventArgs._action">
            <summary> The type of change made </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrPageElementEventArgs.#ctor(System.Object,System.Object,System.Int32,Atalasoft.Ocr.OcrPageElementAction)">
            <summary> Constructs a new OcrPageElementEventArgs object </summary>
            <param name="oldElement"> The old element that is being replaced </param>
            <param name="newElement"> The new element being added/inserted/removed </param>
            <param name="index"> The index of the element </param>
            <param name="action"> The action taken </param>
            <overloads> Constructs a new OcrPageElementEventArgs object </overloads>
        </member>
        <member name="M:Atalasoft.Ocr.OcrPageElementEventArgs.#ctor(System.Object,System.Int32,Atalasoft.Ocr.OcrPageElementAction)">
            <summary> Constructs a new OcrPageElementEventArgs object </summary>
            <param name="newElement"> The new element being added/inserted/removed </param>
            <param name="index"> The index of the element </param>
            <param name="action"> The action taken </param>
        </member>
        <member name="P:Atalasoft.Ocr.OcrPageElementEventArgs.NewElement">
            <summary> The new element added (if applicable) </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrPageElementEventArgs.OldElement">
            <summary> The old element being removed or replaced (if applicable) </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrPageElementEventArgs.Index">
            <summary> The index of the change (if applicable) </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrPageElementEventArgs.Action">
            <summary> The type of change made </summary>
        </member>
        <member name="T:Atalasoft.Ocr.OcrPageElementChangedEventHandler">
            <summary> The OcrPageElementChangedEventHandler delegate defines the event that is fired after a page element has
            changed. </summary>
            <param name="sender"> The sender of the event, typically OcrEngine. </param>
            <param name="e"> Parameters that describe the operation. </param>
        </member>
        <member name="T:Atalasoft.Ocr.OcrException">
            <summary>
            Summary description for OcrException.
            </summary>
            <summary> OcrException is used typically by <see cref="T:Atalasoft.Ocr.OcrEngine"/> objects to report errors or illegal conditions
            that occur during processing. </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrException.#ctor">
            <summary> 
            Initializes a new instance of the <see cref="T:Atalasoft.Ocr.OcrException"/>
            </summary>
            <overloads> Constructs a new OcrException object. </overloads>
            <returns> A new OcrException object. </returns>
        </member>
        <member name="M:Atalasoft.Ocr.OcrException.#ctor(System.String)">
            <summary> 
            Initializes a new instance of the <see cref="T:Atalasoft.Ocr.OcrException"/>
            </summary>
            <param name="message"> The reason for the exception. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Atalasoft.Ocr.OcrException"/>
            </summary>
            <param name="message"> The reason for the exception. </param>
            <param name="innerException"> The exception that is the cause of the current exception. If the <I>innerException</I>
            parameter is not a null reference, the current exception is raised in a <B>catch</B> block that handles the inner
            exception. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Atalasoft.Ocr.OcrException"/> class using provided serialization info.
            </summary>
            <param name="info">Serialization info</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="T:Atalasoft.Ocr.IOcrFactory">
            <summary>
            Summary description for OcrFactory.
            </summary>
            <summary> <STRONG>IOcrFactory</STRONG> provides a uniform interface for the construction of page element objects for
            the process of OCR. </summary>
            <remarks> See <see cref="T:Atalasoft.Ocr.BasicOcrFactory"/> for a simple class that implements <STRONG>IOcrFactory</STRONG>.
            </remarks>
            <seealso> BasicOcrFactory Class </seealso>
        </member>
        <member name="M:Atalasoft.Ocr.IOcrFactory.OcrDocument">
            <summary> Construct a new <STRONG>OcrDocument</STRONG> object. </summary>
            <returns> A new object of type <see cref="M:Atalasoft.Ocr.IOcrFactory.OcrDocument"/>. </returns>
        </member>
        <member name="M:Atalasoft.Ocr.IOcrFactory.OcrPage(Atalasoft.Imaging.AtalaImage)">
            <returns> A new object of type OcrPage. </returns>
        </member>
        <member name="M:Atalasoft.Ocr.IOcrFactory.OcrPage(System.Int32,System.Int32,Atalasoft.Imaging.Dpi)">
            <returns> A new object of type OcrPage. </returns>
        </member>
        <member name="M:Atalasoft.Ocr.IOcrFactory.OcrTextRegion(System.Drawing.Rectangle)">
            <summary> Construct a page element to represent text. </summary>
            <returns> A new object of type <see cref="T:Atalasoft.Ocr.OcrTextRegion"/>. </returns>
            <overloads> Constructs a new <STRONG>OcrTextRegion</STRONG> object. </overloads>
        </member>
        <member name="M:Atalasoft.Ocr.IOcrFactory.OcrTextRegion(Atalasoft.Utils.Geometry.PolygonF)">
            <summary> Construct a page element to represent text. </summary>
            <returns> A new object of type <see cref="T:Atalasoft.Ocr.OcrTextRegion"/>. </returns>
            <overloads> Constructs a new <STRONG>OcrTextRegion</STRONG> object. </overloads>
        </member>
        <member name="M:Atalasoft.Ocr.IOcrFactory.OcrTextRegion(System.Drawing.Rectangle,Atalasoft.Ocr.OcrTextRotation)">
            <summary> Construct a page element to represent text. </summary>
            <returns> A new object of type <see cref="T:Atalasoft.Ocr.OcrTextRegion"/>. </returns>
            <overloads> Constructs a new <STRONG>OcrTextRegion</STRONG> object. </overloads>
        </member>
        <member name="M:Atalasoft.Ocr.IOcrFactory.OcrImageRegion(System.Drawing.Rectangle,Atalasoft.Imaging.AtalaImage)">
            <summary> Construct a new page element to represent an image in a document. </summary>
            <returns> A new object of type <see cref="T:Atalasoft.Ocr.OcrImageRegion"/>. </returns>
            <overloads> Constructs an <see cref="T:Atalasoft.Ocr.OcrImageRegion"/> object. </overloads>
        </member>
        <member name="M:Atalasoft.Ocr.IOcrFactory.OcrImageRegion(Atalasoft.Utils.Geometry.PolygonF,Atalasoft.Imaging.AtalaImage)">
            <summary> Construct a new page element to represent an image in a document. </summary>
            <returns> A new object of type <see cref="T:Atalasoft.Ocr.OcrImageRegion"/>. </returns>
            <overloads> Constructs an <see cref="T:Atalasoft.Ocr.OcrImageRegion"/> object. </overloads>
        </member>
        <member name="M:Atalasoft.Ocr.IOcrFactory.OcrImageRegion(Atalasoft.Imaging.AtalaImage,System.Boolean)">
            <summary> Construct a new page element to represent an image in a document. </summary>
            <returns> A new object of type <see cref="T:Atalasoft.Ocr.OcrImageRegion"/>. </returns>
            <overloads> Constructs an <see cref="T:Atalasoft.Ocr.OcrImageRegion"/> object. </overloads>
        </member>
        <member name="M:Atalasoft.Ocr.IOcrFactory.OcrTableRegion(System.Drawing.Rectangle)">
            <summary> Construct a page element to represent a table. </summary>
            <returns> A new object of type <see cref="T:Atalasoft.Ocr.OcrTableRegion"/>. </returns>
        </member>
        <member name="M:Atalasoft.Ocr.IOcrFactory.OcrTableRegion(Atalasoft.Utils.Geometry.PolygonF)">
            <summary> Construct a page element to represent a table. </summary>
            <returns> A new object of type <see cref="T:Atalasoft.Ocr.OcrTableRegion"/>. </returns>
        </member>
        <member name="M:Atalasoft.Ocr.IOcrFactory.OcrBarcodeRegion(System.Drawing.Rectangle,System.String,Atalasoft.Ocr.OcrBarcodeSymbologies)">
            <summary> Construct a page element to represent a barcode. </summary>
            <returns> A new object of type <see cref="T:Atalasoft.Ocr.OcrBarcodeRegion"/>. </returns>
        </member>
        <member name="M:Atalasoft.Ocr.IOcrFactory.OcrBarcodeRegion(Atalasoft.Utils.Geometry.PolygonF,System.String,Atalasoft.Ocr.OcrBarcodeSymbologies)">
            <summary> Construct a page element to represent a barcode. </summary>
            <returns> A new object of type <see cref="T:Atalasoft.Ocr.OcrBarcodeRegion"/>. </returns>
        </member>
        <member name="M:Atalasoft.Ocr.IOcrFactory.OcrFormElementRegion(System.Drawing.Rectangle)">
            <summary> Constructs a new <STRONG>OcrFormElement</STRONG> for this page. </summary>
            <returns> A new oject of type <see cref="T:Atalasoft.Ocr.OcrFormElementRegion"/>. </returns>
        </member>
        <member name="M:Atalasoft.Ocr.IOcrFactory.OcrFormElementRegion(Atalasoft.Utils.Geometry.PolygonF)">
            <summary> Constructs a new <STRONG>OcrFormElement</STRONG> for this page. </summary>
            <returns> A new oject of type <see cref="T:Atalasoft.Ocr.OcrFormElementRegion"/>. </returns>
        </member>
        <member name="M:Atalasoft.Ocr.IOcrFactory.OcrLine(Atalasoft.Ocr.IOcrLineAccessor,System.Drawing.Rectangle,System.Int32)">
            <summary> Construct a new page element to represent a line of text in a document. </summary>
            <param name="accessor"> The accessor that will be used to provide key elements of this object. </param>
            <param name="bounds"> The bounding rectangle of this page element in pixels relative to the image. </param>
            <param name="baseline"> The baseline for the text in this page element, in pixels relative to the image. </param>
        </member>
        <member name="M:Atalasoft.Ocr.IOcrFactory.OcrWord(Atalasoft.Ocr.IOcrWordAccessor,System.Drawing.Rectangle,System.Int32)">
            <summary> Construct a new page element to represent a word of text in a document. </summary>
            <returns> A new object of type <see cref="M:Atalasoft.Ocr.IOcrFactory.OcrWord(Atalasoft.Ocr.IOcrWordAccessor,System.Drawing.Rectangle,System.Int32)"/>. </returns>
            <param name="accessor"> The accessor that will be used to provide key elements of this object. </param>
            <param name="bounds"> The bounding rectangle of this page element in pixels relative to the image. </param>
            <param name="baseline"> The baseline for the text in this page element, in pixels relative to the image. </param>
        </member>
        <member name="M:Atalasoft.Ocr.IOcrFactory.OcrGlyph(Atalasoft.Ocr.IOcrGlyphAccessor,System.Drawing.Rectangle,System.Int32)">
            <overloads> Construct a new page element to represent a glyph. </overloads>
        </member>
        <member name="M:Atalasoft.Ocr.IOcrFactory.OcrGlyph(Atalasoft.Ocr.IOcrGlyphAccessor,System.Drawing.Rectangle,System.Int32,System.Drawing.Color)">
            <overloads> Construct a new page element to represent a glyph. </overloads>
        </member>
        <member name="T:Atalasoft.Ocr.BasicOcrFactory">
            <summary> <STRONG>BasicOcrFactory</STRONG> is a simple implementation of the <see cref="T:Atalasoft.Ocr.IOcrFactory"/> interface. 
            Each method returns a new instantiation of the base class of the associated document or page element. </summary>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrFactory.OcrDocument">
            <summary> Constructs a new <see cref="M:Atalasoft.Ocr.BasicOcrFactory.OcrDocument"/> object. </summary>
            <returns> A new <see cref="M:Atalasoft.Ocr.BasicOcrFactory.OcrDocument"/> object. </returns>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrFactory.OcrPage(Atalasoft.Imaging.AtalaImage)">
            <summary> Constructs a new <see cref="T:Atalasoft.Ocr.OcrPage"/> object using the width, height, and resolution from the supplied
            AtalaImage. </summary>
            <returns> A new <see cref="T:Atalasoft.Ocr.OcrPage"/> object. </returns>
            <param name="image"> An AtalaImage that represents this page. </param>
            <returns> A new <see cref="T:Atalasoft.Ocr.OcrPage"/> object. </returns>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrFactory.OcrPage(System.Int32,System.Int32,Atalasoft.Imaging.Dpi)">
            <summary> Constructs a new <see cref="T:Atalasoft.Ocr.OcrPage"/> object using the supplied width, height, and resolution. </summary>
            <returns> A new <see cref="T:Atalasoft.Ocr.OcrPage"/> object. </returns>
            <param name="width"> The width of the page in pixels. </param>
            <param name="height"> The height of the page in pixels. </param>
            <param name="resolution"> The resolution of the page. </param>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrFactory.OcrTextRegion(System.Drawing.Rectangle)">
            <summary> Construct a new <see cref="T:Atalasoft.Ocr.OcrTextRegion"/> object. </summary>
            <param name="bounds"> The bounding rectangle of the object on the page in pixels. </param>
            <summary> Constructs a new <see cref="T:Atalasoft.Ocr.OcrTextRegion"/> object. </summary>
            <returns> A new <see cref="T:Atalasoft.Ocr.OcrTextRegion"/> object. </returns>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrFactory.OcrTextRegion(Atalasoft.Utils.Geometry.PolygonF)">
            <summary> Construct a new <see cref="T:Atalasoft.Ocr.OcrTextRegion"/> object. </summary>
            <param name="bounds"> The bounding rectangle of the object on the page. </param>
            <summary> Constructs a new <see cref="T:Atalasoft.Ocr.OcrTextRegion"/> object. </summary>
            <returns> A new <see cref="T:Atalasoft.Ocr.OcrTextRegion"/> object. </returns>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrFactory.OcrTextRegion(System.Drawing.Rectangle,Atalasoft.Ocr.OcrTextRotation)">
            <summary> Construct a new <see cref="T:Atalasoft.Ocr.OcrTextRegion"/> object. </summary>
            <param name="bounds"> The bounding rectangle of the object on the page in pixels. </param>
            <param name="rotation"> The rotation of this text region. </param>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrFactory.OcrImageRegion(System.Drawing.Rectangle,Atalasoft.Imaging.AtalaImage)">
            <summary> Constructs a new <see cref="T:Atalasoft.Ocr.OcrImageRegion"/> using the supplied image and bounds. </summary>
            <returns> The image that is stored is made creating a new cropped version the supplied image. </returns>
            <param name="bounds"> The bounding rectangle of the object on the page in pixels. </param>
            <param name="image"> The image that defines the entire page. </param>
            <summary> Constructs a new <see cref="T:Atalasoft.Ocr.OcrImageRegion"/> object. </summary>
            <returns> A new <see cref="T:Atalasoft.Ocr.OcrImageRegion"/> object. </returns>
            <remarks> This method will create a new image by cropping the given image to the supplied bounding rectangle.
            </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrFactory.OcrImageRegion(Atalasoft.Utils.Geometry.PolygonF,Atalasoft.Imaging.AtalaImage)">
            <summary> Constructs a new <see cref="T:Atalasoft.Ocr.OcrImageRegion"/> using the supplied image and bounds. </summary>
            <returns> The image that is stored is made creating a new cropped version the supplied image. </returns>
            <param name="bounds"> The bounding rectangle of the object on the page in pixels. </param>
            <param name="image"> The image that defines the entire page. </param>
            <summary> Constructs a new <see cref="T:Atalasoft.Ocr.OcrImageRegion"/> object. </summary>
            <returns> A new <see cref="T:Atalasoft.Ocr.OcrImageRegion"/> object. </returns>
            <remarks> This method will create a new image by cropping the given image to the supplied bounding rectangle.
            </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrFactory.OcrImageRegion(Atalasoft.Imaging.AtalaImage,System.Boolean)">
            <summary> Constructs a new <see cref="T:Atalasoft.Ocr.OcrImageRegion"/> using the supplied Image. </summary>
            <param name="image"> The image to use for this region. </param>
            <param name="makeCopy"> If makeCopy is true, this region will store a copy of the image, otherwise it will store the
            image itself. </param>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrFactory.OcrTableRegion(System.Drawing.Rectangle)">
            <summary> Constructs a new <see cref="T:Atalasoft.Ocr.OcrTableRegion"/> object. </summary>
            <param name="bounds"> The bounding rectangle of the object on the page in pixels. </param>
            <returns> A new <see cref="T:Atalasoft.Ocr.OcrTableRegion"/> object. </returns>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrFactory.OcrTableRegion(Atalasoft.Utils.Geometry.PolygonF)">
            <summary> Construct a page element to represent a table. </summary>
            <param name="bounds"> The bounding rectangle of the object on the page. </param>
            <returns> A new object of type <see cref="T:Atalasoft.Ocr.OcrTableRegion"/>. </returns>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrFactory.OcrBarcodeRegion(System.Drawing.Rectangle,System.String,Atalasoft.Ocr.OcrBarcodeSymbologies)">
            <summary> Construct a new <see cref="T:Atalasoft.Ocr.OcrBarcodeRegion"/> object. </summary>
            <param name="bounds"> The bounding <see cref="T:System.Drawing.Rectangle"/> of the page element in pixels relative to the parent image. </param>
            <param name="text"> Text of the barcode within region. </param>
            <param name="barcodeType"> Type of the barcode within region. </param>
            <returns> A new <see cref="T:Atalasoft.Ocr.OcrBarcodeRegion"/>. </returns>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrFactory.OcrBarcodeRegion(Atalasoft.Utils.Geometry.PolygonF,System.String,Atalasoft.Ocr.OcrBarcodeSymbologies)">
            <summary> Construct a new <see cref="T:Atalasoft.Ocr.OcrBarcodeRegion"/> object. </summary>
            <param name="bounds"> The bounding <see cref="T:Atalasoft.Utils.Geometry.PolygonF"/> of the page element relative to the parent image. </param>
            <param name="text"> Text of the barcode within region. </param>
            <param name="barcodeType"> Type of the barcode within region. </param>
            <returns> A new <see cref="T:Atalasoft.Ocr.OcrBarcodeRegion"/>. </returns>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrFactory.OcrFormElementRegion(System.Drawing.Rectangle)">
            <summary> Constructs a new <see cref="T:Atalasoft.Ocr.OcrFormElementRegion"/>. </summary>
            <param name="bounds"> The bounding <see cref="T:System.Drawing.Rectangle"/> of the page element in pixels relative to the parent image. </param>
            <returns> A new <see cref="T:Atalasoft.Ocr.OcrFormElementRegion"/>. </returns>
            <remarks> This class is in the prototype stage and likely to change. </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrFactory.OcrFormElementRegion(Atalasoft.Utils.Geometry.PolygonF)">
            <summary> Constructs a new <see cref="T:Atalasoft.Ocr.OcrFormElementRegion"/>. </summary>
            <param name="bounds"> The bounding <see cref="T:Atalasoft.Utils.Geometry.PolygonF"/> of the page element relative to the parent image. </param>
            <returns> A new <see cref="T:Atalasoft.Ocr.OcrFormElementRegion"/>. </returns>
            <remarks> This class is in the prototype stage and likely to change. </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrFactory.OcrLine(Atalasoft.Ocr.IOcrLineAccessor,System.Drawing.Rectangle,System.Int32)">
            <summary> Constructs a new <see cref="M:Atalasoft.Ocr.BasicOcrFactory.OcrLine(Atalasoft.Ocr.IOcrLineAccessor,System.Drawing.Rectangle,System.Int32)"/> object. </summary>
            <returns> A new  <see cref="M:Atalasoft.Ocr.BasicOcrFactory.OcrLine(Atalasoft.Ocr.IOcrLineAccessor,System.Drawing.Rectangle,System.Int32)"/> object. </returns>
            <param name="accessor"> The accessor that will be used for this object.  This is usually supplied by the engine
            during recognition.  If you need to call OcrLine to change a line in an existing document, you can use a <see
            cref="T:Atalasoft.Ocr.BasicOcrLineAccessor"/> object. </param>
            <param name="bounds"> The bounding rectangle of the object on the page in pixels. </param>
            <param name="baseline"> The baseline of the text on the page in pixels. </param>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrFactory.OcrWord(Atalasoft.Ocr.IOcrWordAccessor,System.Drawing.Rectangle,System.Int32)">
            <summary> Constructs a new <see cref="M:Atalasoft.Ocr.BasicOcrFactory.OcrWord(Atalasoft.Ocr.IOcrWordAccessor,System.Drawing.Rectangle,System.Int32)"/> object. </summary>
            <returns> A new <see cref="M:Atalasoft.Ocr.BasicOcrFactory.OcrWord(Atalasoft.Ocr.IOcrWordAccessor,System.Drawing.Rectangle,System.Int32)"/> object. </returns>
            <param name="accessor"> The accessor that will be used for this object.  This is usually supplied by the engine
            during recognition.  If you need to call OcrWord to change a word in an existing document, you can use a <see
            cref="T:Atalasoft.Ocr.BasicOcrWordAccessor"/> object. </param>
            <param name="bounds"> The bounding rectangle of the object on the page in pixels. </param>
            <param name="baseline"> The baseline of the text on the page in pixels. </param>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrFactory.OcrGlyph(Atalasoft.Ocr.IOcrGlyphAccessor,System.Drawing.Rectangle,System.Int32)">
            <summary> Constructs a new glyph with the given accessor, bounding box and baseline. </summary>
            <remarks> Glyphs created through this method will be black. </remarks>
            <param name="accessor"> The accessor that will be used for this object.  This is usually supplied by the engine
            during recognition.  If you need to call OcrGlyph to change a glyph in an existing document, you can use a <see
            cref="T:Atalasoft.Ocr.BasicOcrGlyphAccessor"/> object. </param>
            <param name="bounds"> The bounding rectangle of the object on the page in pixels. </param>
            <param name="baseline"> The baseline of the text on the page in pixels. </param>
            <summary> Constructs a new <see cref="T:Atalasoft.Ocr.OcrGlyph"/> object. </summary>
            <returns> A new <see cref="T:Atalasoft.Ocr.OcrGlyph"/> object. </returns>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrFactory.OcrGlyph(Atalasoft.Ocr.IOcrGlyphAccessor,System.Drawing.Rectangle,System.Int32,System.Drawing.Color)">
            <summary> Constructs a new glyph with the given accessor, bounding box, baseline and color. </summary>
            <param name="accessor"> The accessor that will be used for this object.  This is usually supplied by the engine
            during recognition.  If you need to call OcrGlyph to change a glyph in an existing document, you can use a <see
            cref="T:Atalasoft.Ocr.BasicOcrGlyphAccessor"/> object. </param>
            <param name="bounds"> The bounding rectangle of the object on the page in pixels. </param>
            <param name="baseline"> The baseline of the text on the page in pixels. </param>
            <param name="color"> The color of this glyph. </param>
        </member>
        <member name="T:Atalasoft.Ocr.OcrGlyph">
            <summary>
            Summary description for OcrGlyph.
            </summary>
            <summary> <para><STRONG>OcrGlyph</STRONG> defines a textual glyph on the page.  Conceptually, a glyph is the
            representation of a unit of written or printed text.  A glyph may consist of a single character such as a single
            letter or may consist of several characters that are typographically joined in a unit, as in the case of
            ligatures.</para> </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrGlyph.DefaultImprintFontName">
            <summary>
            The default font to use. Default is Arial.
            </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrGlyph.#ctor(Atalasoft.Ocr.IOcrGlyphAccessor,System.Drawing.Rectangle,System.Int32)">
            <summary> Constructs a new OcrGlyph object. </summary>
            <param name="accessor"> The <see cref="T:Atalasoft.Ocr.IOcrGlyphAccessor"/> that will be used to access the components of this glyph. </param>
            <param name="bounds"> The bounding <see cref="T:System.Drawing.Rectangle"/> of the page element in pixels relative to the source image. </param>
            <param name="baseline"> The baseline of the text in pixels relative to the image. </param>
            <remarks> Avoid calling the constructor directly.  Use the <see cref="T:Atalasoft.Ocr.OcrGlyph"/> method in the <see cref="P:Atalasoft.Ocr.OcrEngine.Factory"/> property. </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.OcrGlyph.#ctor(Atalasoft.Ocr.IOcrGlyphAccessor,System.Drawing.Rectangle,System.Int32,System.Drawing.Color)">
            <summary> Constructs a new OcrGlyph object. </summary>
            <param name="accessor"> The <see cref="T:Atalasoft.Ocr.IOcrGlyphAccessor"/> that will be used to access the components of this glyph. </param>
            <param name="bounds"> The bounding <see cref="T:System.Drawing.Rectangle"/> of the page element in pixels relative to the source image. </param>
            <param name="baseline"> The baseline of the text in pixels relative to the image. </param>
            <param name="color"> The color of the glyph. </param>
            <remarks> Avoid calling the constructor directly.  Use the <see cref="T:Atalasoft.Ocr.OcrGlyph"/> method in the <see cref="P:Atalasoft.Ocr.OcrEngine.Factory"/> property. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.OcrGlyph.Accessor">
            <summary> The <see cref="T:Atalasoft.Ocr.IOcrGlyphAccessor"/> associated with this object. </summary>
            <value> An object of type <see cref="T:Atalasoft.Ocr.IOcrGlyphAccessor"/> that is used to access this object. </value>
        </member>
        <member name="P:Atalasoft.Ocr.OcrGlyph.Bounds">
            <summary> The bounding box of the glyph, in pixels coordinates in the source image. </summary>
            <value> A <see cref="T:System.Drawing.Rectangle"/> that represents the bounding box of this glyph. </value>
        </member>
        <member name="P:Atalasoft.Ocr.OcrGlyph.Baseline">
            <summary> The baseline of the text, in pixels from the top of the source image. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrGlyph.Alternates">
            <summary> The best alternatives to this glyph that were considered by the engine </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrGlyph.Text">
            <summary> This glyph, as a string </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrGlyph.Char">
            <summary> This glyph, as a Unicode character </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrGlyph.Codepoint">
            <summary> The Unicode codepoint of this glyph. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrGlyph.IsSingleton">
            <summary>True if this glyph represents a single character.</summary>
            <value> A boolean that indicates if this glyph represents a single character. </value>
            <remarks> Glyphs in typography may represent more than one individual character.  A common example is a
            ligature - two or more characters joined into a single glyph.  This property makes it possible to determine if that
            is the case in order to better reconstruct an image or to facilitate searching through the text. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.OcrGlyph.TextKind">
            <summary>
            The Kind of text for the OcrLine. MachinePrint, HandPrint, Any. <see cref="T:Atalasoft.Ocr.OcrTextKind"/>
            </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrGlyph.Confidence">
            <summary> The confidence with which this glyph was recognized by the engine, ranging from
            0.0 (no confidence) to 1.0 (complete confidence). </summary>
            <value> A double ranging from 0.0 (no confidence) to 1.0 (complete confidence). </value>
            <remarks> The initial value is provided by the engine. </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.OcrGlyph.ResetConfidence">
            <summary> Resets the confidence to that provided by the engine. </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrGlyph.GetFont(Atalasoft.Imaging.Dpi,Atalasoft.Ocr.IFontMapper,Atalasoft.Ocr.IFontBuilder)">
            <summary> The <see cref="T:System.Drawing.Font"/> used for this page element. </summary>
            <returns> An object of type <see cref="T:System.Drawing.Font"/> that represents the font of this glyph. </returns>
            <param name="imageResolution"> The resolution of the source image. </param>
            <param name="mapper"> The <see cref="T:Atalasoft.Ocr.IFontMapper"/> to use to remap this glyph's font. </param>
            <param name="builder"> The <see cref="T:Atalasoft.Ocr.IFontBuilder"/> to use to construct the font. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrGlyph.GetFontName(Atalasoft.Ocr.IFontMapper)">
            <summary> The name of the font of this glyph. </summary>
            <param name="mapper"> The <see cref="T:Atalasoft.Ocr.IFontMapper"/> to use to remap this glyph's font. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrGlyph.GetFontFamily(Atalasoft.Ocr.IFontMapper)">
            <summary> The <see cref="T:System.Drawing.FontFamily"/> of this glyph. </summary>
            <returns> An object of type <see cref="T:System.Drawing.FontFamily"/>. </returns>
            <param name="mapper"> The <see cref="T:Atalasoft.Ocr.IFontMapper"/> to use to remap this glyph's font. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrGlyph.GetFontStyle(Atalasoft.Ocr.IFontMapper)">
            <summary> The <see cref="T:System.Drawing.FontStyle"/> of this glyph. </summary>
            <returns> An object of type <see cref="T:System.Drawing.FontStyle"/> that represents the font style of this glyph. </returns>
            <param name="mapper"> The <see cref="T:Atalasoft.Ocr.IFontMapper"/> to use to remap this glyph's font. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrGlyph.GetFontSize(Atalasoft.Imaging.Dpi)">
            <summary> The font size of this glyph. </summary>
            <returns> A floating point number that represents the size of this font in points. </returns>
            <param name="imageResolution"> The resolution of the image from which this glyph was taken. </param>
        </member>
        <member name="P:Atalasoft.Ocr.OcrGlyph.Color">
            <summary> The color of this glyph. </summary>
        </member>
        <member name="T:Atalasoft.Ocr.IOcrGlyphAccessor">
            <summary> <STRONG>IOcrGlyphAccessor</STRONG> defines an interface for accessing data elements for a glyph.
            </summary>
            <remarks> This interface is usually provided by a low-level engine implementation and is typically not defined in
            client code.  If a client needs to construct an <see cref="T:Atalasoft.Ocr.OcrGlyph"/> through the <see cref="T:Atalasoft.Ocr.IOcrFactory"/>
            interface, it may use the <see cref="T:Atalasoft.Ocr.BasicOcrGlyphAccessor"/> class for a version that is not tied to any given
            engine. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.IOcrGlyphAccessor.Glyph">
            <summary> This property is used for setting the <STRONG>OcrGlyph</STRONG> that this accessor is attached to.
            </summary>
            <remarks> This property is used when an <see cref="T:Atalasoft.Ocr.OcrGlyph"/> is constructed.  Typically, an <see
            cref="T:Atalasoft.Ocr.OcrEngine"/> will construct an object that meets <see cref="T:Atalasoft.Ocr.IOcrGlyphAccessor"/> first, then construct the
            <see cref="T:Atalasoft.Ocr.OcrGlyph"/> via an <see cref="T:Atalasoft.Ocr.IOcrFactory"/>.  Finally, it will set the Glyph property to the constructed
            <see cref="T:Atalasoft.Ocr.OcrGlyph"/>. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.IOcrGlyphAccessor.Bounds">
            <summary> This property represents the bounding box of the glyph in pixels relative to the source image. </summary>
            <value> A <see cref="T:System.Drawing.Rectangle"/> that represents the bounding box of this glyph. </value>
        </member>
        <member name="P:Atalasoft.Ocr.IOcrGlyphAccessor.Baseline">
            <summary> This property represents the baseline of the text in pixels relative to the source image. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.IOcrGlyphAccessor.Text">
            <summary> This property is a string that represents the text of this glyph. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.IOcrGlyphAccessor.Char">
            <summary> The unicode representation of this glyph. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.IOcrGlyphAccessor.IsSingleton">
            <summary> This property represents a boolean that determines if this glyph is a single character or not. </summary>
            <value> A boolean that determines if this glyph is a single character or not. </value>
            <remarks> Glyphs in typography may represent more than one individual character.  Typically, this done via a
            ligature wherein two or more characters are joined together.  This property makes it possible to determine if that
            is the case in order to better reconstruct an image or to facilitate searching through the text. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.IOcrGlyphAccessor.Confidence">
            <summary> This property represents the confidence with which this glyph was recognized by the engine, ranging from
            0.0 (no confidence) to 1.0 (complete confidence). </summary>
            <value> A double ranging from 0.0 (no confidence) to 1.0 (complete confidence). </value>
        </member>
        <member name="M:Atalasoft.Ocr.IOcrGlyphAccessor.GetFont(Atalasoft.Imaging.Dpi,Atalasoft.Ocr.IFontMapper,Atalasoft.Ocr.IFontBuilder)">
            <summary> Return the font used for this glyph using the given resolution, font mapper and font builder. </summary>
            <returns> An object of type <see cref="T:System.Drawing.Font"/> that represents the font of this glyph. </returns>
            <param name="imageResolution"> The resolution of the image from which this glyph was taken. </param>
            <param name="mapper"> The <see cref="T:Atalasoft.Ocr.IFontMapper"/> to use to remap this glyph's font. </param>
            <param name="builder"> The <see cref="T:Atalasoft.Ocr.IFontBuilder"/> to use to construct the font. </param>
        </member>
        <member name="M:Atalasoft.Ocr.IOcrGlyphAccessor.GetFontName(Atalasoft.Ocr.IFontMapper)">
            <summary> Returns the name of the font used for this glyph. </summary>
            <returns> A string representing the name of the font used for this glyph. </returns>
            <param name="mapper"> An object of type <see cref="T:Atalasoft.Ocr.IFontMapper"/> that will be used to map the font. </param>
        </member>
        <member name="M:Atalasoft.Ocr.IOcrGlyphAccessor.GetFontFamily(Atalasoft.Ocr.IFontMapper)">
            <summary> Get the <see cref="T:System.Drawing.FontFamily"/> for this glyph. </summary>
            <returns> An object of type <see cref="T:System.Drawing.FontFamily"/>. </returns>
            <param name="mapper"> The <see cref="T:Atalasoft.Ocr.IFontMapper"/> to use to remap this glyph's font. </param>
        </member>
        <member name="M:Atalasoft.Ocr.IOcrGlyphAccessor.GetFontStyle(Atalasoft.Ocr.IFontMapper)">
            <summary> Get the <see cref="T:System.Drawing.FontStyle"/> for this glyph. </summary>
            <returns> An object of type <see cref="T:System.Drawing.FontStyle"/> that represents the font style of this glyph. </returns>
            <param name="mapper"> The <see cref="T:Atalasoft.Ocr.IFontMapper"/> to use to remap this glyph's font. </param>
        </member>
        <member name="M:Atalasoft.Ocr.IOcrGlyphAccessor.GetFontSize(Atalasoft.Imaging.Dpi)">
            <summary> Get the font size for this glyph. </summary>
            <returns> A floating point number that represents the size of this font in points. </returns>
            <param name="imageResolution"> The resolution of the image from which this glyph was taken. </param>
        </member>
        <member name="P:Atalasoft.Ocr.IOcrGlyphAccessor.Color">
            <summary> Returns the color of this glyph. </summary>
            <value> An object of type <STRONG>Color</STRONG> representing the color of this glyph. </value>
        </member>
        <member name="T:Atalasoft.Ocr.BasicOcrGlyphAccessor">
            <summary> BasicOcrGlyphAccessor is a simple implementation of the <see cref="T:Atalasoft.Ocr.IOcrGlyphAccessor"/> interface which
            provides basic functionality for a glyph. </summary>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrGlyphAccessor.#ctor(System.Char,System.String,System.Drawing.FontStyle,System.Single)">
            <summary> Construct a new BasicOcrGlyphAccessor. </summary>
            <param name="theCharacter"> The character that this glyph represents. </param>
            <param name="family"> The name of the font family that for this glyph. </param>
            <param name="style"> The <see cref="T:System.Drawing.FontStyle"/> for this glyph. </param>
            <param name="size"> The size of this glyph in points. </param>
            <summary> Constucts a new BasicOcrGlyphAccessor. </summary>
            <returns> A new BasicOcrGlyphAccessor. </returns>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrGlyphAccessor.#ctor(System.Char,System.String,System.Drawing.FontStyle,System.Single,System.Drawing.Color)">
            <summary> Construct a new BasicOcrGlyphAccessor. </summary>
            <param name="theCharacter"> The character that this glyph represents. </param>
            <param name="family"> The name of the font family that for this glyph. </param>
            <param name="style"> The <see cref="T:System.Drawing.FontStyle"/> for this glyph. </param>
            <param name="size"> The size of this glyph in points. </param>
            <param name="color"> The color for this glyph. </param>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrGlyphAccessor.#ctor(System.Char,System.String,System.Drawing.FontStyle,System.Single,System.Drawing.Color,System.Double)">
            <summary> Construct a new BasicOcrGlyphAccessor. </summary>
            <param name="theCharacter"> The character that this glyph represents. </param>
            <param name="family"> The name of the font family that for this glyph. </param>
            <param name="style"> The <see cref="T:System.Drawing.FontStyle"/> for this glyph. </param>
            <param name="size"> The size of this glyph in points. </param>
            <param name="color"> The color for this glyph. </param>
            <param name="confidence"> The confidence value of this glyph. </param>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrGlyphAccessor.#ctor(System.String,System.String,System.Drawing.FontStyle,System.Single)">
            <summary>
            Construct a new BasicOcrGlyphAccessor.
            </summary>
            <param name="text">The text that this glyph represents.</param>
            <param name="family"> The name of the font family that for this glyph. </param>
            <param name="style"> The <see cref="T:System.Drawing.FontStyle"/> for this glyph. </param>
            <param name="size"> The size of this glyph in points. </param>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrGlyphAccessor.#ctor(System.String,System.String,System.Drawing.FontStyle,System.Single,System.Drawing.Color)">
            <summary> Construct a new BasicOcrGlyphAccessor. </summary>
            <param name="text"> The text that this glyph represents. </param>
            <param name="family"> The name of the font family that for this glyph. </param>
            <param name="style"> The <see cref="T:System.Drawing.FontStyle"/> for this glyph. </param>
            <param name="size"> The size of this glyph in points. </param>
            <param name="color"> The color for this glyph. </param>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrGlyphAccessor.#ctor(System.String,System.String,System.Drawing.FontStyle,System.Single,System.Drawing.Color,System.Double)">
            <summary> Construct a new BasicOcrGlyphAccessor. </summary>
            <param name="text"> The text that this glyph represents. </param>
            <param name="family"> The name of the font family that for this glyph. </param>
            <param name="style"> The <see cref="T:System.Drawing.FontStyle"/> for this glyph. </param>
            <param name="size"> The size of this glyph in points. </param>
            <param name="color"> The color for this glyph. </param>
            <param name="confidence"> The confidence value of this glyph. </param>
        </member>
        <member name="P:Atalasoft.Ocr.BasicOcrGlyphAccessor.Glyph">
            <summary> This property allows the constructor of OcrGlyph to hook the OcrGlyph into the IOcrGlyphAccessor.
            </summary>
        </member>
        <member name="P:Atalasoft.Ocr.BasicOcrGlyphAccessor.Bounds">
            <summary> This property represents the bounding box of the glyph in pixels relative to the source image. </summary>
            <value> A <see cref="T:System.Drawing.Rectangle"/> that represents the bounding box of this glyph. </value>
        </member>
        <member name="P:Atalasoft.Ocr.BasicOcrGlyphAccessor.Baseline">
            <summary> This property represents the baseline of the text in pixels relative to the source image. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.BasicOcrGlyphAccessor.Text">
            <summary> This property is a string represents the text of this glyph. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.BasicOcrGlyphAccessor.Char">
            <summary> The unicode representation of this glyph. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.BasicOcrGlyphAccessor.IsSingleton">
            <summary> Checks to see if the glyph is represented by more than one letter. </summary>
            <value> True if the character is only one letter, false otherwise. </value>
            <remarks> Glyphs in typography may represent more than one individual character.  Typically, this done via a
            ligature wherein two or more characters are joined together.  This property makes it possible to determine if that
            is the case in order to better reconstruct an image or to facilitate searching through the text. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.BasicOcrGlyphAccessor.Confidence">
            <summary> This property represents the confidence with which this glyph was recognized by the engine, ranging from
            0.0 (no confidence) to 1.0 (complete confidence). </summary>
            <value> A double ranging from 0.0 (no confidence) to 1.0 (complete confidence). </value>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrGlyphAccessor.GetFont(Atalasoft.Imaging.Dpi,Atalasoft.Ocr.IFontMapper,Atalasoft.Ocr.IFontBuilder)">
            <summary> Gets the <see cref="T:System.Drawing.Font"/> for this glyph. </summary>
            <returns> The <see cref="T:System.Drawing.Font"/> for this glyph. </returns>
            <param name="imageResolution"> The resolution of the source image. </param>
            <param name="mapper"> An <see cref="T:Atalasoft.Ocr.IFontMapper"/> to map the font characteristics. </param>
            <param name="builder"> An <see cref="T:Atalasoft.Ocr.IFontBuilder"/> to build the resulting font. </param>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrGlyphAccessor.GetFontName(Atalasoft.Ocr.IFontMapper)">
            <summary> Get the name of the font used for this glyph. </summary>
            <param name="mapper"> An <see cref="T:Atalasoft.Ocr.IFontMapper"/> to map the font characteristics. </param>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrGlyphAccessor.GetFontFamily(Atalasoft.Ocr.IFontMapper)">
            <summary> Get the <see cref="T:System.Drawing.FontFamily"/> that represents this glyph. </summary>
            <returns> The <see cref="T:System.Drawing.FontFamily"/> that represents this glyph. </returns>
            <param name="mapper"> An <see cref="T:Atalasoft.Ocr.IFontMapper"/> to map the font characteristics. </param>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrGlyphAccessor.GetFontStyle(Atalasoft.Ocr.IFontMapper)">
            <summary> Get the <see cref="T:System.Drawing.FontStyle"/> of this glyph. </summary>
            <returns> The <see cref="T:System.Drawing.FontStyle"/> of this glyph. </returns>
            <param name="mapper"> An <see cref="T:Atalasoft.Ocr.IFontMapper"/> to map the font characteristics. </param>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrGlyphAccessor.GetFontSize(Atalasoft.Imaging.Dpi)">
            <summary> Gets the font size of this glyph. </summary>
            <returns> The font size of the glyph in points. </returns>
            <param name="imageResolution"> The resolution of the source image. </param>
        </member>
        <member name="P:Atalasoft.Ocr.BasicOcrGlyphAccessor.Color">
            <summary> This property represents the color of this glyph. </summary>
        </member>
        <member name="T:Atalasoft.Ocr.OcrGlyphCollection">
            <summary>
            Summary description for OcrLineCollection.
            </summary>
            <summary> <STRONG>OcrGlyphCollection</STRONG> represents a standard collection of <see cref="T:Atalasoft.Ocr.OcrGlyph"/> objects.
            </summary>
            <seealso> OcrGlyph Class </seealso>
        </member>
        <member name="P:Atalasoft.Ocr.OcrGlyphCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Atalasoft.Ocr.OcrGlyph"/> at the specified index.
            </summary>
            <param name="index">Index of the glyph.</param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrGlyphCollection.Add(Atalasoft.Ocr.OcrGlyph)">
            <summary> Adds an <see cref="T:Atalasoft.Ocr.OcrGlyph"/> to the collection. </summary>
            <returns> The position into which the new element was inserted. </returns>
            <param name="value"> The glyph to add to the collection. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrGlyphCollection.IndexOf(Atalasoft.Ocr.OcrGlyph)">
            <summary> Returns the index of a specified <see cref="T:Atalasoft.Ocr.OcrGlyph"/> in the collection. </summary>
            <returns> The index of <EM>value</EM> if found; otherwise -1. </returns>
            <param name="value"> The <see cref="T:Atalasoft.Ocr.OcrGlyph"/> to locate in the collection. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrGlyphCollection.Insert(System.Int32,Atalasoft.Ocr.OcrGlyph)">
            <summary> Inserts an <see cref="T:Atalasoft.Ocr.OcrGlyph"/> into the collection at specified position. </summary>
            <returns> n/a </returns>
            <remarks> If <EM>index</EM> is equal to the size of the collection, <EM>value</EM> is appended to the collection.
            </remarks>
            <param name="index"> The zero-based position at which the <see cref="T:Atalasoft.Ocr.OcrGlyph"/> should be inserted. </param>
            <param name="value"> The <see cref="T:Atalasoft.Ocr.OcrGlyph"/> to insert. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrGlyphCollection.Remove(Atalasoft.Ocr.OcrGlyph)">
            <summary> Removes the first occurrence of the specified <see cref="T:Atalasoft.Ocr.OcrGlyph"/> from the collection. </summary>
            <returns> n/a </returns>
            <param name="value"> The <see cref="T:Atalasoft.Ocr.OcrGlyph"/> to remove. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrGlyphCollection.Contains(Atalasoft.Ocr.OcrGlyph)">
            <summary> Determines whether the collection contains a specified <see cref="T:Atalasoft.Ocr.OcrGlyph"/>. </summary>
            <returns> True if the object was found, false otherwise. </returns>
            <param name="value"> The <see cref="T:Atalasoft.Ocr.OcrGlyph"/> to locate in the collection. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrGlyphCollection.CopyTo(Atalasoft.Ocr.OcrGlyph[],System.Int32)">
            <summary> Copies the elements of the <see cref="T:System.Collections.ICollection"/> to an <see cref="T:System.Array"/>, 
            starting at a particular <c>Array</c> index. </summary>
            <param name="array"> The one-dimensional <see cref="T:System.Array"/>
            that is the destination of the elements copied from the collection. The <c>Array</c> must have zero-based indexing.
            </param>
            <param name="index"> The zero-based index in <I>array</I> at which copying begins. </param>
        </member>
        <member name="E:Atalasoft.Ocr.OcrGlyphCollection.ElementChanged">
            <summary> This event is triggered when a change has been made to this collection. </summary>
            <remarks> This event is used for internal maintenance of bounding boxes and confidence levels.  It is typically not
            necessary for client code to hook into it. </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.OcrGlyphCollection.OnClearComplete">
            <inheritdoc/>
        </member>
        <member name="M:Atalasoft.Ocr.OcrGlyphCollection.OnInsertComplete(System.Int32,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Atalasoft.Ocr.OcrGlyphCollection.OnRemoveComplete(System.Int32,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Atalasoft.Ocr.OcrGlyphCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Atalasoft.Ocr.OcrGlyphCollection.OnElementChanged(Atalasoft.Ocr.OcrPageElementEventArgs)">
            <summary>
            Raises the <see cref="E:ElementChanged" /> event.
            </summary>
            <param name="args">The <see cref="T:Atalasoft.Ocr.OcrPageElementEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Atalasoft.Ocr.OcrGlyphMetrics">
            <summary> OcrGlyphMetrics is a utility class for statistically determining the baseline or other general metrics of
            a text from its bounding box or height. </summary>
            <remarks> This class is typically needed by creators of new OcrEngine objects. </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.OcrGlyphMetrics.GetAscentHeightRatio(System.Char)">
            <summary> Returns the ratio of character ascent to character height. </summary>
            <returns> A unitless value that represents the statistical ratio of a characters ascent to its overall height.  This
            can be used to determine the fontsize of a character. </returns>
            <remarks> This value is determined from a statistical range of values.  It will not be completely accurate.
            </remarks>
            <param name="c"> The character to be measured. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrGlyphMetrics.GetFontAscentHeightRatio(System.Char)">
            <summary> Get the ratio of an entire font's statistical ascent to its height. </summary>
            <remarks> This value is determined from a statistical range of values.  It will not be completely accurate.
            </remarks>
            <returns> A double representing the ratio of an entire font's statistical ascent to its height. </returns>
            <param name="c"> The character to be measured. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrGlyphMetrics.GetBaseLine(System.Char,System.Int32,System.Int32)">
            <remarks> This value is determined from a statistical range of values.  It will not be completely accurate.
            </remarks>
            <summary> Get the approximate baseline of a character. </summary>
            <returns> A value representing the baseline of the character in the same coordinate system as top and bottom.
            </returns>
            <param name="c"> The character to be measured. </param>
            <param name="top"> The topmost coordinate of the character. </param>
            <param name="bottom"> The bottommost coordinate of the character. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrGlyphMetrics.GetFontAscent(System.Char,System.Int32,System.Int32)">
            <summary> Gets the statistical ascent of an entire font from given character. </summary>
            <returns> A value representing the ascent of the character in the same coordinate system as top and bottom.
            </returns>
            <remarks> This value is determined from a statistical range of values.  It will not be completely accurate.
            </remarks>
            <param name="c"> The character to be measured. </param>
            <param name="top"> The topmost coordinate of the character. </param>
            <param name="bottom"> The bottommost coordinate of the character. </param>
        </member>
        <member name="T:Atalasoft.Ocr.OcrLine">
            <summary>
            Summary description for OcrLine.
            </summary>
            <summary> <STRONG>OcrLine</STRONG> represents lines of text contained within a text region on a page. </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrLine.#ctor(Atalasoft.Ocr.IOcrLineAccessor,System.Drawing.Rectangle,System.Int32)">
            <summary> Construct a new OcrLine object. </summary>
            <returns> A new OcrLine object. </returns>
            <remarks> Avoid calling the constructor directly.  Instead use the <see cref="T:Atalasoft.Ocr.OcrLine"/> method in the
            <see cref="P:Atalasoft.Ocr.OcrEngine.Factory"/> property. </remarks>
            <param name="accessor"> The <see cref="T:Atalasoft.Ocr.IOcrLineAccessor"/> that will be used to access data for this object.
            </param>
            <param name="bounds"> The bounding <see cref="T:System.Drawing.Rectangle"/> of the page element in pixels relative to the source
            image. </param>
            <param name="baseline">  The baseline of the text in pixels relative to the image.   </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrLine.RecalculateBounds">
            <summary> Recalculates the bounding box for this line. </summary>
            <remarks> This is a utility method that is used internally.  Under most circumstances, there is no need to call this
            directly. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.OcrLine.Accessor">
            <summary> This property provides the <see cref="T:Atalasoft.Ocr.IOcrLineAccessor"/> associated with this object. </summary>
            <value> An object of type <see cref="T:Atalasoft.Ocr.IOcrLineAccessor"/> to access the data for this object. </value>
        </member>
        <member name="M:Atalasoft.Ocr.OcrLine.StyleIsUniform(Atalasoft.Ocr.IFontMapper,Atalasoft.Ocr.IFontBuilder)">
            <summary> Check to see if the font and style are uniform across this line of text. </summary>
            <returns> True if the font family, style and size are the same throughout the line of text. </returns>
            <param name="mapper"> The <see cref="T:Atalasoft.Ocr.IFontMapper"/> to use to remap this line's font. </param>
            <param name="builder"> The <see cref="T:Atalasoft.Ocr.IFontBuilder"/> to use to construct the font. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrLine.GetFontAt(Atalasoft.Imaging.Dpi,Atalasoft.Ocr.IFontMapper,Atalasoft.Ocr.IFontBuilder,System.Int32)">
            <summary> Returns the <see cref="T:System.Drawing.Font"/> used for this page element. </summary>
            <returns> The Font that represents this glyph. </returns>
            <param name="imageResolution"> The resolution of the image from which this line was taken. </param>
            <param name="mapper"> The <see cref="T:Atalasoft.Ocr.IFontMapper"/> to use to remap this line's font. </param>
            <param name="builder"> The <see cref="T:Atalasoft.Ocr.IFontBuilder"/> to use to construct the font. </param>
            <param name="i"> The index of the glyph within a line of text. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrLine.GetFontNameAt(Atalasoft.Ocr.IFontMapper,System.Int32)">
            <summary> Get the name of the font for a glyph in a line. </summary>
            <param name="mapper"> The <see cref="T:Atalasoft.Ocr.IFontMapper"/> to use to remap this line's font. </param>
            <param name="i"> The index of the glyph within a line of text. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrLine.GetFontFamilyAt(Atalasoft.Ocr.IFontMapper,System.Int32)">
            <summary> Get the FontFamily at a particular point in a line of text. </summary>
            <returns> An object of type <see cref="T:System.Drawing.FontFamily"/> that represents the font family of the glyph. </returns>
            <param name="mapper"> The <see cref="T:Atalasoft.Ocr.IFontMapper"/> to use to remap this line's font. </param>
            <param name="i"> The index of the glyph within a line of text. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrLine.GetFontStyleAt(Atalasoft.Ocr.IFontMapper,System.Int32)">
            <summary> This property represents the <see cref="T:System.Drawing.FontStyle"/> of a glyph at a particular point in a line. </summary>
            <returns> An object of type <see cref="T:System.Drawing.FontStyle"/> that represents the font style of the glyph. </returns>
            <param name="mapper"> The <see cref="T:Atalasoft.Ocr.IFontMapper"/> to use to remap this line's font. </param>
            <param name="i"> The index of the glyph within a line of text. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrLine.GetFontSizeAt(Atalasoft.Imaging.Dpi,System.Int32)">
            <summary> This property represents the <see cref="T:System.Drawing.FontStyle"/> of a glyph at a particular point in a line. </summary>
            <returns> A floating point number that represents the size of the glyph in points. </returns>
            <param name="imageResolution"> The resolution of the image from which this line was taken. </param>
            <param name="i"> The index of the glyph within a line of text. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrLine.GetFontColorAt(System.Int32)">
            <summary> Get the color of a glyph within a line. </summary>
            <param name="i"> The index of the glyph within a line of text. </param>
        </member>
        <member name="P:Atalasoft.Ocr.OcrLine.Bounds">
            <summary> This property represents the bounding box of the line in pixels relative to the source image. </summary>
            <value> A <see cref="T:System.Drawing.Rectangle"/> that represents the bounding box of this line. </value>
        </member>
        <member name="P:Atalasoft.Ocr.OcrLine.Baseline">
            <summary> This property represents the baseline of the text in pixels relative to the source image. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrLine.TextKind">
            <summary>
            The Kind of text for the OcrLine. MachinePrint, HandPrint, Any. <see cref="T:Atalasoft.Ocr.OcrTextKind"/>
            </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrLine.Text">
            <summary> Returns the text of the line as a string. </summary>
            <value> A string representing the text of the line. </value>
        </member>
        <member name="P:Atalasoft.Ocr.OcrLine.Words">
            <summary> Gets an <see cref="T:Atalasoft.Ocr.OcrWordCollection"/> representing the words that make up this line of text. </summary>
            <value> An object of type <see cref="T:Atalasoft.Ocr.OcrWordCollection"/>. </value>
        </member>
        <member name="P:Atalasoft.Ocr.OcrLine.Confidence">
            <summary> This property represents the confidence of recognition of the entire line. </summary>
            <value> A double ranging from 0.0 (no confidence) to 1.0 (complete confidence). </value>
            <remarks> This value is calculated as the average confidence of all the glyphs in the line. </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.OcrLine.GetConfidenceAt(System.Int32)">
            <summary> Get the confidence of recognition at a particular point in a line of text. </summary>
            <returns> A double representing the confidence of recognition of the specified glyph ranging from 0.0 (no
            confidence) to 1.0 (complete confidence). </returns>
            <param name="i"> The index of the glyph within a line of text. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrLine.ResetConfidence">
            <summary> Resets the confidence of the line to that provided by the engine. </summary>
        </member>
        <member name="T:Atalasoft.Ocr.IOcrLineAccessor">
            <summary> <STRONG>IOcrLineAccessor</STRONG> defines an interface for accessing data elements for a line of text.
            </summary>
        </member>
        <member name="P:Atalasoft.Ocr.IOcrLineAccessor.Line">
            <summary> This property is used for setting the OcrLine that this accessor is attached to. </summary>
            <remarks> This property is used when an <see cref="T:Atalasoft.Ocr.OcrLine"/>,<BR/> is constructed.  Typically, an OcrEngine will
            construct an object that meets <see cref="T:Atalasoft.Ocr.IOcrLineAccessor"/> first, then construct the <see cref="T:Atalasoft.Ocr.OcrLine"/> via an
            <see cref="T:Atalasoft.Ocr.IOcrFactory"/>.  Finally, it will set the Line property to the constructed <see cref="T:Atalasoft.Ocr.OcrLine"/>.
            </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.IOcrLineAccessor.Text">
            <summary> Returns the text of the line as a string. </summary>
            <value> A string representing the text of the line. </value>
        </member>
        <member name="P:Atalasoft.Ocr.IOcrLineAccessor.Bounds">
            <summary> This property represents the bounding box of the line in pixels relative to the source image. </summary>
            <value> A <see cref="T:System.Drawing.Rectangle"/> that represents the bounding box of this line. </value>
        </member>
        <member name="M:Atalasoft.Ocr.IOcrLineAccessor.StyleIsUniform(Atalasoft.Ocr.IFontMapper,Atalasoft.Ocr.IFontBuilder)">
            <summary> Check to see if the font and style are uniform across this line of text. </summary>
            <returns> True if the font family, style and size are the same throughout the line of text. </returns>
            <param name="mapper"> The <see cref="T:Atalasoft.Ocr.IFontMapper"/> to use to
            remap this line's font. </param>
            <param name="builder"> The <see cref="T:Atalasoft.Ocr.IFontBuilder"/> to use
            to construct the font. </param>
        </member>
        <member name="P:Atalasoft.Ocr.IOcrLineAccessor.Confidence">
            <summary> This property represents the confidence of recognition of the entire line. </summary>
            <value> A double ranging from 0.0 (no confidence) to 1.0 (complete confidence). </value>
            <remarks> This value is calculated as the average confidence of all the glyphs in the line. </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.IOcrLineAccessor.GetConfidenceAt(System.Int32)">
            <summary> Get the confidence of recognition at a particular point in a line of text. </summary>
            <returns> A double representing the confidence of recognition of the specified glyph ranging from 0.0 (no
            confidence) to 1.0 (complete confidence). </returns>
            <param name="i"> The index of the glyph within a line of text. </param>
        </member>
        <member name="M:Atalasoft.Ocr.IOcrLineAccessor.GetFontAt(Atalasoft.Imaging.Dpi,Atalasoft.Ocr.IFontMapper,Atalasoft.Ocr.IFontBuilder,System.Int32)">
            <summary> Get the Font of a glyph at a particular point in a line of text. </summary>
            <returns> An object of type <see cref="T:System.Drawing.Font"/> that represents the font of the glyph. </returns>
            <param name="imageResolution"> The resolution of the image from which this line was taken. </param>
            <param name="mapper"> The <see cref="T:Atalasoft.Ocr.IFontMapper"/> to use to remap this line's font. </param>
            <param name="builder"> The <see cref="T:Atalasoft.Ocr.IFontBuilder"/> to use to construct the font. </param>
            <param name="i"> The index of the glyph within a line of text. </param>
        </member>
        <member name="M:Atalasoft.Ocr.IOcrLineAccessor.GetFontNameAt(Atalasoft.Ocr.IFontMapper,System.Int32)">
            <summary> Returns the name of the font used for the glyph at the specified position in the line. </summary>
            <returns> A string representing the name of the font used for the glyph at the specified position in the line.
            </returns>
            <param name="mapper"> The <see cref="T:Atalasoft.Ocr.IFontMapper"/> to use to
            remap this line's font. </param>
            <param name="i"> The index of the glyph within a line of text. </param>
        </member>
        <member name="M:Atalasoft.Ocr.IOcrLineAccessor.GetFontFamilyAt(Atalasoft.Ocr.IFontMapper,System.Int32)">
            <summary> Get the FontFamily at a particular point in a line of text. </summary>
            <returns> An object of type <see cref="T:System.Drawing.FontFamily"/> that represents the font family of the glyph. </returns>
            <param name="mapper"> The <see cref="T:Atalasoft.Ocr.IFontMapper"/> to use to
            remap this line's font. </param>
            <param name="i"> The index of the glyph within a line of text. </param>
        </member>
        <member name="M:Atalasoft.Ocr.IOcrLineAccessor.GetFontStyleAt(Atalasoft.Ocr.IFontMapper,System.Int32)">
            <summary> This property represents the <see cref="T:System.Drawing.FontStyle"/> of a glyph at a particular point in a line. </summary>
            <returns> An object of type <see cref="T:System.Drawing.FontStyle"/> that represents the font style of the glyph. </returns>
            <param name="mapper"> The <see cref="T:Atalasoft.Ocr.IFontMapper"/> to use to
            remap this line's font. </param>
            <param name="i"> The index of the glyph within a line of text. </param>
        </member>
        <member name="M:Atalasoft.Ocr.IOcrLineAccessor.GetFontSizeAt(Atalasoft.Imaging.Dpi,System.Int32)">
            <summary> Get the font size of a glyph at a particular point in a line of text. </summary>
            <returns> A floating point number that represents the size of the glyph in points. </returns>
            <param name="imageResolution"> The resolution of the image from which this line was taken. </param>
            <param name="i"> The index of the glyph within a line of text. </param>
        </member>
        <member name="M:Atalasoft.Ocr.IOcrLineAccessor.GetFontColorAt(System.Int32)">
            <summary> Returns the color of the glyph at the position in a line of text. </summary>
            <returns> The color of the glyph at the position in a line of text. </returns>
            <param name="i"> The index of the glyph within a line of text. </param>
        </member>
        <member name="P:Atalasoft.Ocr.IOcrLineAccessor.Baseline">
            <summary> This property represents the baseline of the text in pixels relative to the source image. </summary>
        </member>
        <member name="T:Atalasoft.Ocr.BasicOcrLineAccessor">
            <summary> BasicOcrLineAccessor is a simple implementation of the <see cref="T:Atalasoft.Ocr.IOcrLineAccessor"/> interface which
            provides basic functionality for a line of text. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.BasicOcrLineAccessor.Line">
            <summary> This property is used for setting the OcrLine that this accessor is attached to. </summary>
            <remarks> This property is used when an <see cref="T:Atalasoft.Ocr.OcrLine"/> is constructed.  Typically, an <see cref="T:Atalasoft.Ocr.OcrEngine"/>
            will construct an object that meets <see cref="T:Atalasoft.Ocr.IOcrLineAccessor"/> first, then construct the <see cref="T:Atalasoft.Ocr.OcrLine"/>
            via an <see cref="T:Atalasoft.Ocr.IOcrFactory"/>.  Finally, it will set the Line property to the constructed <see cref="T:Atalasoft.Ocr.OcrLine"/>.
            </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.BasicOcrLineAccessor.Text">
            <summary> Returns the text of the line as a string. </summary>
            <value> A string representing the text of the line. </value>
        </member>
        <member name="P:Atalasoft.Ocr.BasicOcrLineAccessor.Bounds">
            <summary> This property represents the bounding box of the line in pixels relative to the source image. </summary>
            <value> A <see cref="T:System.Drawing.Rectangle"/> that represents the bounding box of this glyph. </value>
        </member>
        <member name="P:Atalasoft.Ocr.BasicOcrLineAccessor.Baseline">
            <summary> This property represents the baseline of the text in pixels relative to the source image. </summary>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrLineAccessor.StyleIsUniform(Atalasoft.Ocr.IFontMapper,Atalasoft.Ocr.IFontBuilder)">
            <summary> Check to see if the font and style are uniform across this line of text. </summary>
            <returns> True if the font family, style and size are the same throughout the line of text. </returns>
            <param name="mapper"> An <see cref="T:Atalasoft.Ocr.IFontMapper"/> to map the font characteristics. </param>
            <param name="builder"> An <see cref="T:Atalasoft.Ocr.IFontBuilder"/> to build the resulting font. </param>
        </member>
        <member name="P:Atalasoft.Ocr.BasicOcrLineAccessor.Confidence">
            <summary> This property represents the confidence of recognition of the entire line. </summary>
            <value> A double ranging from 0.0 (no confidence) to 1.0 (complete confidence). </value>
            <remarks> This value is calculated as the average confidence of all the glyphs in the line. </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrLineAccessor.GetConfidenceAt(System.Int32)">
            <summary> Get the confidence of recognition at a particular point in a line. </summary>
            <returns> A double representing the confidence of recognition of the specified glyph ranging from 0.0 (no
            confidence) to 1.0 (complete confidence). </returns>
            <param name="i"> The index of the glyph within a line of text. </param>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrLineAccessor.GetFontAt(Atalasoft.Imaging.Dpi,Atalasoft.Ocr.IFontMapper,Atalasoft.Ocr.IFontBuilder,System.Int32)">
            <summary> Get the Font of a glyph at a particular point in a line of text. </summary>
            <returns> An object of type <see cref="T:System.Drawing.Font"/> that represents the font of the glyph. </returns>
            <param name="imageResolution"> The resolution of the source image. </param>
            <param name="mapper"> An <see cref="T:Atalasoft.Ocr.IFontMapper"/> to map the font characteristics. </param>
            <param name="builder"> An <see cref="T:Atalasoft.Ocr.IFontBuilder"/> to build the resulting font. </param>
            <param name="i"> The index of the glyph within a line of text. </param>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrLineAccessor.GetFontNameAt(Atalasoft.Ocr.IFontMapper,System.Int32)">
            <summary> Returns the name of the font used for the glyph at the specified position in the line. </summary>
            <returns> A string representing the name of the font used for the glyph at the specified position in the line.
            </returns>
            <param name="mapper"> An object to map font names. </param>
            <param name="i"> The index of the glyph within a line of text. </param>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrLineAccessor.GetFontFamilyAt(Atalasoft.Ocr.IFontMapper,System.Int32)">
            <summary> Get the <see cref="T:System.Drawing.FontFamily"/> for this glyph. </summary>
            <returns> An object of type <see cref="T:System.Drawing.FontFamily"/> that represents the font family of the glyph. </returns>
            <param name="mapper"> An <see cref="T:Atalasoft.Ocr.IFontMapper"/> to map the font characteristics. </param>
            <param name="i"> The index of the glyph within a line of text. </param>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrLineAccessor.GetFontStyleAt(Atalasoft.Ocr.IFontMapper,System.Int32)">
            <summary> This property represents the <see cref="T:System.Drawing.FontStyle"/> of a glyph at a particular point in a line. </summary>
            <returns> An object of type <see cref="T:System.Drawing.FontStyle"/> that represents the font style of the glyph. </returns>
            <param name="mapper"> An <see cref="T:Atalasoft.Ocr.IFontMapper"/> to map the font characteristics. </param>
            <param name="i"> The index of the glyph within a line of text. </param>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrLineAccessor.GetFontSizeAt(Atalasoft.Imaging.Dpi,System.Int32)">
            <summary> Get the font size of a glyph at a particular point in a line of text. </summary>
            <returns> A floating point number that represents the size of the glyph in points. </returns>
            <param name="imageResolution"> The resolution of the source image. </param>
            <param name="i"> The index of the glyph within a line of text. </param>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrLineAccessor.GetFontColorAt(System.Int32)">
            <summary> Returns the color of the glyph at the position in a line of text. </summary>
            <returns> The color of the glyph at the position in a line of text. </returns>
            <param name="i"> The index of the glyph within a line of text. </param>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrLineAccessor.FindWordFromIndex(System.Int32,System.Int32@)">
            <summary>
            Returns the Word located at the input index.
            </summary>
            <param name="characterIndex">The character index to start search.</param>
            <param name="wordIndex">The word index to start search.</param>
            <returns></returns>
        </member>
        <member name="T:Atalasoft.Ocr.OcrLineCollection">
            <summary>
            Summary description for OcrLineCollection.
            </summary>
            <summary> <STRONG>OcrLineCollection</STRONG> represents a standard collection of <see cref="T:Atalasoft.Ocr.OcrLine"/> objects.
            </summary>
            <seealso> OcrLine Class </seealso>
        </member>
        <member name="P:Atalasoft.Ocr.OcrLineCollection.Item(System.Int32)">
            <summary>
            Allows for accessing item by index
            </summary>
            <param name="index">integer used to retrieve item</param>        
            <returns>An OcrLine at index</returns>
        </member>
        <member name="M:Atalasoft.Ocr.OcrLineCollection.Add(Atalasoft.Ocr.OcrLine)">
            <summary> Adds an <see cref="T:Atalasoft.Ocr.OcrLine"/> to the collection. </summary>
            <returns> The position into which the new element was inserted. </returns>
            <param name="value"> The <see cref="T:Atalasoft.Ocr.OcrLine"/> to add to the collection. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrLineCollection.IndexOf(Atalasoft.Ocr.OcrLine)">
            <returns> The index of <EM>value</EM> if found; otherwise -1. </returns>
            <summary> Returns the index of a specified <see cref="T:Atalasoft.Ocr.OcrLine"/> in the collection. </summary>
            <param name="value"> The <see cref="T:Atalasoft.Ocr.OcrLine"/> to locate in the collection. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrLineCollection.Insert(System.Int32,Atalasoft.Ocr.OcrLine)">
            <summary> Inserts an <see cref="T:Atalasoft.Ocr.OcrLine"/> into the collection at specified position. </summary>
            <returns> n/a </returns>
            <param name="index"> The zero-based position at which the <see cref="T:Atalasoft.Ocr.OcrLine"/> should be inserted. </param>
            <param name="value"> The <see cref="T:Atalasoft.Ocr.OcrLine"/> to insert in the collection. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrLineCollection.Remove(Atalasoft.Ocr.OcrLine)">
            <summary> Removes the first occurrence of the specified <see cref="T:Atalasoft.Ocr.OcrLine"/> from the collection. </summary>
            <returns> n/a </returns>
            <param name="value"> The <see cref="T:Atalasoft.Ocr.OcrLine"/> to remove from the collection. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrLineCollection.Contains(Atalasoft.Ocr.OcrLine)">
            <returns> True if the object was found, false otherwise. </returns>
            <summary> Determines whether the collection contains a specified <see cref="T:Atalasoft.Ocr.OcrLine"/>. </summary>
            <param name="value"> The <see cref="T:Atalasoft.Ocr.OcrLine"/> to locate in the collection. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrLineCollection.CopyTo(Atalasoft.Ocr.OcrLine[],System.Int32)">
            <summary> Copies the elements of the <see cref="T:System.Collections.ICollection"/> to an <see cref="T:System.Array"/>, 
            starting at a particular <c>Array</c> index. </summary>
            <param name="array"> The one-dimensional <see cref="T:System.Array"/>
            that is the destination of the elements copied from the collection. The <c>Array</c> must have zero-based indexing.
            </param>
            <param name="index"> The zero-based index in <I>array</I> at which copying begins. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrLineCollection.OnClearComplete">
            <summary>
            This gets called after a clear is performed on the collection.
            </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrLineCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            This gets called after an insert is performed on the collection.
            </summary>
            <param name="index">The index of the newly added item.</param>
            <param name="value">The value that was inserted in the collection.</param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrLineCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            This gets called after a remove is performed.
            </summary>
            <param name="index">The location of the item in the collection.</param>
            <param name="value">The item that was removed.</param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrLineCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            This gets called after a value is set in the collection.
            </summary>
            <param name="index">The location of the item in the collection.</param>
            <param name="oldValue">The value at the index before the set was done.</param>
            <param name="newValue">The value at the index after the set was done.</param>
        </member>
        <member name="E:Atalasoft.Ocr.OcrLineCollection.ElementChanged">
            <remarks> This event is used for internal maintenance of bounding boxes and confidence levels.  It is typically not
            necessary for client code to hook into it. </remarks>
            <summary> This event is triggered when a change has been made to this collection. </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrLineCollection.OnElementChanged(Atalasoft.Ocr.OcrPageElementEventArgs)">
            <summary>
            Called when an element changed event occurs
            </summary>
            <param name="args">The details of the changing element.</param>
        </member>
        <member name="T:Atalasoft.Ocr.OcrNativePreprocessingOptions">
            <summary> This is a class built to hold constants to use as bit fields for native preprocessing options. </summary>
            <remarks> Bits 0-15 are reserved for engine-specific features.  Developers who need to define project-specific
            constants can use bits 16-31.  Since %%company%% may need more of the bits in the future, it is recommended that
            developers start from bit 31 and work down instead of from bit 16 and work up. </remarks>
        </member>
        <member name="F:Atalasoft.Ocr.OcrNativePreprocessingOptions.None">
            <summary>
            No preprocessing.
            </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrNativePreprocessingOptions.Deskew">
            <summary>
            Deskew image before processing.
            </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrNativePreprocessingOptions.AutoRotate">
            <summary>
            Auto-rotate image before processing.
            </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrNativePreprocessingOptions.Despeckle">
            <summary>
            Despeckle image before processing.
            </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrNativePreprocessingOptions.ToBilevel">
            <summary>
            Convert image to black and white before processing.
            </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrNativePreprocessingOptions.Invert">
            <summary>
            Invert image before processing.
            </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrNativePreprocessingOptions.FlipLeftRight">
            <summary>
            File image left to right before processing.
            </summary>
        </member>
        <member name="T:Atalasoft.Ocr.OcrPage">
            <summary> The <STRONG>OcrPage</STRONG> object represents a page within a document recognized by OCR. </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrPage.#ctor">
            <overloads> Constructs a new OcrPage object. </overloads>
            <returns> A new OcrPage object. </returns>
            <remarks> Avoid calling the constructor directly.  Instead use the <see cref="T:Atalasoft.Ocr.OcrPage"/> method in the
            <see cref="P:Atalasoft.Ocr.OcrEngine.Factory"/> property of an <see cref="T:Atalasoft.Ocr.OcrEngine"/>. </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.OcrPage.#ctor(System.Int32,System.Int32,Atalasoft.Imaging.Dpi)">
            <summary> Constructs an OcrPage with the given width and height and resolution. </summary>
            <returns> A new OcrPage object. </returns>
            <param name="width"> The width of the page in pixels. </param>
            <param name="height"> The height of the page in pixels. </param>
            <param name="resolution"> The resolution of the page. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrPage.#ctor(System.Drawing.Rectangle,Atalasoft.Imaging.Dpi)">
            <summary> Constructs a page representing an arbitrary rectangle </summary>
            <param name="bounds"> The bounds for the page </param>
            <param name="resolution"> The resolution of the page </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrPage.#ctor(Atalasoft.Imaging.AtalaImage)">
            <summary> Constructs an OcrPage with dimensions and resolution that match the supplied AtalaImage. </summary>
            <returns> A new OcrPage object. </returns>
            <param name="image"> The image that is used to define this page. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrPage.#ctor(System.Int32,System.Int32,Atalasoft.Imaging.AtalaImage)">
            <summary> Construct an OcrPage with a non-zero top corner. </summary>
            <param name="left"> The position of the left edge of the page </param>
            <param name="top"> The position of the top edge of the page </param>
            <param name="image"> The image from which this page is being constructed </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrPage.GetTextString(System.Boolean)">
            <summary>
            Returns textual information from the page.
            </summary>
            <param name="removeLineBreaks">Specifies whether to remove line breaks (replace them with space character) or preserve them.</param>
            <returns>Textual representation of the page.</returns>
        </member>
        <member name="P:Atalasoft.Ocr.OcrPage.Bounds">
            <summary> Gets or sets the bounds of this page </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrPage.Width">
            <remarks> Changing the dimensions of a page with existing page elements doesn't change the page elements. </remarks>
            <summary> This property sets or gets the width of the page. </summary>
            <value> An integer representing the width of the page in pixels. </value>
        </member>
        <member name="P:Atalasoft.Ocr.OcrPage.Height">
            <summary> This property gets or sets the height of the OcrPage. </summary>
            <value> An integer representing the height of the page in pixels. </value>
            <remarks> Changing the dimensions of a page with existing page elements doesn't change the page elements. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.OcrPage.Resolution">
            <remarks> Changing the resolution of a page with existing page elements doesn't change the page elements. </remarks>
            <summary> This property represents the overall resolution of the page. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrPage.Regions">
            <summary> This property represents a collection of all the page elements in this page. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrPage.Metadata">
            <summary> Gets the metadata associated with this page </summary>
        </member>
        <member name="T:Atalasoft.Ocr.OcrPageCollection">
            <summary>
            Summary description for OcrPageCollection.
            </summary>
            <summary> <STRONG>OcrPageCollection</STRONG> represents a standard collection of <see cref="T:Atalasoft.Ocr.OcrPage"/> objects.
            </summary>
            <seealso> OcrPage Class </seealso>
        </member>
        <member name="M:Atalasoft.Ocr.OcrPageCollection.#ctor">
            <summary> Constructs a new OcrPageCollection object. </summary>
            <returns> A new OcrPageCollection object. </returns>
        </member>
        <member name="P:Atalasoft.Ocr.OcrPageCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Atalasoft.Ocr.OcrPage"/> at the specified index.
            </summary>
            <param name="index">Index of the page.</param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrPageCollection.Add(Atalasoft.Ocr.OcrPage)">
            <summary> Adds an <see cref="T:Atalasoft.Ocr.OcrPage"/> to the collection. </summary>
            <returns> The position into which the new element was inserted. </returns>
            <param name="value"> The <see cref="T:Atalasoft.Ocr.OcrPage"/> to add to the collection. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrPageCollection.IndexOf(Atalasoft.Ocr.OcrPage)">
            <returns> The index of <EM>value</EM> if found; otherwise -1. </returns>
            <summary> Returns the index of a specified <see cref="T:Atalasoft.Ocr.OcrPage"/> in the collection. </summary>
            <param name="value"> The <see cref="T:Atalasoft.Ocr.OcrPage"/> to locate in the collection. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrPageCollection.Insert(System.Int32,Atalasoft.Ocr.OcrPage)">
            <summary> Inserts an <see cref="T:Atalasoft.Ocr.OcrPage"/> into the collection at specified position. </summary>
            <returns> n/a </returns>
            <param name="index"> The zero-based position at which the <see cref="T:Atalasoft.Ocr.OcrPage"/> should be inserted. </param>
            <param name="value"> The <see cref="T:Atalasoft.Ocr.OcrPage"/> to insert in the collection. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrPageCollection.Remove(Atalasoft.Ocr.OcrPage)">
            <summary> Removes the first occurrence of the specified <see cref="T:Atalasoft.Ocr.OcrPage"/> from the collection. </summary>
            <returns> n/a </returns>
            <param name="value"> The <see cref="T:Atalasoft.Ocr.OcrPage"/> to remove from the collection. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrPageCollection.Contains(Atalasoft.Ocr.OcrPage)">
            <returns> True if the object was found, false otherwise. </returns>
            <summary> Determines whether the collection contains a specified <see cref="T:Atalasoft.Ocr.OcrPage"/>. </summary>
            <param name="value"> The <see cref="T:Atalasoft.Ocr.OcrPage"/> to locate in the collection. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrPageCollection.CopyTo(Atalasoft.Ocr.OcrPage[],System.Int32)">
            <summary> Copies the elements of the <see cref="T:System.Collections.ICollection"/> to an <see cref="T:System.Array"/>, 
            starting at a particular <c>Array</c> index. </summary>
            <param name="array"> The one-dimensional <see cref="T:System.Array"/>
            that is the destination of the elements copied from the collection. The <c>Array</c> must have zero-based indexing.
            </param>
            <param name="index"> The zero-based index in <I>array</I> at which copying begins. </param>
        </member>
        <member name="E:Atalasoft.Ocr.OcrPageCollection.ElementChanged">
            <summary> This event is triggered when a change has been made to this collection. </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrPageCollection.OnClearComplete">
            <inheritdoc/>
        </member>
        <member name="M:Atalasoft.Ocr.OcrPageCollection.OnInsertComplete(System.Int32,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Atalasoft.Ocr.OcrPageCollection.OnRemoveComplete(System.Int32,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Atalasoft.Ocr.OcrPageCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Atalasoft.Ocr.OcrPageCollection.OnElementChanged(Atalasoft.Ocr.OcrPageElementEventArgs)">
            <summary>
            Raises the <see cref="E:ElementChanged" /> event.
            </summary>
            <param name="args">The <see cref="T:Atalasoft.Ocr.OcrPageElementEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Atalasoft.Ocr.OcrPreprocessingOptions">
            <summary>
            Summary description for OcrPreProcessingOptions.
            </summary>
            <summary> This class represents pre-processing options that will be applied to the core <STRONG>OcrEngine</STRONG>
            when recognizing. </summary>
            <remarks> This class can be extended to add more options, in which case, the instance of the extended class should
            be passed into the various pre-processing events that are fired in <STRONG>OcrEngine</STRONG>. </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.OcrPreprocessingOptions.#ctor">
            <summary> Creates a new instance of <STRONG>OcrPreprocessingOptions</STRONG>. </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrPreprocessingOptions.#ctor(System.Int32)">
            <summary> Creates a new instance of <STRONG>OcrPreprocessingOptions</STRONG> passing in the 32-bit native mask of
            processing options. </summary>
            <param name="options"> native pre-processing mask </param>
        </member>
        <member name="P:Atalasoft.Ocr.OcrPreprocessingOptions.Deskew">
            <summary> Determines if the OCR engine should deskew the image. </summary>
            <remarks> This option is on by default.  When <see cref="M:Atalasoft.Ocr.OcrEngine.OnImageTransformation(Atalasoft.Ocr.OcrImagePreprocessingEventArgs)"/> is invoked it's turned
            off so that if the engine itself has the capability to deskew, it will not be used. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.OcrPreprocessingOptions.AutoRotate">
            <summary> Determines of the OCR engine should rotate the document based on text orientation. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrPreprocessingOptions.Despeckle">
            <summary> Determines if the engine should despeckle the image. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrPreprocessingOptions.ToBilevel">
            <summary> Determines if the image should convert to black and white prior to OCR. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrPreprocessingOptions.Invert">
            <summary> Determines if the engine should invert the image </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrPreprocessingOptions.FlipLeftRight">
            <summary> Determines if the engine should flip the image left to right </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrPreprocessingOptions.SetOption(System.Int32,System.Boolean)">
            <summary>
            Sets an option using an integer mask
            </summary>
            <param name="option">The integer mask to use</param>
            <param name="val">The value to set the option</param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrPreprocessingOptions.GetOptionsMask">
            <summary> Gets the native pre-processing options from the value of properties in this class. </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrPreprocessingOptions.GetOption(System.Int32)">
            <summary>
            Retrieves the option using the integer mask.
            </summary>
            <param name="option">interger mask</param>
            <returns>The option for the integer mask.</returns>
        </member>
        <member name="M:Atalasoft.Ocr.OcrPreprocessingOptions.InternalClone">
            <summary>
            Returns a deep copy of the OcrPreProcessing options
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atalasoft.Ocr.OcrPreprocessingOptions.Clone">
            <summary> Creates a copy of this object </summary>
            <returns> A copy of OcrPreprocessingOptions.  The object must be cast. </returns>
        </member>
        <member name="T:Atalasoft.Ocr.OcrRegion">
            <summary> OcrRegion is a base class that represents the core functionality of a region within a page.  It is
            abstract and therefore can't be instantiated on its own. </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrRegion.#ctor(System.Drawing.Rectangle)">
            <summary>
            Initializes a new instance of the <see cref="T:Atalasoft.Ocr.OcrRegion" /> class.
            </summary>
            <param name="bounds">Region bounding rectangle.</param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrRegion.#ctor(Atalasoft.Utils.Geometry.PolygonF)">
            <summary>
            Initializes a new instance of the <see cref="T:Atalasoft.Ocr.OcrRegion" /> class.
            </summary>
            <param name="bounds">Region bounding rectangle.</param>
        </member>
        <member name="P:Atalasoft.Ocr.OcrRegion.Bounds">
            <value> The bounding <see cref="T:System.Drawing.Rectangle"/> of the page element in pixels relative to the source image. </value>
            <summary> This property represents the bounds of the Region in pixels. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrRegion.PolygonBounds">
            <value> The bounding <see cref="T:Atalasoft.Utils.Geometry.PolygonF"/> of the page element relative to the source image. </value>
            <summary> This property represents the bounds of the Region. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrRegion.IsRectangular">
            <summary>
            Gets a value indicating whether region is rectangular or not.
            </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrRegion.MaskToBounds(Atalasoft.Imaging.AtalaImage,System.Boolean)">
            <summary>
            Masks provided image to the region's bounds, optionally cropping masked area.
            </summary>
            <param name="image">Image to mask.</param>
            <param name="crop">Indicates whether crop the image or not.</param>
            <returns>Masked image.</returns>
        </member>
        <member name="T:Atalasoft.Ocr.OcrTextRegion">
            <summary> <c>OcrTextRegion</c> represents an area of text on a page. </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrTextRegion._rotation">
            <summary> This property represents the orientation of the text region, expressed as a rotation. </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrTextRegion._lines">
            <summary> This property provides access to individual lines of text within the region. </summary>
            <value> An object of type <see cref="T:Atalasoft.Ocr.OcrLineCollection"/>. </value>
        </member>
        <member name="M:Atalasoft.Ocr.OcrTextRegion.#ctor(System.Drawing.Rectangle)">
            <summary> Initializes a new instance of the <see cref="T:Atalasoft.Ocr.OcrTextRegion" /> class. </summary>
            <param name="bounds"> The bounding <see cref="T:System.Drawing.Rectangle"/> of the page element in pixels relative to the source image. </param>
            <returns> A new OcrTextRegion object. </returns>
            <remarks> Avoid calling the constructor directly.  Instead use the <see cref="T:Atalasoft.Ocr.OcrTextRegion"/> method in
            the <see cref="P:Atalasoft.Ocr.OcrEngine.Factory"/> property of an <see cref="T:Atalasoft.Ocr.OcrEngine"/>. </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.OcrTextRegion.#ctor(Atalasoft.Utils.Geometry.PolygonF)">
            <summary> Initializes a new instance of the <see cref="T:Atalasoft.Ocr.OcrTextRegion" /> class. </summary>
            <param name="bounds"> The bounding <see cref="T:System.Drawing.Rectangle"/> of the page element relative to the source image. </param>
            <returns> A new OcrTextRegion object. </returns>
            <remarks> Avoid calling the constructor directly.  Instead use the <see cref="T:Atalasoft.Ocr.OcrTextRegion"/> method in
            the <see cref="P:Atalasoft.Ocr.OcrEngine.Factory"/> property of an <see cref="T:Atalasoft.Ocr.OcrEngine"/>. </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.OcrTextRegion.#ctor(System.Drawing.Rectangle,Atalasoft.Ocr.OcrTextRotation)">
            <summary> Initializes a new instance of the <see cref="T:Atalasoft.Ocr.OcrTextRegion" /> class. </summary>
            <param name="bounds"> The bounding <see cref="T:System.Drawing.Rectangle"/> of the page element in pixels relative to the source image. </param>
            <param name="rotation"> The rotation of the text region with respect to the entire page. </param>
        </member>
        <member name="P:Atalasoft.Ocr.OcrTextRegion.TextKind">
            <summary>
            Gets or sets kind of the text within the text sregion.
            </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrTextRegion.RecalculateBounds">
            <summary> Recalculates the bounding box of a text region. </summary>
            <remarks> This is a utility method that is used internally.  Under most circumstances, there is no need to call this
            directly. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.OcrTextRegion.Confidence">
            <summary> This property represents the overall confidence with which the text was recognized. </summary>
            <value> A double ranging from 0.0 (no confidence) to 1.0 (complete confidence). </value>
            <remarks> This value is calculated as the average confidence of all the glyphs in the region. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.OcrTextRegion.Rotation">
            <summary> This property represents the orientation of the text region, expressed as a rotation. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrTextRegion.Lines">
            <summary> This property provides access to individual lines of text within the region. </summary>
            <value> An object of type <see cref="T:Atalasoft.Ocr.OcrLineCollection"/>. </value>
        </member>
        <member name="P:Atalasoft.Ocr.OcrTextRegion.ExpectedSymbolSet">
            <summary>
            Gets or sets expected symbol set for the text region.
            </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrTextRegion.ToString">
            <summary> Converts the entire contents of an OcrTextRegion to a single string. </summary>
            <remarks> The string is formed by concatenating every line in the region with a new line character between each
            line. </remarks>
            <overloads>
            <example>
<code><![CDATA[ string paragraph = myTextRegion.ToString();
Console.WriteLine("region contents: " + paragraph); ]]></code>
</example>
            </overloads>
        </member>
        <member name="T:Atalasoft.Ocr.OcrImageRegion">
            <summary> This class represents an Image contained within a page. </summary>
        </member>
        <member name="F:Atalasoft.Ocr.OcrImageRegion._image">
            <summary> Gets the image associated with this <STRONG>OcrImageRegion</STRONG>. </summary>
            <value> An <STRONG>AtalaImage</STRONG> that represents the image. </value>
        </member>
        <member name="M:Atalasoft.Ocr.OcrImageRegion.#ctor(System.Drawing.Rectangle,Atalasoft.Imaging.AtalaImage)">
            <summary> Initializes a new instance of the <see cref="T:Atalasoft.Ocr.OcrImageRegion" /> class. </summary>
            <param name="bounds"> The bounding <see cref="T:System.Drawing.Rectangle"/> of the page element in pixels relative to the parent image. </param>
            <param name="parentImage"> The image from which this image will be taken. </param>
            <returns> A new OcrImageRegion object. </returns>
            <remarks> <para>This constructor will make a new image by cropping the parent image to the given bounds.</para>
            <para>In typical usage, this constructor should not be called directly.  Instead, use the
            <see cref="T:Atalasoft.Ocr.OcrImageRegion"/> method contained in the <see cref="P:Atalasoft.Ocr.OcrEngine.Factory"/> property of
            <see cref="T:Atalasoft.Ocr.OcrEngine"/>.</para> </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.OcrImageRegion.#ctor(Atalasoft.Utils.Geometry.PolygonF,Atalasoft.Imaging.AtalaImage)">
            <summary> Initializes a new instance of the <see cref="T:Atalasoft.Ocr.OcrImageRegion" /> class. </summary>
            <param name="bounds"> The bounding <see cref="T:Atalasoft.Utils.Geometry.PolygonF"/> of the page element relative to the parent image. </param>
            <param name="parentImage"> The image from which this image will be taken. </param>
            <returns> A new OcrImageRegion object. </returns>
            <remarks> <para>This constructor will make a new image by cropping the parent image to the given bounds.</para>
            <para>In typical usage, this constructor should not be called directly.  Instead, use the
            <see cref="T:Atalasoft.Ocr.OcrImageRegion"/> method contained in the <see cref="P:Atalasoft.Ocr.OcrEngine.Factory"/> property of
            <see cref="T:Atalasoft.Ocr.OcrEngine"/>.</para> </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.OcrImageRegion.#ctor(Atalasoft.Imaging.AtalaImage,System.Boolean)">
            <summary> Initializes a new instance of the <see cref="T:Atalasoft.Ocr.OcrImageRegion" /> class. </summary>
            <remarks> <para>This constructor will make a new image by cropping the parent image to the given bounds.</para>
            <para>In typical usage, this constructor should not be called directly.  Instead, use the
            <see cref="T:Atalasoft.Ocr.OcrImageRegion"/> method contained in the <see cref="P:Atalasoft.Ocr.OcrEngine.Factory"/> property of
            <see cref="T:Atalasoft.Ocr.OcrEngine"/>.</para> </remarks>
            <param name="parentImage"> The image from which this image will be taken. </param>
            <param name="shouldCopy"> If shouldCopy is true, this constructor will make a copy of the image provided instead of
            using it directly. </param>
        </member>
        <member name="P:Atalasoft.Ocr.OcrImageRegion.Image">
            <summary> Gets the image associated with this <STRONG>OcrImageRegion</STRONG>. </summary>
            <value> An <STRONG>AtalaImage</STRONG> that represents the image. </value>
        </member>
        <member name="T:Atalasoft.Ocr.OcrBarcodeRegion">
            <summary> <STRONG>OcrBarcodeRegion</STRONG> is page element which describes a region that contains a barcode.
            </summary>
            <remarks> This object is in prototype stage and is likely to change. </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.OcrBarcodeRegion.#ctor(System.Drawing.Rectangle,System.String,Atalasoft.Ocr.OcrBarcodeSymbologies)">
            <summary> Initializes a new instance of the <see cref="T:Atalasoft.Ocr.OcrBarcodeRegion" /> class. </summary>
            <param name="bounds"> The bounding <see cref="T:System.Drawing.Rectangle"/> of the page element in pixels relative to the parent image. </param>
            <param name="text"> Text of the barcode within region. </param>
            <param name="barcodeType"> Type of the barcode within region. </param>
            <returns> A new OcrBarcodeRegion object </returns>
        </member>
        <member name="M:Atalasoft.Ocr.OcrBarcodeRegion.#ctor(Atalasoft.Utils.Geometry.PolygonF,System.String,Atalasoft.Ocr.OcrBarcodeSymbologies)">
            <summary> Initializes a new instance of the <see cref="T:Atalasoft.Ocr.OcrBarcodeRegion" /> class. </summary>
            <param name="bounds"> The bounding <see cref="T:Atalasoft.Utils.Geometry.PolygonF"/> of the page element relative to the parent image. </param>
            <param name="text"> Text of the barcode within region. </param>
            <param name="barcodeType"> Type of the barcode within region. </param>
            <returns> A new OcrBarcodeRegion object </returns>
        </member>
        <member name="P:Atalasoft.Ocr.OcrBarcodeRegion.Text">
            <summary> Gets the text of the recognized barcode. </summary>
            <value> A string representing the barcode. </value>
        </member>
        <member name="P:Atalasoft.Ocr.OcrBarcodeRegion.BarcodeType">
            <summary> Gets the type of barcode that is contained in this region. </summary>
        </member>
        <member name="T:Atalasoft.Ocr.OcrFormElementRegion">
            <summary> <STRONG>OcrFormElementRegion</STRONG> defines a page element identified as a form element. </summary>
            <remarks> This is a protoype class and will likely change in the future. </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.OcrFormElementRegion.#ctor(System.Drawing.Rectangle)">
            <summary> Initializes a new instance of the <see cref="T:Atalasoft.Ocr.OcrFormElementRegion" /> class. </summary>
            <param name="bounds"> The bounding <see cref="T:System.Drawing.Rectangle"/> of the page element in pixels relative to the parent image. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrFormElementRegion.#ctor(Atalasoft.Utils.Geometry.PolygonF)">
            <summary> Initializes a new instance of the <see cref="T:Atalasoft.Ocr.OcrFormElementRegion" /> class. </summary>
            <param name="bounds"> The bounding <see cref="T:Atalasoft.Utils.Geometry.PolygonF"/> of the page element relative to the parent image. </param>
        </member>
        <member name="T:Atalasoft.Ocr.OcrRegionCollection">
            <summary>
            Summary description for OcrRegionCollection.
            </summary>
            <summary> OcrRegionCollection represents a standard collection of <see cref="T:Atalasoft.Ocr.OcrRegion"/> objects. </summary>
            <seealso> OcrRegion Class </seealso>
        </member>
        <member name="M:Atalasoft.Ocr.OcrRegionCollection.#ctor">
            <summary> Constructs a new <STRONG>OcrRegionCollection</STRONG> object. </summary>
            <returns> A new OcrRegionCollection object. </returns>
        </member>
        <member name="P:Atalasoft.Ocr.OcrRegionCollection.Item(System.Int32)">
            <summary>
            Allows for retrieval of an OcrRegion from the collection by an index.
            </summary>
            <param name="index">The location within the collection</param>
            <returns>OcrRegion</returns>
        </member>
        <member name="M:Atalasoft.Ocr.OcrRegionCollection.Add(Atalasoft.Ocr.OcrRegion)">
            <summary> Adds an <see cref="T:Atalasoft.Ocr.OcrRegion"/> to the collection. </summary>
            <returns> The position into which the new element was inserted. </returns>
            <param name="value"> The <see cref="T:Atalasoft.Ocr.OcrRegion"/> to add to the collection. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrRegionCollection.IndexOf(Atalasoft.Ocr.OcrRegion)">
            <returns> The index of <EM>value</EM> if found; otherwise -1. </returns>
            <summary> Returns the index of a specified <see cref="T:Atalasoft.Ocr.OcrRegion"/> in the collection. </summary>
            <param name="value"> The <see cref="T:Atalasoft.Ocr.OcrRegion"/> to locate in the collection. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrRegionCollection.Insert(System.Int32,Atalasoft.Ocr.OcrRegion)">
            <summary> Inserts an <see cref="T:Atalasoft.Ocr.OcrRegion"/> into the collection at specified position. </summary>
            <returns> n/a </returns>
            <param name="index"> The zero-based position at which the <see cref="T:Atalasoft.Ocr.OcrRegion"/> should be inserted. </param>
            <param name="value"> The <see cref="T:Atalasoft.Ocr.OcrRegion"/> to insert in the collection. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrRegionCollection.Remove(Atalasoft.Ocr.OcrRegion)">
            <summary> Removes the first occurrence of the specified <see cref="T:Atalasoft.Ocr.OcrRegion"/> from the collection. </summary>
            <returns> n/a </returns>
            <param name="value"> The <see cref="T:Atalasoft.Ocr.OcrRegion"/> to remove from the collection. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrRegionCollection.Contains(Atalasoft.Ocr.OcrRegion)">
            <summary> Determines whether the collection contains a specified <see cref="T:Atalasoft.Ocr.OcrRegion"/>. </summary>
            <returns> True if the object was found, false otherwise. </returns>
            <param name="value"> The <see cref="T:Atalasoft.Ocr.OcrRegion"/> to locate in the collection. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrRegionCollection.CopyTo(Atalasoft.Ocr.OcrRegion[],System.Int32)">
            <summary> Copies the elements of the <see cref="T:System.Collections.ICollection"/> to an <see cref="T:System.Array"/>, 
            starting at a particular <c>Array</c> index. </summary>
            <param name="array"> The one-dimensional <see cref="T:System.Array"/>
            that is the destination of the elements copied from the collection. The <c>Array</c> must have zero-based indexing.
            </param>
            <param name="index"> The zero-based index in <I>array</I> at which copying begins. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrRegionCollection.OnClearComplete">
            <summary>
            This gets called after a clear is performed on the collection.
            </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrRegionCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            This gets called after an insert is performed on the collection.
            </summary>
            <param name="index">The index of the newly added item.</param>
            <param name="value">The value that was inserted in the collection.</param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrRegionCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            This gets called after a remove is performed.
            </summary>
            <param name="index">The location of the item in the collection.</param>
            <param name="value">The item that was removed.</param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrRegionCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            This gets called after a value is set in the collection.
            </summary>
            <param name="index">The location of the item in the collection.</param>
            <param name="oldValue">The value at the index before the set was done.</param>
            <param name="newValue">The value at the index after the set was done.</param>
        </member>
        <member name="E:Atalasoft.Ocr.OcrRegionCollection.ElementChanged">
            <summary> This event is triggered when a change has been made to this collection. </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrRegionCollection.OnElementChanged(Atalasoft.Ocr.OcrPageElementEventArgs)">
            <summary>
            Called when an element changed event occurs
            </summary>
            <param name="args">The details of the changing element.</param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrRegionCollection.IsValidForCollection(Atalasoft.Ocr.OcrRegion)">
            <summary>
            Returns whether the specified <see cref="T:Atalasoft.Ocr.OcrRegion"/> object is valid for addition to this collection.
            </summary>
            <remarks>For the base <see cref="T:Atalasoft.Ocr.OcrRegionCollection"/> class, this method always returns true.
            Typically, this method will be used for type-safety testing of objects in subclasses
            of <see cref="T:Atalasoft.Ocr.OcrRegionCollection"/>, although other use cases are possible too.</remarks>
            <param name="value">The <see cref="T:Atalasoft.Ocr.OcrRegion"/> to be tested for validity</param>
            <returns>True if the object is valid</returns>
        </member>
        <member name="T:Atalasoft.Ocr.OcrRegionCollection`1">
            <summary>
            Summary description for OcrRegionCollection. Version with Generics support.
            </summary>
            <summary> OcrRegionCollection represents a standard collection of <see cref="T:Atalasoft.Ocr.OcrRegion"/> objects. </summary>
            <seealso> OcrRegion Class </seealso>
        </member>
        <member name="P:Atalasoft.Ocr.OcrRegionCollection`1.Item(System.Int32)">
            <summary>
            Allows for retrieval of an OcrRegion from the collection by an index.
            </summary>
            <param name="index">The location within the collection</param>
            <returns>OcrRegion</returns>
        </member>
        <member name="M:Atalasoft.Ocr.OcrRegionCollection`1.Add(`0)">
            <summary> Adds an <see cref="T:Atalasoft.Ocr.OcrRegion"/> to the collection. </summary>
            <returns> The position into which the new element was inserted. </returns>
            <param name="value"> The <see cref="T:Atalasoft.Ocr.OcrRegion"/> to add to the collection. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrRegionCollection`1.IndexOf(`0)">
            <returns> The index of <EM>value</EM> if found; otherwise -1. </returns>
            <summary> Returns the index of a specified <see cref="T:Atalasoft.Ocr.OcrRegion"/> in the collection. </summary>
            <param name="value"> The <see cref="T:Atalasoft.Ocr.OcrRegion"/> to locate in the collection. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrRegionCollection`1.Insert(System.Int32,`0)">
            <summary> Inserts an <see cref="T:Atalasoft.Ocr.OcrRegion"/> into the collection at specified position. </summary>
            <returns> n/a </returns>
            <param name="index"> The zero-based position at which the <see cref="T:Atalasoft.Ocr.OcrRegion"/> should be inserted. </param>
            <param name="value"> The <see cref="T:Atalasoft.Ocr.OcrRegion"/> to insert in the collection. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrRegionCollection`1.Remove(`0)">
            <summary> Removes the first occurrence of the specified <see cref="T:Atalasoft.Ocr.OcrRegion"/> from the collection. </summary>
            <returns> n/a </returns>
            <param name="value"> The <see cref="T:Atalasoft.Ocr.OcrRegion"/> to remove from the collection. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrRegionCollection`1.Contains(`0)">
            <summary> Determines whether the collection contains a specified <see cref="T:Atalasoft.Ocr.OcrRegion"/>. </summary>
            <returns> True if the object was found, false otherwise. </returns>
            <param name="value"> The <see cref="T:Atalasoft.Ocr.OcrRegion"/> to locate in the collection. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrRegionCollection`1.CopyTo(`0[],System.Int32)">
            <summary> Copies the elements of the <see cref="T:System.Collections.ICollection"/> to an <see cref="T:System.Array"/>, 
            starting at a particular <c>Array</c> index. </summary>
            <param name="array"> The one-dimensional <see cref="T:System.Array"/>
            that is the destination of the elements copied from the collection. The <c>Array</c> must have zero-based indexing.
            </param>
            <param name="index"> The zero-based index in <I>array</I> at which copying begins. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrRegionCollection`1.IsValidForCollection(Atalasoft.Ocr.OcrRegion)">
            <summary>
            Returns whether the specified <see cref="T:Atalasoft.Ocr.OcrRegion"/> object is of the appropriate type for this collection.
            </summary>
            <param name="value">The <see cref="T:Atalasoft.Ocr.OcrRegion"/> to be tested for type-validity</param>
            <returns>True if the object is of type T (the type of this generic collection)</returns>
        </member>
        <member name="T:Atalasoft.Ocr.OcrResourceLoader">
            <summary>Used to load OCR Resources</summary>
            <remarks>
            Should be constructed in a static contructor before any OCR code.  See <see cref="T:Atalasoft.Ocr.GlyphReaderLoader"/> for
            more information. 
            </remarks>
            <seealso> GlyphReaderLoader Class </seealso>
        </member>
        <member name="M:Atalasoft.Ocr.OcrResourceLoader.#ctor">
            <summary> Creates a new instance of <STRONG>OcrResourceLoader</STRONG> and loads all OCR resources from all known
            engines from default locations.</summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrResourceLoader.#ctor(System.String)">
            <summary> Creates a new instance of <STRONG>OcrResourceLoader</STRONG> and loads all OCR resources from all known
            engines from a specified location. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrResourceLoader.OcrResourcesDirectoryName">
            <summary>
            Gets name of the folder where OCR Engine resources are stored.
            </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrResourceLoader.PathsSearched">
            <summary>
            Gets collection of folders searched for the resources.
            </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrResourceLoader.GetBaseResourcePaths">
            <summary>
            Gets collection of base paths where GlyphReader OCR Engine resources are stored.
            </summary>
            <returns>Collection of resources base paths.</returns>
        </member>
        <member name="T:Atalasoft.Ocr.GenericOcrResourceLoader">
            <summary>
            Helper class for loading OCR Engine resources.
            </summary>
        </member>
        <member name="P:Atalasoft.Ocr.GenericOcrResourceLoader.OcrResources">
            <summary>
            Gets the name of default OCR resources folder.
            </summary>
            <returns>Default OCR resources folder name.</returns>
        </member>
        <member name="M:Atalasoft.Ocr.GenericOcrResourceLoader.GetBaseResourcePaths">
            <summary>
            Gets collection of base path where OCR Engine resources are stored.
            </summary>
            <returns>Collection of resources base paths.</returns>
        </member>
        <member name="T:Atalasoft.Ocr.GlyphReaderLoader">
            <summary> This class is used to load all resources for the GlyphReader OCR Engine </summary>
            <remarks> This class should be constructed in a static constructor before the engine is used in any way. </remarks>
            <example>
<code><![CDATA[ Public Sub Shared Form1
    Dim loader As GlyphReaderLoader = New GlyphReaderLoader()
    If Not loader.Loaded Then
        MessageBox.Show("Failed to load OCR Resources")
    End If
End Sub ]]></code>

<code><![CDATA[ public static Form1()
{
    GlyphReaderLoader loader = new GlyphReaderLoader();
    if (!loader.Loaded)
    {
        MessageBox.Show("Failed to load OCR Resources");
    }
} ]]></code>
</example>
            <example>
<code><![CDATA[ Public Sub Shared Form1
    Dim loader As GlyphReaderLoader = New GlyphReaderLoader()
    If Not loader.Loaded Then
        MessageBox.Show("Failed to load OCR Resources")
    End If
End Sub ]]></code>

<code><![CDATA[ public static Form1()
{
    GlyphReaderLoader loader = new GlyphReaderLoader();
    if (!loader.Loaded)
    {
        MessageBox.Show("Failed to load OCR Resources");
    }
} ]]></code>
</example>
        </member>
        <member name="M:Atalasoft.Ocr.GlyphReaderLoader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Atalasoft.Ocr.GlyphReaderDllLoader"/> class
            and loads resources from default locations.
            </summary>
        </member>
        <member name="M:Atalasoft.Ocr.GlyphReaderLoader.#ctor(System.String)">
            <summary> 
            Initializes a new instance of the <see cref="T:Atalasoft.Ocr.GlyphReaderDllLoader"/> class 
            and loads resources from a specified location.
            </summary>
            <param name="resourceDir">The folder where the resources are loaded from.</param>
        </member>
        <member name="P:Atalasoft.Ocr.GlyphReaderLoader.Loaded">
            <summary> 
            Determines if the resources sucessfully loaded. 
            </summary>
            <value> True if successful. </value>
        </member>
        <member name="P:Atalasoft.Ocr.GlyphReaderLoader.FailureMessage">
            <summary> 
            The failure message when the resouces cannot be loaded. 
            </summary>
        </member>
        <member name="P:Atalasoft.Ocr.GlyphReaderLoader.DllHandle">
            <summary> 
            Gets the handle of the DLL from LoadLibrary().
            </summary>
        </member>
        <member name="P:Atalasoft.Ocr.GlyphReaderLoader.Location">
            <summary> 
            Gets the folder location of the resources. 
            </summary>
        </member>
        <member name="P:Atalasoft.Ocr.GlyphReaderLoader.FullPath">
            <summary> 
            Gets the full path of the resources. 
            </summary>
        </member>
        <member name="P:Atalasoft.Ocr.GlyphReaderLoader.PathsSearched">
            <summary>
            Gets collection of folders searched for the resources.
            </summary>
        </member>
        <member name="T:Atalasoft.Ocr.IrisLoader">
            <summary> 
            This class is used to load all resources for the Iris OCR Engine.
            </summary>
        </member>
        <member name="M:Atalasoft.Ocr.IrisLoader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Atalasoft.Ocr.IrisLoader"/> class.
            </summary>
        </member>
        <member name="P:Atalasoft.Ocr.IrisLoader.Loaded">
            <summary>
            Gets a value indicating whether resources are successfully loaded.
            </summary>
        </member>
        <member name="P:Atalasoft.Ocr.IrisLoader.FailureMessage">
            <summary>
            Gets the failure message when the resouces cannot be loaded.
            </summary>
        </member>
        <member name="P:Atalasoft.Ocr.IrisLoader.Location">
            <summary> 
            Gets the folder location of the resources. 
            </summary>
        </member>
        <member name="P:Atalasoft.Ocr.IrisLoader.FullPath">
            <summary> 
            Gets the full path of the resources. 
            </summary>
        </member>
        <member name="P:Atalasoft.Ocr.IrisLoader.DllHandle">
            <summary> 
            Gets the handle of the Iris DLL from LoadLibrary() 
            </summary>
        </member>
        <member name="P:Atalasoft.Ocr.IrisLoader.ResourceLocation">
            <summary>
            Gets the folder location of the Iris OCR Engine resources.
            </summary>
        </member>
        <member name="M:Atalasoft.Ocr.IrisLoader.GetProbableResourcePaths">
            <summary>
            Gets collection of paths where Iris OCR Engine resources could be found.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Atalasoft.Ocr.AbbyyLoader">
            <summary> 
            This class is used to load all resources for the ABBYY FineReader OCR Engine.
            </summary>
            <remarks> This class should be constructed in a static constructor before the engine is used in any way. </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.AbbyyLoader.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Atalasoft.Ocr.AbbyyLoader"/> class.
            </summary>
            <param name="resourceDir">The folder where the resources are loaded from.</param>
        </member>
        <member name="P:Atalasoft.Ocr.AbbyyLoader.Loaded">
            <summary> 
            Determines if the resources sucessfully loaded. 
            </summary>
            <value> True if successful. </value>
        </member>
        <member name="P:Atalasoft.Ocr.AbbyyLoader.FailureMessage">
            <summary> 
            The failure message when the resouces cannot be loaded. 
            </summary>
        </member>
        <member name="P:Atalasoft.Ocr.AbbyyLoader.DllHandle">
            <summary> 
            Gets the handle of the DLL from LoadLibrary().
            </summary>
        </member>
        <member name="P:Atalasoft.Ocr.AbbyyLoader.Location">
            <summary> 
            Gets the folder location of the resources. 
            </summary>
        </member>
        <member name="P:Atalasoft.Ocr.AbbyyLoader.FullPath">
            <summary> 
            Gets the full path of the resources. 
            </summary>
        </member>
        <member name="P:Atalasoft.Ocr.AbbyyLoader.PathsSearched">
            <summary>
            Gets collection of folders searched for the resources.
            </summary>
        </member>
        <member name="T:Atalasoft.Ocr.OcrWord">
            <summary>
            Summary description for OcrWord.
            </summary>
            <summary> The <STRONG>OcrWord</STRONG> object represents a word of recognized text. </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrWord.#ctor(Atalasoft.Ocr.IOcrWordAccessor,System.Drawing.Rectangle,System.Int32)">
            <summary> Constructs a new OcrWord object. </summary>
            <returns> A new OcrWord object. </returns>
            <remarks> Avoid calling the constructor directly.  Instead use the <see cref="T:Atalasoft.Ocr.OcrWord"/> method in the <see
            cref="P:Atalasoft.Ocr.OcrEngine.Factory"/> property. </remarks>
            <param name="accessor"> The <see cref="T:Atalasoft.Ocr.IOcrWordAccessor"/> that will be used to access data for this object.
            </param>
            <param name="bounds"> The bounding <see cref="T:System.Drawing.Rectangle"/> of the page element in pixels relative to the source
            image. </param>
            <param name="baseline">  The baseline of the text in pixels relative to the image.   </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrWord.RecalculateBounds">
            <remarks> This is a utility method that is used internally.  Under most circumstances, there is no need to call this
            directly. </remarks>
            <summary> Recalculates the bounding box of a word. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrWord.Alternates">
            <summary> Gets a collection of alternate words for this word. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrWord.Accessor">
            <summary> This property provides the <see cref="T:Atalasoft.Ocr.IOcrWordAccessor"/> associated with this object. </summary>
            <value> An object of type <see cref="T:Atalasoft.Ocr.IOcrWordAccessor"/> to access the data for this object. </value>
        </member>
        <member name="P:Atalasoft.Ocr.OcrWord.Bounds">
            <summary> This property represents the bounding box of the word in pixels relative to the source image. </summary>
            <value> A <see cref="T:System.Drawing.Rectangle"/> that represents the bounding box of this word. </value>
        </member>
        <member name="P:Atalasoft.Ocr.OcrWord.Baseline">
            <summary> This property represents the baseline of the text in pixels relative to the source image. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrWord.Text">
            <summary> Returns the text of the word as a string. </summary>
            <value> A string representing the text of the word. </value>
        </member>
        <member name="P:Atalasoft.Ocr.OcrWord.TextKind">
            <summary>
            Gets or sets text kind of the word.
            </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrWord.Glyphs">
            <summary> Gets an <see cref="T:Atalasoft.Ocr.OcrGlyphCollection"/> which contains the glyphs that make up this word. </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrWord.StyleIsUniform(Atalasoft.Ocr.IFontMapper,Atalasoft.Ocr.IFontBuilder)">
            <summary> Check to see if the font and style are uniform across this word of text. </summary>
            <returns> True if the font family, style and size are the same throughout the word of text. </returns>
            <param name="mapper"> The <see cref="T:Atalasoft.Ocr.IFontMapper"/> to use to remap this word's font. </param>
            <param name="builder"> The <see cref="T:Atalasoft.Ocr.IFontBuilder"/> to use to construct the font. </param>
        </member>
        <member name="P:Atalasoft.Ocr.OcrWord.Confidence">
            <summary> This property represents the confidence of recognition of the entire word. </summary>
            <value> A double ranging from 0.0 (no confidence) to 1.0 (complete confidence). </value>
            <remarks> This value is calculated as the average confidence of all the glyphs in the word. </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.OcrWord.GetConfidenceAt(System.Int32)">
            <summary> Get the confidence of recognition at a particular point in a wordof text. </summary>
            <returns> A double representing the confidence of recognition of the specified glyph ranging from 0.0 (no
            confidence) to 1.0 (complete confidence). </returns>
            <param name="i"> The index of the glyph within a word of text. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrWord.ResetConfidence">
            <summary> Resets the confidence of a word to the value supplied by its accessor. </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrWord.GetFontAt(Atalasoft.Imaging.Dpi,Atalasoft.Ocr.IFontMapper,Atalasoft.Ocr.IFontBuilder,System.Int32)">
            <summary> Returns the <see cref="T:System.Drawing.Font"/> used for this page element. </summary>
            <returns> The Font that represents this glyph. </returns>
            <param name="imageResolution"> The resolution of the image from which this word was taken. </param>
            <param name="mapper"> The <see cref="T:Atalasoft.Ocr.IFontMapper"/> to use to remap this word's font. </param>
            <param name="builder"> The <see cref="T:Atalasoft.Ocr.IFontBuilder"/> to use to construct the font. </param>
            <param name="i"> The index of the glyph within a word of text. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrWord.GetFontNameAt(Atalasoft.Ocr.IFontMapper,System.Int32)">
            <summary> Get the name of the font used for a glyph in the word. </summary>
            <param name="mapper"> The <see cref="T:Atalasoft.Ocr.IFontMapper"/> to use to remap this word's font. </param>
            <param name="i"> The index of the glyph within a word of text. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrWord.GetFontFamilyAt(Atalasoft.Ocr.IFontMapper,System.Int32)">
            <summary> Get the FontFamily at a particular point in a word of text. </summary>
            <returns> An object of type <see cref="T:System.Drawing.FontFamily"/> that represents the font family of the glyph. </returns>
            <param name="mapper"> The <see cref="T:Atalasoft.Ocr.IFontMapper"/> to use to remap this word's font. </param>
            <param name="i"> The index of the glyph within a word of text. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrWord.GetFontStyleAt(Atalasoft.Ocr.IFontMapper,System.Int32)">
            <summary> This property represents the <see cref="T:System.Drawing.FontStyle"/> of a glyph at a particular point in a word. </summary>
            <returns> An object of type <see cref="T:System.Drawing.FontStyle"/> that represents the font style of the glyph. </returns>
            <param name="mapper"> The <see cref="T:Atalasoft.Ocr.IFontMapper"/> to use to remap this word's font. </param>
            <param name="i"> The index of the glyph within a word of text. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrWord.GetFontSizeAt(Atalasoft.Imaging.Dpi,System.Int32)">
            <summary> This property represents the <see cref="T:System.Drawing.FontStyle"/> of a glyph at a particular point in a word. </summary>
            <returns> A floating point number that represents the size of the glyph in points. </returns>
            <param name="imageResolution"> The resolution of the image from which this word was taken. </param>
            <param name="i"> The index of the glyph within a word of text. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrWord.GetFontColorAt(System.Int32)">
            <summary> Get the color of a glyph within a word. </summary>
            <param name="i"> The index of the glyph within a word of text. </param>
        </member>
        <member name="T:Atalasoft.Ocr.IOcrWordAccessor">
            <summary> <STRONG>IOcrWordAccessor</STRONG> defines an interface for accessing data elements for a word. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.IOcrWordAccessor.Word">
            <summary> This property is used for setting the OcrWord that this accessor is attached to. </summary>
            <remarks> This property is used when an <see cref="T:Atalasoft.Ocr.OcrWord"/> is constructed.  Typically, an <see cref="T:Atalasoft.Ocr.OcrEngine"/>
            will construct an object that meets <see cref="T:Atalasoft.Ocr.IOcrWordAccessor"/> first, then construct the <see cref="T:Atalasoft.Ocr.OcrWord"/>
            via an <see cref="T:Atalasoft.Ocr.IOcrFactory"/>.  Finally, it will set the Line property to the constructed <see cref="T:Atalasoft.Ocr.OcrWord"/>.
            </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.IOcrWordAccessor.Bounds">
            <summary> This property represents the bounding box of the word in pixels relative to the source image. </summary>
            <value> A <see cref="T:System.Drawing.Rectangle"/> that represents the bounding box of this word. </value>
        </member>
        <member name="P:Atalasoft.Ocr.IOcrWordAccessor.Baseline">
            <summary> This property represents the baseline of the text in pixels relative to the source image. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.IOcrWordAccessor.Text">
            <summary> Returns the text of the word as a string. </summary>
            <value> A string representing the text of the word. </value>
        </member>
        <member name="M:Atalasoft.Ocr.IOcrWordAccessor.StyleIsUniform(Atalasoft.Ocr.IFontMapper,Atalasoft.Ocr.IFontBuilder)">
            <summary> Check to see if the font and style are uniform across this word of text. </summary>
            <returns> True if the font family, style and size are the same throughout the line of text. </returns>
            <param name="mapper"> The <see cref="T:Atalasoft.Ocr.IFontMapper"/> to use to
            remap this word's font. </param>
            <param name="builder"> The <see cref="T:Atalasoft.Ocr.IFontBuilder"/> to use
            to construct the font. </param>
        </member>
        <member name="P:Atalasoft.Ocr.IOcrWordAccessor.Confidence">
            <summary> This property represents the confidence of recognition of the entire word. </summary>
            <remarks> This value is calculated as the average confidence of all the glyphs in the word. </remarks>
            <value> A double ranging from 0.0 (no confidence) to 1.0 (complete confidence). </value>
        </member>
        <member name="M:Atalasoft.Ocr.IOcrWordAccessor.GetConfidenceAt(System.Int32)">
            <summary> Get the confidence of recognition at a particular point in a line. </summary>
            <returns> A double representing the confidence of recognition of the specified glyph ranging from 0.0 (no
            confidence) to 1.0 (complete confidence). </returns>
            <param name="i"> The index of the glyph within a word of text. </param>
        </member>
        <member name="M:Atalasoft.Ocr.IOcrWordAccessor.GetFontAt(Atalasoft.Imaging.Dpi,Atalasoft.Ocr.IFontMapper,Atalasoft.Ocr.IFontBuilder,System.Int32)">
            <summary> Get the Font of a glyph at a particular point in a line of text. </summary>
            <returns> An object of type Font that represents the font of the glyph. </returns>
            <param name="imageResolution"> The resolution of the image from which this word was taken. </param>
            <param name="mapper"> The <see cref="T:Atalasoft.Ocr.IFontMapper"/> to use to
            remap this word's font. </param>
            <param name="builder"> The <see cref="T:Atalasoft.Ocr.IFontBuilder"/> to use to construct the font. </param>
            <param name="i"> The index of the glyph within the word. </param>
        </member>
        <member name="M:Atalasoft.Ocr.IOcrWordAccessor.GetFontNameAt(Atalasoft.Ocr.IFontMapper,System.Int32)">
            <summary> Returns the name of the font used for the glyph at the specified position in the word. </summary>
            <returns> A string representing the name of the font used for the glyph at the specified position in the word.
            </returns>
            <param name="mapper"> The <see cref="T:Atalasoft.Ocr.IFontMapper"/> to use to
            remap this word's font. </param>
            <param name="i"> The index of the glyph within the word. </param>
        </member>
        <member name="M:Atalasoft.Ocr.IOcrWordAccessor.GetFontFamilyAt(Atalasoft.Ocr.IFontMapper,System.Int32)">
            <summary> Get the FontFamily at a particular point in a line of text. </summary>
            <returns> An object of type <see cref="T:System.Drawing.FontFamily"/> that represents the font family of the glyph. </returns>
            <param name="mapper"> The <a href="Atalasoft.dotImage.Ocr~Atalasoft.Ocr.IFontMapper.html">IFontMapper</a> to use to
            remap this word's font. </param>
            <param name="i"> The index of the glyph within the word. </param>
        </member>
        <member name="M:Atalasoft.Ocr.IOcrWordAccessor.GetFontStyleAt(Atalasoft.Ocr.IFontMapper,System.Int32)">
            <summary> This property represents the <see cref="T:System.Drawing.FontStyle"/> of a glyph at a particular point in a word. </summary>
            <returns> An object of type <see cref="T:System.Drawing.FontStyle"/> that represents the font style of the glyph. </returns>
            <param name="mapper"> The <see cref="T:Atalasoft.Ocr.IFontMapper"/> to use to
            remap this word's font. </param>
            <param name="i"> The index of the glyph within the word. </param>
        </member>
        <member name="M:Atalasoft.Ocr.IOcrWordAccessor.GetFontSizeAt(Atalasoft.Imaging.Dpi,System.Int32)">
            <summary> Get the font size of a glyph at a particular point in a word of text. </summary>
            <returns> A floating point number that represents the size of the glyph in points. </returns>
            <param name="imageResolution"> The resolution of the image from which this word was taken. </param>
            <param name="i"> The index of the glyph within the word. </param>
        </member>
        <member name="M:Atalasoft.Ocr.IOcrWordAccessor.GetFontColorAt(System.Int32)">
            <summary> Returns the name of the font used for the glyph at the specified position in the word. </summary>
            <returns> The color of the glyph at the position in a word of text. </returns>
            <param name="i"> The index of the glyph within a word of text. </param>
        </member>
        <member name="T:Atalasoft.Ocr.BasicOcrWordAccessor">
            <summary> BasicOcrLineAccessor is a simple implementation of the <see cref="T:Atalasoft.Ocr.IOcrWordAccessor"/> interface which
            provides basic functionality for a word of text. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.BasicOcrWordAccessor.Word">
            <summary> This property is used for setting the OcrWord that this accessor is attached to. </summary>
            <remarks> This property is used when an <see cref="T:Atalasoft.Ocr.OcrWord"/> is constructed.  Typically, an <see cref="T:Atalasoft.Ocr.OcrEngine"/>
            will construct an object that meets <see cref="T:Atalasoft.Ocr.IOcrWordAccessor"/> first, then construct the <see cref="T:Atalasoft.Ocr.OcrWord"/>
            via an <see cref="T:Atalasoft.Ocr.IOcrFactory"/>.  Finally, it will set the Word property to the constructed <see cref="T:Atalasoft.Ocr.OcrWord"/>.
            </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.BasicOcrWordAccessor.Bounds">
            <summary> This property represents the bounding box of the word in pixels relative to the source image. </summary>
            <value> A <see cref="T:System.Drawing.Rectangle"/> that represents the bounding box of this glyph. </value>
        </member>
        <member name="P:Atalasoft.Ocr.BasicOcrWordAccessor.Baseline">
            <summary> This property represents the baseline of the text in pixels relative to the source image. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.BasicOcrWordAccessor.Text">
            <summary> Returns the text of the word as a string. </summary>
            <value> A string representing the text of the word. </value>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrWordAccessor.StyleIsUniform(Atalasoft.Ocr.IFontMapper,Atalasoft.Ocr.IFontBuilder)">
            <summary> Check to see if the font and style are uniform across this word of text. </summary>
            <returns> True if the font family, style and size are the same throughout the line of text. </returns>
            <param name="mapper"> The <see cref="T:Atalasoft.Ocr.IFontMapper"/> to use to remap this word's font. </param>
            <param name="builder"> An <see cref="T:Atalasoft.Ocr.IFontBuilder"/> to build the resulting font. </param>
        </member>
        <member name="P:Atalasoft.Ocr.BasicOcrWordAccessor.Confidence">
            <summary> This property represents the confidence of recognition of the entire word. </summary>
            <value> A double ranging from 0.0 (no confidence) to 1.0 (complete confidence). </value>
            <remarks> This value is calculated as the average confidence of all the glyphs in the word. </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrWordAccessor.GetConfidenceAt(System.Int32)">
            <summary> Get the confidence of recognition at a particular point in a line. </summary>
            <returns> A double representing the confidence of recognition of the specified glyph ranging from 0.0 (no
            confidence) to 1.0 (complete confidence). </returns>
            <param name="i"> The index of the glyph within a word of text. </param>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrWordAccessor.GetFontAt(Atalasoft.Imaging.Dpi,Atalasoft.Ocr.IFontMapper,Atalasoft.Ocr.IFontBuilder,System.Int32)">
            <summary> Get the <see cref="T:System.Drawing.Font"/> of a glyph at a particular point in a word of text. </summary>
            <returns> An object of type <see cref="T:System.Drawing.Font"/> that represents the font of the glyph. </returns>
            <param name="imageResolution"> The resolution of the source image. </param>
            <param name="mapper"> The <see cref="T:Atalasoft.Ocr.IFontMapper"/> to use to remap this word's font. </param>
            <param name="builder"> An <see cref="T:Atalasoft.Ocr.IFontBuilder"/> to build the resulting font. </param>
            <param name="i"> The index of the glyph within a word of text. </param>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrWordAccessor.GetFontNameAt(Atalasoft.Ocr.IFontMapper,System.Int32)">
            <summary> Returns the name of the font used for the glyph at the specified position in the word. </summary>
            <returns> A string representing the name of the font used for the glyph at the specified position in the word.
            </returns>
            <param name="mapper"> The <see cref="T:Atalasoft.Ocr.IFontMapper"/> to use to remap this word's font. </param>
            <param name="i"> The index of the glyph within the word. </param>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrWordAccessor.GetFontFamilyAt(Atalasoft.Ocr.IFontMapper,System.Int32)">
            <returns> An object of type <see cref="T:System.Drawing.FontFamily"/> that represents the font family of the glyph. </returns>
            <summary> Get the <see cref="T:System.Drawing.FontFamily"/> for this glyph. </summary>
            <param name="mapper"> An <see cref="T:Atalasoft.Ocr.IFontMapper"/> to map the font characteristics. </param>
            <param name="i"> The index of the glyph within a word of text. </param>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrWordAccessor.GetFontStyleAt(Atalasoft.Ocr.IFontMapper,System.Int32)">
            <summary> This property represents the <see cref="T:System.Drawing.FontStyle"/> of a glyph at a particular point in a word. </summary>
            <returns> An object of type <see cref="T:System.Drawing.FontStyle"/> that represents the font style of the glyph. </returns>
            <param name="mapper"> The <see cref="T:Atalasoft.Ocr.IFontMapper"/> to use to remap this word's font. </param>
            <param name="i"> The index of the glyph within a word of text. </param>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrWordAccessor.GetFontSizeAt(Atalasoft.Imaging.Dpi,System.Int32)">
            <summary> Get the font size of a glyph at a particular point in a word of text. </summary>
            <returns> A floating point number that represents the size of the glyph in points. </returns>
            <param name="imageResolution"> The resolution of the source image from which this word was taken. </param>
            <param name="i"> The index of the glyph within a word of text. </param>
        </member>
        <member name="M:Atalasoft.Ocr.BasicOcrWordAccessor.GetFontColorAt(System.Int32)">
            <summary> Returns the name of the font used for the glyph at the specified position in the word. </summary>
            <returns> The color of the glyph at the position in a word of text. </returns>
            <param name="i"> The index of the glyph within a word of text. </param>
        </member>
        <member name="T:Atalasoft.Ocr.OcrWordCollection">
            <summary>
            Summary description for OcrLineCollection.
            </summary>
            <summary> <STRONG>OcrWordCollection</STRONG> represents a standard collection of <see cref="T:Atalasoft.Ocr.OcrWord"/> objects.
            </summary>
        </member>
        <member name="P:Atalasoft.Ocr.OcrWordCollection.Item(System.Int32)">
            <summary>
            Allows for retrieval of an item in the collection by index.
            </summary>
            <param name="index">The location within the collection to use</param>
            <returns>An OcrWord object at the index.</returns>
        </member>
        <member name="M:Atalasoft.Ocr.OcrWordCollection.Add(Atalasoft.Ocr.OcrWord)">
            <summary> Adds an <see cref="T:Atalasoft.Ocr.OcrWord"/> to the collection. </summary>
            <returns> The position into which the new element was inserted. </returns>
            <param name="value"> The <see cref="T:Atalasoft.Ocr.OcrWord"/> to add to the collection. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrWordCollection.IndexOf(Atalasoft.Ocr.OcrWord)">
            <returns> The index of <EM>value</EM> if found; otherwise -1. </returns>
            <summary> Returns the index of a specified <see cref="T:Atalasoft.Ocr.OcrWord"/> in the collection. </summary>
            <param name="value"> The <see cref="T:Atalasoft.Ocr.OcrWord"/> to locate in the collection. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrWordCollection.Insert(System.Int32,Atalasoft.Ocr.OcrWord)">
            <summary> Inserts an <see cref="T:Atalasoft.Ocr.OcrWord"/> into the collection at specified position. </summary>
            <returns> n/a </returns>
            <param name="index"> The zero-based position at which the <see cref="T:Atalasoft.Ocr.OcrWord"/> should be inserted. </param>
            <param name="value"> The <see cref="T:Atalasoft.Ocr.OcrWord"/> to insert in the collection. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrWordCollection.Remove(Atalasoft.Ocr.OcrWord)">
            <summary> Removes the first occurrence of the specified <see cref="T:Atalasoft.Ocr.OcrWord"/> from the collection. </summary>
            <returns> n/a </returns>
            <param name="value"> Removes the first occurrence of the specified <see cref="T:Atalasoft.Ocr.OcrWord"/> from the collection.
            </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrWordCollection.Contains(Atalasoft.Ocr.OcrWord)">
            <returns> True if the object was found, false otherwise. </returns>
            <summary> Determines whether the collection contains a specified <see cref="T:Atalasoft.Ocr.OcrWord"/>. </summary>
            <param name="value"> The <see cref="T:Atalasoft.Ocr.OcrWord"/> to locate in the collection. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrWordCollection.CopyTo(Atalasoft.Ocr.OcrWord[],System.Int32)">
            <summary> Copies the elements of the <see cref="T:System.Collections.ICollection"/> to an <see cref="T:System.Array"/>, 
            starting at a particular <c>Array</c> index. </summary>
            <param name="array"> The one-dimensional <see cref="T:System.Array"/>
            that is the destination of the elements copied from the collection. The <c>Array</c> must have zero-based indexing.
            </param>
            <param name="index"> The zero-based index in <I>array</I> at which copying begins. </param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrWordCollection.OnClearComplete">
            <summary>
            This gets called after a clear is performed on the collection.
            </summary>
        </member>
        <member name="M:Atalasoft.Ocr.OcrWordCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            This gets called after an insert is performed on the collection.
            </summary>
            <param name="index">The index of the newly added item.</param>
            <param name="value">The value that was inserted in the collection.</param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrWordCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            This gets called after a remove is performed.
            </summary>
            <param name="index">The location of the item in the collection.</param>
            <param name="value">The item that was removed.</param>
        </member>
        <member name="M:Atalasoft.Ocr.OcrWordCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            This gets called after a value is set in the collection.
            </summary>
            <param name="index">The location of the item in the collection.</param>
            <param name="oldValue">The value at the index before the set was done.</param>
            <param name="newValue">The value at the index after the set was done.</param>
        </member>
        <member name="E:Atalasoft.Ocr.OcrWordCollection.ElementChanged">
            <summary> This event is triggered when a change has been made to this collection. </summary>
            <remarks> This event is used for internal maintenance of bounding boxes and confidence levels.  It is typically not
            necessary for client code to hook into it. </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.OcrWordCollection.OnElementChanged(Atalasoft.Ocr.OcrPageElementEventArgs)">
            <summary>
            Called when an element changed event occurs
            </summary>
            <param name="args">The details of the changing element.</param>
        </member>
        <member name="T:Atalasoft.Ocr.PdfColorSpace">
            <summary> This enumeration defines color spaces supported for Pdf output. </summary>
        </member>
        <member name="F:Atalasoft.Ocr.PdfColorSpace.None">
            <summary> None - not used. </summary>
        </member>
        <member name="F:Atalasoft.Ocr.PdfColorSpace.DeviceGray">
            <summary> Gray </summary>
        </member>
        <member name="F:Atalasoft.Ocr.PdfColorSpace.DeviceRGB">
            <summary> Red, Green, Blue </summary>
        </member>
        <member name="F:Atalasoft.Ocr.PdfColorSpace.DeviceCMYK">
            <summary> Cyan, Magenta, Yellow, Black </summary>
        </member>
        <member name="F:Atalasoft.Ocr.PdfColorSpace.CalGray">
            <summary> Single component CIE color space </summary>
        </member>
        <member name="F:Atalasoft.Ocr.PdfColorSpace.Lab">
            <summary> CIE-based ABC color space </summary>
        </member>
        <member name="F:Atalasoft.Ocr.PdfColorSpace.ICCBased">
            <summary> ICC specific color space </summary>
        </member>
        <member name="F:Atalasoft.Ocr.PdfColorSpace.Indexed">
            <summary> Color mapped color space </summary>
        </member>
        <member name="F:Atalasoft.Ocr.PdfColorSpace.Pattern">
            <summary> Pattern color space </summary>
        </member>
        <member name="F:Atalasoft.Ocr.PdfColorSpace.Separation">
            <summary> Process color color space </summary>
        </member>
        <member name="F:Atalasoft.Ocr.PdfColorSpace.DeviceN">
            <summary> Arbitrary color component space </summary>
        </member>
        <member name="T:Atalasoft.Ocr.PdfTranslatorOutputType">
            <summary> This enumeration defines how the PdfTranslator will create its pages </summary>
        </member>
        <member name="F:Atalasoft.Ocr.PdfTranslatorOutputType.TextAndImages">
            <summary> Text and images will be placed on the pages separately. </summary>
        </member>
        <member name="F:Atalasoft.Ocr.PdfTranslatorOutputType.TextOnly">
            <summary> Only text will be placed on the pages. </summary>
        </member>
        <member name="F:Atalasoft.Ocr.PdfTranslatorOutputType.TextUnderImage">
            <summary> The entire image will be placed on the page with "invisible" text under it </summary>
        </member>
        <member name="F:Atalasoft.Ocr.PdfTranslatorOutputType.ImagesOnly">
            <summary> Only images will be placed on the pages </summary>
        </member>
        <member name="F:Atalasoft.Ocr.PdfTranslatorOutputType.TextAndClippedImage">
            <summary> Text and the entire image will be placed on the page, but the image will be clipped to areas defined as
            separate images by the OcrEngine </summary>
        </member>
        <member name="T:Atalasoft.Ocr.PdfImageCompressionType">
            <summary> This enumeration describes possible Pdf image compression </summary>
        </member>
        <member name="F:Atalasoft.Ocr.PdfImageCompressionType.None">
            <summary> No compression </summary>
        </member>
        <member name="F:Atalasoft.Ocr.PdfImageCompressionType.Flate">
            <summary> Zlib/deflate compression </summary>
        </member>
        <member name="F:Atalasoft.Ocr.PdfImageCompressionType.CcittGroup4">
            <summary> CCITT Group 4 compression </summary>
        </member>
        <member name="F:Atalasoft.Ocr.PdfImageCompressionType.JBig2">
            <summary> Joint Bi-Level Image Experts Group compression </summary>
        </member>
        <member name="F:Atalasoft.Ocr.PdfImageCompressionType.Jpeg">
            <summary> JPEG compression </summary>
        </member>
        <member name="F:Atalasoft.Ocr.PdfImageCompressionType.Jpeg2000">
            <summary> JPX/JPEG2000 compression </summary>
        </member>
        <member name="T:Atalasoft.Ocr.PdfPageConstructionEventArgs">
            <summary> This class is used to encapsulate information surrounding PDF page construction in the PDF Translator.
            </summary>
        </member>
        <member name="M:Atalasoft.Ocr.PdfPageConstructionEventArgs.#ctor(Atalasoft.Ocr.OcrPage,Atalasoft.Ocr.PdfPageInfo,System.Int32)">
            <summary> Construct a new PdfPageConstructionEventArgs object. </summary>
            <param name="ocrPage"> The OcrPage object from which a PDF Page will be made. </param>
            <param name="pageInfo"> The page information associated with this page. </param>
            <param name="pageIndex"> The zero-based index of this page within the document. </param>
        </member>
        <member name="P:Atalasoft.Ocr.PdfPageConstructionEventArgs.OcrPage">
            <summary> The OcrPage object from which a PDF Page will be made. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.PdfPageConstructionEventArgs.PageInfo">
            <summary> The page information associated with this page. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.PdfPageConstructionEventArgs.PageIndex">
            <summary> The zero-based index of this page within the document. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.PdfPageConstructionEventArgs.SkipPage">
            <summary> An indication as to whether or not this page should be skipped. </summary>
            <remarks> Set this property to <EM>true</EM> to skip this page.  The default value is false. </remarks>
        </member>
        <member name="T:Atalasoft.Ocr.PdfPageConstructionEventHandler">
            <summary>
            Event responsible for notifying about Pdf Page Contruction items.
            </summary>
            <param name="sender">The object that is sending the information.</param>
            <param name="e">The event details.</param>
        </member>
        <member name="T:Atalasoft.Ocr.PdfImageTicket">
            <summary> The PdfImageTicket class is used to store information about an image for PDF translation </summary>
        </member>
        <member name="M:Atalasoft.Ocr.PdfImageTicket.#ctor(Atalasoft.Imaging.AtalaImage,Atalasoft.Ocr.PdfImageCompressionType)">
            <summary> Construct a new PdfImageTicketObject </summary>
            <param name="image"> The source image for the page </param>
            <param name="compression"> The desired compression for the image in the PDF file </param>
            <overloads> Construct a new PdfImageTicketObject </overloads>
        </member>
        <member name="M:Atalasoft.Ocr.PdfImageTicket.#ctor(System.IO.Stream,System.Int64,System.Int64,System.Int32,System.Int32,System.Int32,Atalasoft.Ocr.PdfColorSpace,Atalasoft.Ocr.PdfImageCompressionType,Atalasoft.Imaging.Dpi)">
            <summary>
            Initializes a new instance of the <see cref="T:Atalasoft.Ocr.PdfImageTicket"/> class.
            </summary>
            <param name="source">The source.</param>
            <param name="start">The start.</param>
            <param name="length">The length.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="bitsPerComponent">The bits per component.</param>
            <param name="colorSpace">The color space.</param>
            <param name="compression">The compression.</param>
            <param name="resolution">The resolution.</param>
            <exception cref="T:System.ArgumentNullException">source;source stream can't be null</exception>
        </member>
        <member name="M:Atalasoft.Ocr.PdfImageTicket.#ctor(Atalasoft.Shared.IO.DisposableTempFile,Atalasoft.Ocr.PdfImageCompressionType,System.Int32,System.Int32,Atalasoft.Imaging.Dpi)">
            <summary>
            Initializes a new instance of the <see cref="T:Atalasoft.Ocr.PdfImageTicket"/> class.
            </summary>
            <param name="tempFile">Temporary file to use.</param>
            <param name="compression">The compression.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="resolution">The resolution.</param>
            <exception cref="T:System.ArgumentNullException">source;source stream can't be null</exception>
        </member>
        <member name="M:Atalasoft.Ocr.PdfImageTicket.#ctor(System.String,Atalasoft.Ocr.PdfImageCompressionType,Atalasoft.Imaging.Dpi)">
            <summary> Construct a new PdfImageTicketObject </summary>
            <param name="path"> A path to a file representing an image </param>
            <param name="compression"> The compression that will be used for that image in the resulting PDF </param>
            <param name="resolution"> The resolution of the image </param>
        </member>
        <member name="M:Atalasoft.Ocr.PdfImageTicket.#ctor(System.String,Atalasoft.Ocr.PdfImageCompressionType,System.Int32,System.Int32,Atalasoft.Imaging.Dpi)">
            <summary>
            Initializes a new instance of the <see cref="T:Atalasoft.Ocr.PdfImageTicket"/> class.
            </summary>
            <param name="path">The path.</param>
            <param name="compression">The compression.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="resolution">The resolution.</param>
            <exception cref="T:System.ArgumentNullException">path;path can't be null</exception>
        </member>
        <member name="M:Atalasoft.Ocr.PdfImageTicket.GetImage">
            <summary> Get the representation of the PdfImageTicket as an AtalaImage </summary>
        </member>
        <member name="M:Atalasoft.Ocr.PdfImageTicket.ClearImage">
            <summary> ClearImage removes all references to the image in this PdfImageTicket </summary>
        </member>
        <member name="M:Atalasoft.Ocr.PdfImageTicket.ClearPath">
            <summary> ClearPath removes any reference to the path to an image in the PdfImageTicket </summary>
        </member>
        <member name="M:Atalasoft.Ocr.PdfImageTicket.ClearTempFile">
            <summary>
            ClearTempFile calls Dispose on the DisposableTempFile if it is non-null.
            </summary>
        </member>
        <member name="P:Atalasoft.Ocr.PdfImageTicket.Resolution">
            <summary> Gets the resolution of this image </summary>
        </member>
        <member name="P:Atalasoft.Ocr.PdfImageTicket.Width">
            <summary> Gets the width of this image </summary>
        </member>
        <member name="P:Atalasoft.Ocr.PdfImageTicket.Height">
            <summary> Gets the height of this image </summary>
        </member>
        <member name="P:Atalasoft.Ocr.PdfImageTicket.Jpeg2000CompressionFactor">
            <summary>
            Gets or sets Jpeg2000 compression factor.
            </summary>
        </member>
        <member name="P:Atalasoft.Ocr.PdfImageTicket.JpegQuality">
            <summary>
            Gets or sets Jpeg quality.
            </summary>
        </member>
        <member name="T:Atalasoft.Ocr.PdfPageInfo">
            <summary> PdfPageInfo represents metadata for each page within an OcrPage in the process of being translated to PDF. </summary>
        </member>
        <member name="M:Atalasoft.Ocr.PdfPageInfo.#ctor">
            <summary> Constructs a new PdfPageInfo object using reasonable default values </summary>
            <overloads> Constructs a new PdfPageInfo object </overloads>
        </member>
        <member name="M:Atalasoft.Ocr.PdfPageInfo.#ctor(Atalasoft.Ocr.PdfTranslator)">
            <summary> Constructs a new PdfPageInfo object inheriting default values from an owning PdfTranslator </summary>
            <param name="owner"> The PdfTranslator that created this PdfPageInfo object </param>
        </member>
        <member name="P:Atalasoft.Ocr.PdfPageInfo.PageImage">
            <summary> A PdfImageTicket that represents the full image for this page. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.PdfPageInfo.ThumbnailImage">
            <summary> Determines the image that will be used for a thumbnail for a page. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.PdfPageInfo.PdfPageSize">
            <summary> The dimensions of the output page in PDF page units (1/72 of an inch) </summary>
            <remarks> In typical operation this value is generated by the translator. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.PdfPageInfo.OutputType">
            <summary> Determines the output style for this page. </summary>
            <remarks> Default value is <EM>TextAndImages.</EM> </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.PdfPageInfo.UseDocumentTextColor">
            <summary> Indicates that the color determined by the document is what will be used for final output. </summary>
            <remarks> If set to true, the text colors reported by the document will be used.  If set to false, the PdfPageInfo's
            TextColor will be used instead.  Default is true. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.PdfPageInfo.TextColor">
            <summary> Determines the default color for text on the page. </summary>
            <remarks> By default, this will be black. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.PdfPageInfo.CompressionSelector">
            <summary> The CompressionSelector is a delegate that is used to choose the compression for an image. </summary>
            <remarks> The compression selector is used to choose a compression mode for an image into a PDF file.  With a null
            CompressionSelector, the PdfTranslator will choose the what it thinks is the most appropriate compression scheme for
            any given image.  Default value is null. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.PdfPageInfo.GenerateThumbnails">
            <summary> Determines whether or not a thumbnail will be generated for this page. </summary>
            <remarks> Even with this value set to <EM>true</EM>, it may not always be possible to generate a thumbnail for a
            page.  Default value is <EM>true</EM>. </remarks>
        </member>
        <member name="T:Atalasoft.Ocr.PdfTextLayout">
            <summary>
            Summary description for PdfTextLayout.
            </summary>
        </member>
        <member name="T:Atalasoft.Ocr.PdfTranslationSession">
            <summary> <STRONG>PdfTranslationSession</STRONG> is a helper class used by the <STRONG>PdfTranslator</STRONG> to
            maintain state information about the current document being translated. </summary>
        </member>
        <member name="M:Atalasoft.Ocr.PdfTranslationSession.#ctor(Atalasoft.Ocr.PdfTranslator)">
            <summary> Constructs a new PdfTranslationSession object. </summary>
            <param name="owner"> The translator that is using this session. </param>
            <overloads> Constructs a new PdfTranslationSession object. </overloads>
            <remarks> This object is used internally.  In typical usage, a client need not use this object directly. </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.PdfTranslationSession.GetNextImageID">
            <summary> This is a utility method used by a session to uniquely identify images within a document </summary>
            <remarks> There is typically no need to call this method in client code. </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.PdfTranslationSession.ConnectToEngine(Atalasoft.Ocr.OcrEngine,Atalasoft.Ocr.OcrDocument)">
            <summary> Connect this session to the engine being used to generate a PDF document. </summary>
            <param name="engine"> The engine that will be used to recognize a set of images. </param>
            <param name="doc"> The OcrDocument into which the resulting pages will be added. </param>
        </member>
        <member name="M:Atalasoft.Ocr.PdfTranslationSession.DisconnectFromEngine(Atalasoft.Ocr.OcrEngine,Atalasoft.Ocr.OcrDocument)">
            <summary> Removes prior connections to the engine </summary>
            <param name="engine"> The engine to which this session was previously connected. </param>
            <param name="doc"> The OcrDocument generated by the engine. </param>
        </member>
        <member name="M:Atalasoft.Ocr.PdfTranslationSession.GetNextImageResourceName">
            <summary> This is a utility method used for generating resource names for images inside the Pdf document. </summary>
            <remarks> There is typically no need to call this method in client code. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.PdfTranslationSession.Engine">
            <summary> Returns the engine to which this session is attached. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.PdfTranslationSession.SessionID">
            <summary> Returns a session ID for this session. </summary>
            <remarks> The session ID is used for tracking temporary files by the translator.  There is typically no need to call
            this method in client code. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.PdfTranslationSession.UseTempFiles">
            <summary> Determines whether or not this session will use temporary files for translation. </summary>
            <remarks> Default is <EM>true</EM>.  When set to false, the PdfTranslator will attempt to keep a copy of every page
            image and every thumbnail in memory.  For small documents of a few pages or less, this is acceptable and will boost
            overall performance, but is impractical for larger documents. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.PdfTranslationSession.TempPath">
            <summary> Returns a base path used for temporary files for this session. </summary>
        </member>
        <member name="T:Atalasoft.Ocr.PdfCompressionSelector">
            <summary> This delegate is used to determine what compression to use on a given page in the process of being
            translated. </summary>
            <remarks> An inappropriate pixel format will result in an exception being thrown later on. </remarks>
            <param name="pf"> The pixel format of the image to be compressed. </param>
        </member>
        <member name="T:Atalasoft.Ocr.PdfTranslator">
            <summary> The <STRONG>PdfTranslator</STRONG> object is a general-purpose object for translating
            <STRONG>OcrDocuments</STRONG> and their pages into PDF files or streams. </summary>
            <remarks> Use this translator to create searchable PDF's from any supported OCR engine.  Supports the MIME Type
            "application/pdf". </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.PdfTranslator.UseTempFiles">
            <summary> Indicates whether or not temporary files will be used for page images in translation. </summary>
            <remarks> Default is <EM>true</EM>.  When set to false, the PdfTranslator will attempt to keep a copy of every page
            image and every thumbnail in memory.  For small documents of a few pages or less, this is acceptable and will boost
            overall performance, but is impractical for larger documents. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.PdfTranslator.TempPath">
            <summary> Sets or gets a path to use for temporary files. </summary>
            <remarks> Default is the appropriate operating system temporary folder. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.PdfTranslator.OutputType">
            <summary> The output style for pages. </summary>
            <remarks> Default value is <EM>TextUnderImage</EM>. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.PdfTranslator.UseDocumentTextColor">
            <summary> Indicates whether or not the document's text color will be used. </summary>
            <remarks> When set to <EM>false</EM>, the <see cref="P:Atalasoft.Ocr.PdfTranslator.TextColor"/> property will be used.  Default
            value is <EM>true</EM>. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.PdfTranslator.TextColor">
            <summary> Sets or gets a Color that can be used to override the recognized text color. </summary>
            <remarks> This value will be used when <see cref="P:Atalasoft.Ocr.PdfTranslator.UseDocumentTextColor"/> is set to <EM>false</EM>.
            Default value is black. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.PdfTranslator.CompressionSelector">
            <summary> This delegate can be used to select a compression type for images in an output PDF file. </summary>
            <remarks> Default value is null.  In this case, the Translator will decide the most appropriate compression.
            </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.PdfTranslator.GenerateThumbnails">
            <summary> Indicates whether or not the translator will generate thumnail images. </summary>
            <remarks> Default value is <EM>false</EM>.  When <EM>true</EM> the translator will attempt to honor it, but this is
            only possible if the translator has a stashed copy of the original page image. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.PdfTranslator.UseNormalizedBaseline">
            <summary> Indicates whether or not the translator will attempt to normalize the baseline for a line of text.
            </summary>
            <remarks> Default is <EM>true</EM>.  There is usually a fair amount of variability in the baseline of words in a
            line.  Setting this to true attempts to compensate for that variability by averaging the baselines of a line's
            components. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.PdfTranslator.SetDocumentMetadata">
            <summary> Gets or sets a value indicating if metadata should be included in the document. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.PdfTranslator.Title">
            <summary> Gets or sets the Title metadata to write in the resulting PDF. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.PdfTranslator.Author">
            <summary> Gets or sets the Author metadata to write in the resulting PDF. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.PdfTranslator.Subject">
            <summary> Gets or sets the Subject metadata to write in the resulting PDF. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.PdfTranslator.Keywords">
            <summary> Gets or sets the Keywords metadata to write in the resulting PDF. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.PdfTranslator.Creator">
            <summary> Gets or sets the Creator metadata to write in the resulting PDF. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.PdfTranslator.Producer">
            <summary> Gets or sets the Producer metadata to write in the resulting PDF. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.PdfTranslator.AutoPageRotation">
            <summary> Determines if the PDFTranslator will correct page rotation </summary>
            <remarks> If set to true, the PDFTranslator will rotate an entire page to reflect correct reading order if every
            text region within a given page is rotated the same direction. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.PdfTranslator.Metadata">
            <summary> Document metadata for the output file </summary>
        </member>
        <member name="P:Atalasoft.Ocr.PdfTranslator.BookmarkTree">
            <summary> Gets or sets the PDF bookmark tree that will be used with this document.  Default value is null (no tree).
            </summary>
            <example>
<code><![CDATA[ encoder.BookmarkTree = new PdfBookmarkTree(); 
PdfGotoViewAction action = PdfGotoViewAction.FitPage(); 
action.Page = new PdfIndexedPageReference(0); 
PdfBookmark bookmark = new PdfBookmark("Introduction", action); 
encoder.BookmarkTree.Bookmarks.Add(bookmark); ]]></code>
</example>
        </member>
        <member name="P:Atalasoft.Ocr.PdfTranslator.EnforceWordWidths">
            <summary> Indicates that the <STRONG>PdfTranslator</STRONG> should apply a horizontal scale to the text in a word to
            match the word bounding box as accurately as possible using the font size reported by the OCR engine. </summary>
            <remarks> Default value is <EM>true</EM>. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.PdfTranslator.Jpeg2000CompressionFactor">
            <summary> Sets or gets the compression factor for Jpeg2000 images </summary>
            <remarks> <para>This property is only used when an image within a document has been marked as being compressed with
            Jpeg2000 compression.  If the image is compressed with some other compression or the Jpeg2000 encoder is not
            present, this property will be ignored.</para>
            <para>See the dotImage documentation for a full description of the Jpeg2000 encoder and its properties.</para>
            </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.PdfTranslator.ClearOcrPageContents">
            <summary> Controls the behavior of the translator with respect to keeping OcrPages in memory. </summary>
            <remarks> When set to true, the PdfTranslator will clear the Regions property of every OcrPage after it has been
            transformed to PDF.  This will reduce the amount of memory consumed by the PdfTranslator for large documents.
            </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.PdfTranslator.DocumentType">
            <summary> Specifies the type of PDF document that will be produced, including PDF-A. </summary>
            <value> A value indicating the type of PDF document that will be produced. </value>
            <remarks> <para>The default value is PdfDocumentType.Default which allows the encoder the greatest latitude in
            creating PDF files.</para>
            <para>,<BR/>When using PDFA1b, the user must either provide appropriate ColorSpaces for all images or set <see
            cref="P:Atalasoft.Ocr.PdfTranslator.GenerateDefaultColorProfile"/> to true. ,<BR/></para> </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.PdfTranslator.UseCompressedObjectStreams">
            <summary>
            <para>Gets or sets a value indicating whether the PDF document contains compressed object streams.</para>
            </summary>
            <remarks>
            <para>PDF/A-1 does not support compressed object streams.</para>
            </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.PdfTranslator.GenerateDefaultColorProfile">
            <summary> Specifies if the PdfTranslator should try to generate it's default ColorProfiles for images added.
            </summary>
            <remarks> <para>This is designed to primarily be used for automatic PDFA compliance.</para>
            <para>Currently, CMYK Color Profiles cannot be automatically generated.</para> </remarks>
            <value> A boolean which specifies if the PdfTranslator will try to automatically generate ColorProfiles for embedded
            images. </value>
        </member>
        <member name="P:Atalasoft.Ocr.PdfTranslator.UserPassword">
            <remarks> <para>PDF documents have two passwords associated with them, a user password and an owner password.  If an
            encrypted document is opened by a conforming reader using the owner password, then the security Permissions are
            ignored.  If an encrypted document is opened by a conforming reader using the user password, then the security
            Permissions are enforced.  When a document is created with only one password or one unique password, it is
            considered the same as having only an owner password.</para>
            <para>PDF/A standard does not support encryption and password-protected
            access permissions.</para> </remarks>
            <summary> Sets or gets a user password to use for the document.  Default value is null (no password). </summary>
        </member>
        <member name="P:Atalasoft.Ocr.PdfTranslator.OwnerPassword">
            <summary> Sets or gets an owner password to use for the document.  Default value is null (no password). </summary>
            <remarks> <para>PDF documents have two passwords associated with them, a user password and an owner password.  If an
            encrypted document is opened by a conforming reader using the owner password, then the security Permissions are
            ignored.  If an encrypted document is opened by a conforming reader using the user password, then the security
            Permissions are enforced.  When a document is created with only one password or one unique password, it is
            considered the same as having only an owner password.</para>
            <para>PDF/A standard does not support encryption and password-protected
            access permissions.</para></remarks>
        </member>
        <member name="P:Atalasoft.Ocr.PdfTranslator.Permissions">
            <summary> Sets or gets the set of allowable actions for this PDF. </summary>
            <remarks> PdfAccessPermissions refer to permissions that are allowed within a PDF document.  Permissions are granted
            by allowing actions rather than preventing them. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.PdfTranslator.EncryptMetadata">
            <summary> Sets or gets a boolean indicating that metadata should be encrypted.  Default is false. </summary>
            <remarks> When a PDF document is encrypted, nearly all embedded strings and stream data are encrypted.  Metadata
            strings do not have to be encrypted.  This allows indexing software to retrieve metadata without needing to know
            document passwords. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.PdfTranslator.JpegQuality">
            <summary> Sets or gets the JpegQuality that will be used for images compressed with Jpeg. </summary>
            <remarks> Higher values are better quality.  Lower values create smaller files.  The default is 80. </remarks>
            <value> A value between 1 and 100, inclusive </value>
        </member>
        <member name="M:Atalasoft.Ocr.PdfTranslator.#ctor">
            <summary> Constructs a new <STRONG>PdfTranslator</STRONG> object. </summary>
            <overloads> Constructs a new PdfTranslator object. </overloads>
        </member>
        <member name="M:Atalasoft.Ocr.PdfTranslator.#ctor(Atalasoft.PdfDoc.PdfDocumentType)">
            <summary> Constructs a new <STRONG>PdfTranslator</STRONG> object. </summary>
            <remarks> Note that PDF/A-1B documents will be larger as they require all fonts to be embedded and images may not
            use JBIG2 or JPEG2000 encoders. </remarks>
            <param name="documentType"> The type of PDF document to create.  This can be used to select a PDF/A-1B document.
            </param>
        </member>
        <member name="M:Atalasoft.Ocr.PdfTranslator.Prepare(Atalasoft.Ocr.OcrEngine,Atalasoft.Ocr.OcrDocument)">
            <summary> Prepares the PdfTranslator for output </summary>
            <param name="engine"> The OcrEngine requesting translation </param>
            <param name="doc"> The OcrDocument which receives OcrPages during translation </param>
            <summary> Prepares a translator for document translation. </summary>
            <overloads> Prepares the PdfTranslator for output </overloads>
        </member>
        <member name="M:Atalasoft.Ocr.PdfTranslator.Translate(Atalasoft.Ocr.OcrEngine,Atalasoft.Ocr.OcrDocument,System.String,System.String,System.Object)">
            <summary> Translates an OcrDocument to a new output format writing to the given path. </summary>
            <param name="engine"> The engine that has recognized the document. </param>
            <param name="doc"> The recognized document </param>
            <param name="mimeType"> The requested MIME type </param>
            <param name="outFileName"> The path to the output file </param>
            <param name="translationObject"> The object returned by a previous call to <a
            href="Atalasoft.dotImage.Ocr~Atalasoft.Ocr.PdfTranslator~Prepare.html">Prepare</a> </param>
            <overloads> Translate an OcrDocument to a new output format. </overloads>
        </member>
        <member name="M:Atalasoft.Ocr.PdfTranslator.Translate(Atalasoft.Ocr.OcrEngine,Atalasoft.Ocr.OcrDocument,System.String,System.IO.Stream,System.Object)">
            <summary> Translates an OcrDocument to a new output format writing to the given Stream. </summary>
            <param name="engine"> The engine that has recognized the document. </param>
            <param name="doc"> The recognized document </param>
            <param name="mimeType"> The requested MIME type </param>
            <param name="outStream"> The Stream to write to </param>
            <param name="translationObject"> The object returned by a previous call to <a
            href="Atalasoft.dotImage.Ocr~Atalasoft.Ocr.PdfTranslator~Prepare.html">Prepare</a> </param>
        </member>
        <member name="M:Atalasoft.Ocr.PdfTranslator.Finish(Atalasoft.Ocr.OcrEngine,Atalasoft.Ocr.OcrDocument,System.Boolean,System.Object)">
            <summary> Finish a translation. </summary>
            <param name="engine"> The engine that invoked the translation. </param>
            <param name="doc"> The generated document. </param>
            <param name="successful"> Indicates whether or not the translation was successful. </param>
            <param name="translationObject"> The translation-specific object generated by PdfTranslator.Prepare.
            </param>
        </member>
        <member name="M:Atalasoft.Ocr.PdfTranslator.Supports(System.String)">
            <summary> Indicates whether or not this translator supports a given MIME type. </summary>
            <returns> <EM>True</EM> if the MIME type is supported, <EM>false</EM> otherwise. </returns>
            <param name="mimeType"> The MIME type to be checked. </param>
        </member>
        <member name="M:Atalasoft.Ocr.PdfTranslator.Supported">
            <summary> Returns an array of strings representing the MIME types supported by this translator. </summary>
            <remarks> Will always return "application/pdf" </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.PdfTranslator.CanStream">
            <summary> Indicates whether or not this translator can write to a Stream object </summary>
            <remarks> Always returns true, but the stream must be seekable. </remarks>
        </member>
        <member name="E:Atalasoft.Ocr.PdfTranslator.PageConstructing">
            <summary> This event is used to track when each OcrPage object is about to be translated into a PDF page. </summary>
            <remarks> In addition to being able to make late changes to the <see cref="T:Atalasoft.Ocr.OcrPage"/> contents, it is possible to
            induce the <see cref="T:Atalasoft.Ocr.PdfTranslator"/> to skip pages within the document via the
            <see cref="P:Atalasoft.Ocr.PdfPageConstructionEventArgs.SkipPage">SkipPage</see> property in the
            <see cref="T:Atalasoft.Ocr.PdfPageConstructionEventArgs"/>. </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.PdfTranslator.OnPageConstructing(Atalasoft.Ocr.PdfPageConstructionEventArgs)">
            <summary> This method fires the PageConstructing event </summary>
            <param name="e"> The page construction argument. </param>
        </member>
        <member name="P:Atalasoft.Ocr.PdfTranslator.UseIForeignTranslatorInterface">
            <summary> Indicates whether or not the PdfTranslator should use the older IForeignTranslator interface or the newer
            IPerPageTranslator interface </summary>
            <remarks> Default is false </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.PdfTranslator.Prepare(Atalasoft.Ocr.OcrEngine,Atalasoft.Ocr.OcrDocument,System.String,System.String)">
            <summary> Prepares the PdfTranslator for output </summary>
            <param name="engine"> The OcrEngine requesting translation </param>
            <param name="doc"> The OcrDocument which receives OcrPages during translation </param>
            <param name="mimeType"> The requested output mime type.  This should always be "application/pdf" </param>
            <param name="outFileName"> The path to the output PDF file </param>
        </member>
        <member name="M:Atalasoft.Ocr.PdfTranslator.Prepare(Atalasoft.Ocr.OcrEngine,Atalasoft.Ocr.OcrDocument,System.String,System.IO.Stream)">
            <summary> Prepares the PdfTranslator for output </summary>
            <param name="engine"> The OcrEngine requesting translation </param>
            <param name="doc"> The OcrDocument which receives OcrPages during translation </param>
            <param name="mimeType"> The requested output mime type.  This should always be "application/pdf" </param>
            <param name="outStream"> A stream for the output PDF file.  This stream should allow seeking </param>
        </member>
        <member name="M:Atalasoft.Ocr.PdfTranslator.TranslatePage(Atalasoft.Ocr.OcrEngine,Atalasoft.Ocr.OcrDocument,Atalasoft.Ocr.OcrPage,System.Object,System.Boolean,System.Int32,System.Int32)">
            <summary> Translates an individual page to a PDF page. </summary>
            <param name="engine"> The OcrEngine requesting translation </param>
            <param name="doc"> The OcrDocument which receives OcrPages during translation </param>
            <param name="page"> The last OcrPage that has been translated </param>
            <param name="translationObject"> The object returned by IPerPageTranslator.Prepare </param>
            <param name="totalPagesKnown"> A boolean indicating whether or not the total page count is known </param>
            <param name="pageIndex"> The zero-based index of the current page </param>
            <param name="totalPages"> The total pages (this is only valid if totalPagesKnown is true) </param>
        </member>
        <member name="T:Atalasoft.Ocr.TextWhitespaceMode">
            <summary> Controls how to handle whitespace in the <see cref="P:Atalasoft.Ocr.TextTranslator.Whitespace"/> property.
            </summary>
        </member>
        <member name="F:Atalasoft.Ocr.TextWhitespaceMode.NoWhitespace">
            <summary> Ignores all whitespace </summary>
        </member>
        <member name="F:Atalasoft.Ocr.TextWhitespaceMode.NoMargins">
            <summary> Truncates margins but factors all other whitespace </summary>
        </member>
        <member name="F:Atalasoft.Ocr.TextWhitespaceMode.AllWhitespace">
            <summary> Text document includes margins and all other whitespace </summary>
        </member>
        <member name="T:Atalasoft.Ocr.TextTranslator">
            <summary> Outputs OCR into formatted text. </summary>
            <remarks> Supports the MIME Type "text/plain". </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.TextTranslator.#ctor">
             <summary>
             Default Constructor for TextTranslator.
             </summary>
             <remarks>
             The constructor sets the whitespace settings to <see cref="F:Atalasoft.Ocr.TextWhitespaceMode.AllWhitespace"/>.
             The line terminator is \r\n.
             The character width scaling factor is set to 1.
             The character height scaling factor is set to .4.
             The cutoff for determining the number of blank lines is set to .5.
             The encoding method is set to <see cref="P:System.Text.Encoding.Unicode"/>.
            
             </remarks>
            
             <summary>Initializes a new instance of the <see cref="T:Atalasoft.Ocr.TextTranslator"/> class.</summary>
        </member>
        <member name="M:Atalasoft.Ocr.TextTranslator.#ctor(Atalasoft.Ocr.TextWhitespaceMode,System.String,System.Single,System.Single,System.Text.Encoding,System.Single)">
            <summary> Initializes a new instance of the <see cref="T:Atalasoft.Ocr.TextTranslator"/> class with given parameter values. </summary>
            <param name="whitespace"> indicates how to handle white space </param>
            <param name="lineTerminator"> a string value used for line termination </param>
            <param name="characterSpaceMaximum"> the maximum number of spaces to include in the translated output </param>
            <param name="lineMergeFactor"> the factor use to determine when to combine lines from multiple zones. </param>
            <param name="encodingMethod"> the text encoding method </param>
            <param name="lineSpacingCutOff"> the line spacing cutoff </param>
        </member>
        <member name="P:Atalasoft.Ocr.TextTranslator.LineTerminator">
            <summary>
            Property that allows for the getting and setting of the line terminator.
            </summary>
            <remarks>
            The line terminator is used when printing a new line in the text document.  Example values are \n \r and \r\n
            </remarks>
            <summary> Gets or sets a string value used for line termination. </summary>
            <remarks> Default value is /r/n </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.TextTranslator.CharacterSpaceMaximum">
            <summary>
            Property that allows for the getting and setting of the character width scale
            </summary>
            <remarks>
            The character width scale is a multiple which determines how many character widths to ignore.  For normal spacing,
            this should generally be set to 1.  For documents with multiple spaces between characters, this number can be increased
            to make the large space into a single space.  Setting this value to 0, creates a justified version of the document.
            </remarks>
            <summary> Gets or sets the maximum number of spaces to include in the translated output. </summary>
            <remarks> This property a multiple which determines how many character widths to ignore.  For normal spacing, this
            should generally be set to 1.  For documents with multiple spaces between characters, this number can be increased
            to make the large space into a single space.  Setting this value to 0, creates a document with no spaces. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.TextTranslator.LineMergeFactor">
            <summary>
            Property that allows for the getting and setting of the character height scale.
            </summary>
            <remarks>
            The character height scale is used when examining lines from multiple regions and determining if two lines of text should
            be merged to a single line in the text document.  The smaller this value, the stricter the line merging.  Larger values will
            merge lines that may not be on the same line in the original document.  Generally, this value is set to .4.
            </remarks>
            <remarks> This property is used when examining lines from multiple regions and determining if two lines of text
            should be merged to a single line in the text document.  The smaller this value, the stricter the line merging.
            Larger values will merge lines that may not be on the same line in the original document.  Defaults to 0.4.
            </remarks>
            <summary> Gets or sets the factor use to determine when to combine lines from multiple zones. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.TextTranslator.LineSpacingCutOff">
            <summary>
            Property that allows for the getting and setting of the line space cut off.
            </summary>
            <remarks>
            When calculating the number of blank lines that should be inserted between two consecutive lines,
            this is the margin for what decimal remainder should still be considered a line.  The smaller this number, the more
            spaces will be added.  This number should range between 0 and 1 for regular documents.  Making the number greater than
            1 will change the original documents spacing.
            </remarks>
            <remarks> When calculating the number of blank lines that should be inserted between two consecutive lines, this is
            the margin for what decimal remainder should still be considered a line.  The smaller this number, the more spaces
            will be added.  This number should range between 0 and 1 for regular documents.  Making the number greater than 1
            will change the original documents spacing. </remarks>
            <summary> Gets or sets the line spacing cutoff. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.TextTranslator.Whitespace">
             <summary>
             Property that allows for the getting and setting of the Whitespace parameter.
             </summary>
             <remarks>
             The Whitespace parameter controls how much the text document looks like the original.
             </remarks>
            
             <summary> Gets or sets a value indicating how to handle white space. </summary>
        </member>
        <member name="P:Atalasoft.Ocr.TextTranslator.EncodingMethod">
            <summary>
            Property that allows for the getting and setting of the text encoding method.
            </summary>
            <summary> Gets or sets the text encoding method. </summary>
        </member>
        <member name="M:Atalasoft.Ocr.TextTranslator.Overlap(System.Int32,System.Int32,System.Int32,System.Single)">
            <summary>
            Given a integer boundary, two integer boundary upperBoundry and lowerBoundry, and a float tolerance,
            determines if boundary falls between the limits with the tolerance provided.
            </summary>
            <param name="boundary"></param>
            <param name="upperBoundary"></param>
            <param name="lowerBoundary"></param>
            <param name="tolerance"></param>
            <returns></returns>
        </member>
        <member name="M:Atalasoft.Ocr.TextTranslator.Finish(Atalasoft.Ocr.OcrEngine,Atalasoft.Ocr.OcrDocument,System.Boolean,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Atalasoft.Ocr.TextTranslator.Prepare(Atalasoft.Ocr.OcrEngine,Atalasoft.Ocr.OcrDocument)">
            <inheritdoc/>
        </member>
        <member name="M:Atalasoft.Ocr.TextTranslator.Translate(Atalasoft.Ocr.OcrEngine,Atalasoft.Ocr.OcrDocument,System.String,System.IO.Stream,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Atalasoft.Ocr.TextTranslator.GetOcrPageRotation(Atalasoft.Ocr.OcrPage)">
            <summary>
            Get rotation of ocr page, based on rotation of OcrTextRegions.
            In case, when regions have different rotations, method returns None
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:Atalasoft.Ocr.TextTranslator.Translate(Atalasoft.Ocr.OcrEngine,Atalasoft.Ocr.OcrDocument,System.String,System.String,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Atalasoft.Ocr.TextTranslator.CanStream">
            <inheritdoc/>
        </member>
        <member name="M:Atalasoft.Ocr.TextTranslator.Supported">
            <inheritdoc/>
        </member>
        <member name="M:Atalasoft.Ocr.TextTranslator.Supports(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Atalasoft.Ocr.ITranslator">
            <summary> <STRONG>ITranslator</STRONG> defines an interface which allows the translation of documents from images to
            text-based formats. </summary>
            <remarks> Client code will almost always want to implement <see cref="T:Atalasoft.Ocr.INativeTranslator"/> or <see
            cref="T:Atalasoft.Ocr.IForeignTranslator"/> rather than <see cref="T:Atalasoft.Ocr.ITranslator"/>. </remarks>
            <seealso> IForeignTranslator Interface </seealso>
            <seealso> INativeTranslator Interface </seealso>
        </member>
        <member name="M:Atalasoft.Ocr.ITranslator.Supports(System.String)">
            <summary> Checks to see if a specific mime type is supported by this translator. </summary>
            <returns> True if the mime type is supported, false otherwise. </returns>
            <param name="mimeType"> A string representing a mime type to be checked. </param>
        </member>
        <member name="M:Atalasoft.Ocr.ITranslator.Supported">
            <summary> Get an array of mime types supported by this translator. </summary>
            <returns> An array of strings containing mime types supported by this translator. </returns>
        </member>
        <member name="M:Atalasoft.Ocr.ITranslator.CanStream">
            <summary> Checks to see if this translator is capable of streaming. </summary>
            <returns> True if the translator can stream, false otherwise. </returns>
        </member>
        <member name="T:Atalasoft.Ocr.INativeTranslator">
            <summary> <STRONG>INativeTranslator</STRONG> is an interface used to define how an <see cref="T:Atalasoft.Ocr.OcrDocument"/> will be
            translated to another format by low-level OCR engine support. </summary>
            <remarks> <para>Native Translators are engine specific and must be implemented in a class deriving from
            <STRONG>OcrEngine</STRONG>.</para> </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.INativeTranslator.Translate(Atalasoft.Imaging.ImageSource,System.String,System.String)">
            <overloads> Translate a set of images to a document of the given mime type, writing to a Stream or to a file.
            </overloads>
            <remarks> Engine may be null.  Throws an Exception of type <see cref="T:Atalasoft.Ocr.OcrException"/> if the mime type is unknown.
            </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.INativeTranslator.Translate(Atalasoft.Imaging.ImageSource,System.String,System.IO.Stream)">
            <overloads> Translate a set of images to a document of the given mime type, writing to a Stream or to a file.
            </overloads>
            <remarks> Engine may be null.  Throws an Exception of type <see cref="T:Atalasoft.Ocr.OcrException"/> if the mime type is unknown.
            </remarks>
        </member>
        <member name="T:Atalasoft.Ocr.IForeignTranslator">
            <summary> <STRONG>IForeignTranslator</STRONG> is a interface used to define how an <see cref="T:Atalasoft.Ocr.OcrDocument"/> will be
            translated to another format. </summary>
            <remarks> <para>Classes implementing <STRONG>IForeignTranslator</STRONG> are used to to augment or replace native
            translation capability provided by an <see cref="T:Atalasoft.Ocr.OcrEngine"/>.  These translators can be used across all OCR
            Engines, thus are not specific to a single engine.  <see cref="T:Atalasoft.Ocr.TextTranslator"/> and <see cref="T:Atalasoft.Ocr.PdfTranslator"/> are
            both Foreign Translators.</para> </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.IForeignTranslator.Prepare(Atalasoft.Ocr.OcrEngine,Atalasoft.Ocr.OcrDocument)">
            <summary> Prepare a foreign translator for translation. </summary>
            <remarks> <para>This method is provided for two purposes.  The first is to establish a translator-specific object to
            maintain state information about the current translator session.  The second is to populate the <see
            cref="T:Atalasoft.Ocr.OcrDocument"/> object with metadata or infrastructure for metadata.</para>
            <para>During translation, <see cref="T:Atalasoft.Ocr.OcrEngine"/> will construct an empty <see cref="T:Atalasoft.Ocr.OcrDocument"/> and pass both
            itself and the document to the foreign translator through <EM>Prepare</EM>.  Then the engine will attempt to
            recognize pages, then the foreign translator will translate the <see cref="T:Atalasoft.Ocr.OcrDocument"/> into final form.  If an
            error occurs, the foreign translator is always given an opportunity to clean up via the <see
            cref="M:Atalasoft.Ocr.IForeignTranslator.Finish(Atalasoft.Ocr.OcrEngine,Atalasoft.Ocr.OcrDocument,System.Boolean,System.Object)"/> method.</para> </remarks>
            <returns> An object that will be used specifically by the foreign translator for document translation. </returns>
            <param name="engine"> The engine that will perform the recognition. </param>
            <param name="doc"> The document that will be populated by the engine. </param>
        </member>
        <member name="M:Atalasoft.Ocr.IForeignTranslator.Translate(Atalasoft.Ocr.OcrEngine,Atalasoft.Ocr.OcrDocument,System.String,System.String,System.Object)">
            <overloads> Translate an <STRONG>OcrDocument </STRONG>object into a document of the given type, writing to either a
            stream or a file. </overloads>
            <exception> Throws if the MIME type is unknown. </exception>
        </member>
        <member name="M:Atalasoft.Ocr.IForeignTranslator.Translate(Atalasoft.Ocr.OcrEngine,Atalasoft.Ocr.OcrDocument,System.String,System.IO.Stream,System.Object)">
            <overloads> Translate an <STRONG>OcrDocument </STRONG>object into a document of the given type, writing to either a
            stream or a file. </overloads>
            <exception> Throws if the MIME type is unknown. </exception>
        </member>
        <member name="M:Atalasoft.Ocr.IForeignTranslator.Finish(Atalasoft.Ocr.OcrEngine,Atalasoft.Ocr.OcrDocument,System.Boolean,System.Object)">
            <summary> Allow a foreign translator to perform any necessary cleanup. </summary>
            <remarks> While some foreign translator implementations may not need an associated engine, it is best to always
            provide one as some translators will require it. </remarks>
            <param name="engine"> The engine that has done the recognition. </param>
            <param name="doc"> The recognized document. </param>
            <param name="successful"> Indicates that recognition was successful. </param>
            <param name="translationObject"> An object originally provided by the return value of the <see
            cref="M:Atalasoft.Ocr.IForeignTranslator.Prepare(Atalasoft.Ocr.OcrEngine,Atalasoft.Ocr.OcrDocument)"/> method. </param>
        </member>
        <member name="T:Atalasoft.Ocr.IPerPageTranslator">
            <summary> <para>IPerPageTranslator is an interface that allows IForeignTranslator objects to translate a document
            while it is being recognized on a page-by-page basis.  In many cases this can result in a smaller memory load by
            allowing the translator to release per page resources immediately.</para>
            <para>In general, client code need not worry about this interface as it is called by the OcrEngine object.</para>
            </summary>
        </member>
        <member name="P:Atalasoft.Ocr.IPerPageTranslator.UseIForeignTranslatorInterface">
            <summary> Indicates whether or not the called OcrEngine object should use the IForeignTranslator interface of the
            IPerPageTranslator interface for document translation </summary>
        </member>
        <member name="M:Atalasoft.Ocr.IPerPageTranslator.Prepare(Atalasoft.Ocr.OcrEngine,Atalasoft.Ocr.OcrDocument,System.String,System.String)">
            <overloads> Allows a translator to prepare itself for subsequent translation </overloads>
        </member>
        <member name="M:Atalasoft.Ocr.IPerPageTranslator.Prepare(Atalasoft.Ocr.OcrEngine,Atalasoft.Ocr.OcrDocument,System.String,System.IO.Stream)">
            <overloads> Allows a translator to prepare itself for subsequent translation </overloads>
        </member>
        <member name="M:Atalasoft.Ocr.IPerPageTranslator.TranslatePage(Atalasoft.Ocr.OcrEngine,Atalasoft.Ocr.OcrDocument,Atalasoft.Ocr.OcrPage,System.Object,System.Boolean,System.Int32,System.Int32)">
            <summary> Translates a single page into the translator's output format </summary>
            <param name="engine"> The OcrEngine requesting translation </param>
            <param name="doc"> The OcrDocument which receives OcrPages during translation </param>
            <param name="page"> The last OcrPage that has been translated </param>
            <param name="translationObject"> The object returned by IPerPageTranslator.Prepare </param>
            <param name="totalPagesKnown"> A boolean indicating whether or not the total page count is known </param>
            <param name="pageIndex"> The zero-based index of the current page </param>
            <param name="totalPages"> The total pages (this is only valid if totalPagesKnown is true) </param>
        </member>
        <member name="T:Atalasoft.Ocr.TranslatorCollection">
            <summary> TranslatorCollection represents a standard collection of <see cref="T:Atalasoft.Ocr.ITranslator"/> objects. </summary>
        </member>
        <member name="M:Atalasoft.Ocr.TranslatorCollection.#ctor">
            <summary> Constructs a new TranslatorCollection object. </summary>
            <returns> A new TranslatorCollection object. </returns>
        </member>
        <member name="P:Atalasoft.Ocr.TranslatorCollection.Item(System.Int32)">
            <summary>
            Allows for retrieval of item by index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Atalasoft.Ocr.TranslatorCollection.Add(Atalasoft.Ocr.ITranslator)">
            <summary> Adds an <see cref="T:Atalasoft.Ocr.ITranslator"/> to the collection. </summary>
            <returns> The position into which the new element was inserted. </returns>
            <param name="value"> The <see cref="T:Atalasoft.Ocr.ITranslator"/> to add to the collection. </param>
        </member>
        <member name="M:Atalasoft.Ocr.TranslatorCollection.IndexOf(Atalasoft.Ocr.ITranslator)">
            <summary> Returns the index of a specified <see cref="T:Atalasoft.Ocr.ITranslator"/> in the collection. </summary>
            <returns> The index of <EM>value</EM> if found; otherwise -1. </returns>
            <param name="value"> The <see cref="T:Atalasoft.Ocr.ITranslator"/> to locate in the collection. </param>
        </member>
        <member name="M:Atalasoft.Ocr.TranslatorCollection.Insert(System.Int32,Atalasoft.Ocr.ITranslator)">
            <summary> Inserts an <see cref="T:Atalasoft.Ocr.ITranslator"/> into the collection at specified position. </summary>
            <returns> n/a </returns>
            <param name="index"> The zero-based position at which the <see cref="T:Atalasoft.Ocr.ITranslator"/> should be inserted. </param>
            <param name="value"> The <see cref="T:Atalasoft.Ocr.ITranslator"/> to insert in the collection. </param>
        </member>
        <member name="M:Atalasoft.Ocr.TranslatorCollection.Remove(Atalasoft.Ocr.ITranslator)">
            <summary> Removes the first occurrence of the specified <see cref="T:Atalasoft.Ocr.ITranslator"/> from the collection. </summary>
            <returns> n/a </returns>
            <param name="value"> Removes the first occurrence of the specified <see cref="T:Atalasoft.Ocr.ITranslator"/> from the collection.
            </param>
        </member>
        <member name="M:Atalasoft.Ocr.TranslatorCollection.Contains(Atalasoft.Ocr.ITranslator)">
            <summary> Determines whether the collection contains a specified <see cref="T:Atalasoft.Ocr.ITranslator"/>. </summary>
            <returns> True if the object was found, false otherwise. </returns>
            <param name="value"> The <see cref="T:Atalasoft.Ocr.ITranslator"/> to locate in the collection. </param>
        </member>
        <member name="M:Atalasoft.Ocr.TranslatorCollection.CopyTo(Atalasoft.Ocr.ITranslator[],System.Int32)">
            <summary> Copies the elements of the <see cref="T:System.Collections.ICollection"/> to an <see cref="T:System.Array"/>, 
            starting at a particular <c>Array</c> index. </summary>
            <param name="array"> The one-dimensional <see cref="T:System.Array"/>
            that is the destination of the elements copied from the collection. The <c>Array</c> must have zero-based indexing.
            </param>
            <param name="index"> The zero-based index in <I>array</I> at which copying begins. </param>
        </member>
        <member name="T:Atalasoft.Ocr.Voting.BasicWordNominator">
            <summary> Provides basic functionality for nominating words for voting. </summary>
        </member>
        <member name="F:Atalasoft.Ocr.Voting.BasicWordNominator._wordConfidenceLimit">
            <summary> Gets or sets the limit for deciding if a word should be a candidate.  Words with confidence under this
            limit will be a candidate </summary>
            <remarks> This value should be between 0 and 1.  Useful values will be in the range of 0.50 to 0.70 </remarks>
        </member>
        <member name="F:Atalasoft.Ocr.Voting.BasicWordNominator._glyphConfidenceLimit">
            <summary> Gets or sets the limit for deciding if a word should be a candidate.  Glyphs in the word with confidence
            under this limit will cause the word to be a candidate. </summary>
            <remarks> This value should be between 0 and 1.  Useful values will be in the range of 0.50 to 0.70 </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.Voting.BasicWordNominator.#ctor">
            <summary> Construct a BasicWordNominator object </summary>
            <overloads> Construct a BasicWordNominator object </overloads>
        </member>
        <member name="M:Atalasoft.Ocr.Voting.BasicWordNominator.#ctor(System.Double,System.Double)">
            <summary> Construct a BasicWordNominator object </summary>
            <param name="wordConfidenceLimit"> The limit for deciding if a word should be a candidate.  Words with confidence
            under this limit will be candidates. </param>
            <param name="glyphConfidenceLimit"> The limit for deciding if a word should be a candidate.  Glyphs with confidence
            under this limit will cause the word to be a candidate </param>
        </member>
        <member name="M:Atalasoft.Ocr.Voting.BasicWordNominator.IsCandidate(Atalasoft.Ocr.OcrWord)">
            <inhertidoc/>
        </member>
        <member name="P:Atalasoft.Ocr.Voting.BasicWordNominator.WordConfidenceLimit">
            <summary> Gets or sets the limit for deciding if a word should be a candidate.  Words with confidence under this
            limit will be a candidate </summary>
            <remarks> This value should be between 0 and 1.  Useful values will be in the range of 0.50 to 0.70 </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.Voting.BasicWordNominator.GlyphConfidenceLimit">
            <summary> Gets or sets the limit for deciding if a word should be a candidate.  Glyphs in the word with confidence
            under this limit will cause the word to be a candidate. </summary>
            <remarks> This value should be between 0 and 1.  Useful values will be in the range of 0.50 to 0.70 </remarks>
        </member>
        <member name="T:Atalasoft.Ocr.Voting.BasicWordSelector">
            <summary> Provides basic functionality for choosing the best word from a set of words. </summary>
        </member>
        <member name="M:Atalasoft.Ocr.Voting.BasicWordSelector.#ctor">
            <summary> Constructs a new BasicWordSelector object </summary>
        </member>
        <member name="M:Atalasoft.Ocr.Voting.BasicWordSelector.SelectWord(Atalasoft.Ocr.OcrWord,Atalasoft.Ocr.OcrWordCollection)">
            <inheritdoc/>
        </member>
        <member name="T:Atalasoft.Ocr.Voting.INominator">
            <summary> Defines that interface for nominating a word. </summary>
        </member>
        <member name="M:Atalasoft.Ocr.Voting.INominator.IsCandidate(Atalasoft.Ocr.OcrWord)">
            <summary> Determine if a word is possible candidate for voting. </summary>
            <returns> Returns <EM>true</EM> if the word should be a candidate for voting, <EM>false</EM> otherwise. </returns>
            <param name="word"> The word that might be nominated. </param>
        </member>
        <member name="T:Atalasoft.Ocr.Voting.IWordSelector">
            <summary> Defines the interface for selecting a word. </summary>
        </member>
        <member name="M:Atalasoft.Ocr.Voting.IWordSelector.SelectWord(Atalasoft.Ocr.OcrWord,Atalasoft.Ocr.OcrWordCollection)">
            <summary> Select a word from a set of candidate words. </summary>
            <returns> Returns the best word among all the choices.  SelectWord must return non-null. </returns>
            <param name="originalWord"> The original word recognized by the primary engine and nominated for voting </param>
            <param name="words"> Alternate words provided by other engines. </param>
        </member>
        <member name="T:Atalasoft.Ocr.Voting.VotingEngine">
            <summary> An implementation of OcrEngine which includes voting. </summary>
        </member>
        <member name="F:Atalasoft.Ocr.Voting.VotingEngine._primaryEngine">
            <summary> Sets or gets the primary engine used for Ocr. </summary>
            <remarks> Must not be null.  Default value is set by the VotingEngine constructor. </remarks>
        </member>
        <member name="F:Atalasoft.Ocr.Voting.VotingEngine._alternateEngines">
            <summary> Gets the collection of alternate engines for the voting engine. </summary>
            <remarks> In order to vote on suspect words, this collection must contain at least one engine. </remarks>
        </member>
        <member name="F:Atalasoft.Ocr.Voting.VotingEngine._initializeAndShutDownAlternateEngines">
            <summary> Gets or sets a property to control whether or not alternate engines should be initialized and shut down
            automatically </summary>
            <remarks> There may be some speed gains by not having to initialize and shut down every engine contained within the
            voting engine.  Default value is <EM>true</EM>. </remarks>
            <value> <EM>True</EM> if the VotingEngine will automatically initialize and shut down alternate engines,
            <EM>false</EM> otherwise. </value>
        </member>
        <member name="F:Atalasoft.Ocr.Voting.VotingEngine._nominator">
            <summary> Gets or sets the nominator that is used for the voting engine. </summary>
            <remarks> Must not be set to null.  By default is set to an instance of BasicWordNominator. </remarks>
        </member>
        <member name="F:Atalasoft.Ocr.Voting.VotingEngine._wordSelector">
            <summary> Gets or sets the WordSelector used for the VotingEngine. </summary>
            <remarks> Must not be null.  Default value is an instance of BasicWordSelector. </remarks>
        </member>
        <member name="M:Atalasoft.Ocr.Voting.VotingEngine.#ctor(Atalasoft.Ocr.OcrEngine)">
            <summary> Constructs a new VotingEngine object. </summary>
            <param name="primaryEngine"> An engine to use as a primary Ocr engine.  Must not be null. </param>
        </member>
        <member name="M:Atalasoft.Ocr.Voting.VotingEngine.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:Atalasoft.Ocr.Voting.VotingEngine.ShutDown">
            <inheritdoc/>
        </member>
        <member name="M:Atalasoft.Ocr.Voting.VotingEngine.Recognize(Atalasoft.Imaging.AtalaImage)">
            <inheritdoc/>
        </member>
        <member name="M:Atalasoft.Ocr.Voting.VotingEngine.GetSupportedRecognitionCultures">
            <inheritdoc/>
        </member>
        <member name="M:Atalasoft.Ocr.Voting.VotingEngine.RecognitionCultureChanged">
            <inheritdoc/>
        </member>
        <member name="P:Atalasoft.Ocr.Voting.VotingEngine.DefaultRecognitionCulture">
            <inheritdoc/>
        </member>
        <member name="M:Atalasoft.Ocr.Voting.VotingEngine.GetAvailablePreprocessingOptions">
            <inheritdoc/>
        </member>
        <member name="M:Atalasoft.Ocr.Voting.VotingEngine.GetDefaultPreprocessingOptions">
            <inheritdoc/>
        </member>
        <member name="P:Atalasoft.Ocr.Voting.VotingEngine.PrimaryEngine">
            <summary> Sets or gets the primary engine used for Ocr. </summary>
            <remarks> Must not be null.  Default value is set by the VotingEngine constructor. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.Voting.VotingEngine.AlternateEngines">
            <summary> Gets the collection of alternate engines for the voting engine. </summary>
            <remarks> In order to vote on suspect words, this collection must contain at least one engine. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.Voting.VotingEngine.InitializeAndShutDownAlternateEngines">
            <summary> Gets or sets a property to control whether or not alternate engines should be initialized and shut down
            automatically </summary>
            <remarks> There may be some speed gains by not having to initialize and shut down every engine contained within the
            voting engine.  Default value is <EM>true</EM>. </remarks>
            <value> <EM>True</EM> if the VotingEngine will automatically initialize and shut down alternate engines,
            <EM>false</EM> otherwise. </value>
        </member>
        <member name="P:Atalasoft.Ocr.Voting.VotingEngine.Nominator">
            <summary> Gets or sets the nominator that is used for the voting engine. </summary>
            <remarks> Must not be set to null.  By default is set to an instance of BasicWordNominator. </remarks>
        </member>
        <member name="P:Atalasoft.Ocr.Voting.VotingEngine.WordSelector">
            <summary> Gets or sets the WordSelector used for the VotingEngine. </summary>
            <remarks> Must not be null.  Default value is an instance of BasicWordSelector. </remarks>
        </member>
        <member name="T:Atalasoft.Ocr.VotingEngine.NamespaceDoc">
            <summary>
            Provides the infrastructure necessary to create a configurable Ocr engine that can vote on words in a document.
            </summary>
        </member>
        <member name="T:Atalasoft.RegistryAccess">
            <summary>
            Summary description for RegistryAccess.
            </summary>
        </member>
        <member name="M:Atalasoft.RegistryAccess.AssemblyBasePath(System.String)">
            <summary>
            If the Registry Value registryKey + product + "\\" + version exists,
            return the path specified by that entry. Otherwise, return the base path
            of the executing assembly.
            </summary>
            <param name="product">The product name used for the registry lookup.</param>
            <returns>A path</returns>
        </member>
    </members>
</doc>
